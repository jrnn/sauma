{"version":3,"sources":["component/widgets/header.js","component/widgets/accordion.js","component/alerts/form_error.js","component/forms/activity_form.js","component/forms/quota_form.js","util/form_options.js","container/quota_form.js","util/parser.js","util/form_state.js","action/helper.js","action/notification.js","action/activity.js","container/activity/activity_form.js","component/forms/attachment_form.js","util/form_validation.js","container/attachment/attachment_form.js","component/alerts/empty_list.js","component/lists/attachment_list.js","component/widgets/expandable.js","action/attachment.js","container/attachment/attachment.js","component/forms/comment_form.js","component/lists/comment_list.js","action/comment.js","container/comment.js","component/alerts/error.js","action/material.js","action/task.js","container/activity/activity.js","component/widgets/spinner.js","root/activity.js","component/forms/client_form.js","action/client.js","container/client/client_form.js","component/lists/list.js","component/widgets/search_field.js","container/list.js","action/project.js","component/lists/list_filters.js","component/lists/list_rows.js","container/client/client.js","component/widgets/link_button.js","container/client/clients.js","root/client.js","component/forms/address_form.js","container/address_form.js","component/forms/employee_form.js","action/employee.js","container/employee/employee_form.js","container/employee/employee.js","container/employee/employees.js","root/employee.js","component/forms/material_form.js","container/material/material_form.js","container/material/material.js","container/material/materials.js","root/material.js","container/my/my_form.js","component/alerts/password_reqs.js","component/forms/password_form.js","container/my/my_password.js","container/my/my.js","root/my.js","component/widgets/embedded_map.js","component/widgets/assigner.js","container/project/project_employees.js","component/forms/project_form.js","container/project/project_form.js","container/project/project_tasks.js","container/project/project.js","component/widgets/google_api_map.js","container/project/projects.js","root/project.js","container/task/task_activities.js","component/forms/task_form.js","container/task/task_form.js","container/task/task.js","container/task/tasks.js","root/task.js","root/home.js","component/forms/forgot_form.js","component/forms/login_form.js","action/auth.js","container/login_form.js","component/forms/reset_password.js","container/reset_password.js","root/login.js","component/widgets/back_button.js","component/widgets/navbar.js","container/navbar.js","component/alerts/notification.js","app.js","reducer/auth.js","reducer/standard_reducers.js","reducer/employee.js","reducer/notification.js","reducer/project.js","reducer/generic.js","store.js","index.js"],"names":["Header","react_default","a","createElement","className","Container","Accordion","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","setState","active","state","render","Grid","onClick","style","cursor","padding","Column","floated","width","Header_Header","content","title","textAlign","Icon","name","display","children","React","Component","FormError","_ref","error","Label","basic","color","pointing","ActivityForm","activity","errors","onChange","readOnly","Form","Field","Input","disabled","value","id","concat","project","projectId","task","owner","firstName","lastName","undefined","description","TextArea","autoHeight","placeholder","minHeight","form_error","date","icon","type","hours","label","labelPosition","Checkbox","checked","contractScope","QuotaForm","header","List","divided","relaxed","verticalAlign","quotas","map","q","m","material","quantity","onDelete","Item","key","Content","transparent","Button","compact","Description","unit","Dropdown","onAdd","options","search","selection","quotaOptions","materials","materialIds","filter","includes","sort","m1","m2","localeCompare","text","unassignedOptions","employees","e","e1","e2","QuotaFormContainer","handleAdd","find","toConsumableArray","sync","handleChange","_ref2","objectSpread","handleDelete","_ref3","preventDefault","quota_form","connect","data","items","formatDate","Date","toISOString","substring","ex","parseNumber","num","trim","length","val","Number","replace","isNaN","parseQuotas","parseUrlQuery","query","res","arguments","split","decodeURIComponent","trimDescription","activityState","signed","addressState","city","country","street","streetExt","zipCode","clientState","c","businessId","domicile","legalEntity","employeeState","email","phone","username","administrator","enabled","address","materialState","unitCost","projectState","p","contactPerson","endDate","startDate","client","manager","taskState","t","daysNeeded","completed","bearer","token","headers","authorization","errorHandler","ValidationError","response","message","validation","status","shouldFetch","updated","pending","now","standardActions","types","fetch","FETCH","fetchOk","FETCH_OK","payload","fetchError","FETCH_ERROR","createOk","item","CREATED","updateOk","UPDATED","write","WRITE","writeError","WRITE_ERROR","writeInvalid","validationErrors","WRITE_INVALID","notify","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","setTimeout","stop","_x","apply","url","WRITE_RESET","actions","resetWriteActivity","fetchActivities","axios","get","sent","t0","fetchActivitiesIfNeeded","_callee2","getState","_context2","abrupt","Promise","resolve","_x2","_x3","updateActivity","_ref4","_callee4","_context4","put","_x5","ActivityFormContainer","defineProperty","handleSave","_this$props","auth","history","isNew","save","handleSign","_this$props2","sign","syncQuotaState","_this$props3","canSign","admin","isOwner","loading","activity_form","Divider","container_quota_form","hidden","fluid","withRouter","activities","_callee3","_context3","post","_x4","createActivity","_ref5","_callee5","_context5","_x6","signOffActivity","AttachmentForm","onSubmit","file","fileSize","process","MAX_FILESIZE","fileTypes","RegExp","re","source","join","validateFile","test","size","valid","Math","pow","toFixed","AttachmentFormContainer","handleClick","filePicker","click","handleFilePick","target","files","handleSubmit","FormData","append","validateForm","attachment_form","ref","attachments","EmptyList","align","asRow","as","href","createdOn","AttachmentList","a1","a2","parse","empty_list","Expandable","open","button","REQUEST_START","REQUEST_OVER","AttachmentContainer","upload","entity","thunk","uploadAttachment","expandable","attachment_list","attachment_attachment_form","updateThunk","actionOnSuccess","content-type","CommentForm","CommentList","comments","c1","c2","CommentContainer","uploadComment","comment_list","comment_form","Error","Message","resetWriteMaterial","fetchMaterials","fetchMaterialsIfNeeded","updateMaterial","resetWriteTask","fetchTasks","fetchTasksIfNeeded","updateTask","ActivityContainer","componentDidMount","refresh","componentWillUnmount","reset","alerts_error","accordion","activity_activity_form","attachment","comment","match","params","taskId","location","tasks","Spinner","Loader","inline","ActivityRoot","spinner","react_router","component","exact","path","ClientForm","resetWriteClient","fetchClients","fetchClientsIfNeeded","updateClient","updates","ClientFormContainer","client_form","clients","createClient","CommonList","entities","toRow","SearchField","ListContainer","toLowerCase","search_field","list","ASSIGNED","UNASSIGNED","assignEmployeeOk","employee","unassignEmployeeOk","resetWriteProject","fetchProjects","fetchProjectsIfNeeded","updateProject","filterActivities","d","h","b","filterActivitiesForEmployee","filterClients","filterEmployees","filterMaterials","filterProjects","projects","p1","p2","filterProjectsForClient","filterTasks","t1","t2","filterTasksForProject","activityRow","Link","to","activityRowForEmployee","clientRow","employeeRow","employeeRowForProject","removeFunc","materialRow","projectRow","projectRowForClient","taskRow","taskRowForProject","ClientContainer","client_client_form","container_list","LinkButton","link_button","ClientRoot","ClientsContainer","AddressForm","AddressFormContainer","address_form","EmployeeForm","resetWriteEmployee","fetchEmployees","fetchEmployeesIfNeeded","updateEmployee","EmployeeFormContainer","syncAddressState","employee_form","container_address_form","Group","widths","createEmployee","EmployeeContainer","employee_employee_form","EmployeeRoot","EmployeesContainer","MaterialForm","iconPosition","MaterialFormContainer","material_form","createMaterial","MaterialContainer","material_material_form","MaterialRoot","MaterialsContainer","initState","MyFormContainer","_this$props$auth","PasswordReqs","bulleted","reqsPopup","comp","Popup","password_reqs","on","trigger","PasswordForm","password","newPassword","confirmPassword","MyPasswordContainer","changePassword","password_form","passwords","MyContainer","my_form","my_password","_state$auth","MyRoot","encodeURI","EmbeddedMap","frameBorder","height","border","src","Assigner","selected","ProjectEmployeesContainer","assign","assignEmployeeToProject","unassign","unassignEmployeeFromProject","assigner","_ref6","_callee6","_context6","delete","_x7","ProjectForm","managers","ProjectFormContainer","project_form","createProject","ProjectContainer","project_project_form","embedded_map","project_employees","project_tasks","loadApi","apiKey","s","document","async","defer","body","appendChild","renderMap","mapRef","addresses","_window$google$maps","window","google","maps","Map","Marker","current","center","lat","lng","zoom","position","GoogleApiMap","getElementById","createRef","google_api_map","ProjectRoot","ProjectsContainer","TaskForm","TaskFormContainer","task_form","createTask","TaskContainer","task_task_form","task_activities","TaskRoot","TasksContainer","ForgotForm","LoginForm","isDisabled","setAuth","logout","localStorage","removeItem","LoginFormContainer","handleForgot","forgot","handleLogin","_this$state","login","login_form","forgot_form","forgotError","forgotPending","setItem","JSON","stringify","ResetPasswordForm","ResetPasswordContainer","resetPassword","reset_password","BackButton","goBack","pathname","inverted","menu","Menu","i","secondary","vertical","NavBar","NavBarContainer","handleLogout","back_button","navbar","notification","Modal","closeOnDimmerClick","defaultOpen","App","checkAuth","container_navbar","alerts_notification","home","root_login","getItem","action","standardDataReducer","standardMinimalReducer","standardWriteReducer","combineReducers","stack","reducers","store","createStore","composeWithDevTools","applyMiddleware","es","react_router_dom"],"mappings":"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","file":"static/js/main.17118ba0.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { Container } from \"semantic-ui-react\"\r\n\r\nconst Header = () =>\r\n  <div className=\"full-width-bg-blue\">\r\n    <div className=\"wrapper padded\">\r\n      <Container>\r\n        <h1 className=\"top-header\">Sauma</h1>\r\n      </Container>\r\n    </div>\r\n  </div>\r\n\r\nexport default Header\r\n","import PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { Grid, Header, Icon } from \"semantic-ui-react\"\r\n\r\nclass Accordion extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { active : props.active || false }\r\n  }\r\n\r\n  toggle = () =>\r\n    this.setState({ active : !this.state.active })\r\n\r\n  render = () => {\r\n    let { active } = this.state\r\n\r\n    return (\r\n      <div className=\"accordion\">\r\n        <Grid\r\n          onClick={this.toggle}\r\n          style={{\r\n            cursor : \"pointer\",\r\n            padding : \"1.5rem 0rem\"\r\n          }}\r\n        >\r\n          <Grid.Column floated=\"left\" width={13}>\r\n            <Header content={this.props.title}/>\r\n          </Grid.Column>\r\n          <Grid.Column floated=\"right\" textAlign=\"right\" width={3}>\r\n            <Icon\r\n              name={( active )\r\n                ? \"chevron down\"\r\n                : \"chevron up\"\r\n              }\r\n            />\r\n          </Grid.Column>\r\n        </Grid>\r\n        <div style={{\r\n          display : ( active ) ? \"\" : \"none\",\r\n          padding : \"1rem 0rem 3rem 0rem\"\r\n        }}>\r\n          {this.props.children}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nAccordion.propTypes = {\r\n  active : PropTypes.bool,\r\n  children : PropTypes.element.isRequired,\r\n  title : PropTypes.string.isRequired\r\n}\r\n\r\nexport default Accordion\r\n","import PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { Label } from \"semantic-ui-react\"\r\n\r\nconst FormError = ({ error }) =>\r\n  ( !error )\r\n    ? null\r\n    : <Label\r\n      basic\r\n      color=\"red\"\r\n      content={error}\r\n      pointing\r\n    />\r\n\r\nFormError.propTypes = {\r\n  error : PropTypes.string\r\n}\r\n\r\nexport default FormError\r\n","import FormError from \"../alerts/form_error\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { Form, Input, TextArea } from \"semantic-ui-react\"\r\n\r\nconst ActivityForm = (props) => {\r\n  let { activity, errors, onChange, readOnly, state } = props\r\n\r\n  return (\r\n    <div>\r\n      <Form.Field>\r\n        <label>Tehtävä</label>\r\n        <Input\r\n          disabled\r\n          value={( activity.id )\r\n            ? `${activity.project.projectId} — ${activity.task.name}`\r\n            : `${activity.task.project.projectId} — ${activity.task.name}`\r\n          }\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>Tekijä</label>\r\n        <Input\r\n          disabled\r\n          value={( activity.id )\r\n            ? `${activity.owner.firstName} ${activity.owner.lastName}`\r\n            : props.owner || \"\"\r\n          }\r\n        />\r\n      </Form.Field>\r\n      <Form.Field error={errors.description !== undefined}>\r\n        <label>Kuvaus</label>\r\n        <TextArea\r\n          autoHeight\r\n          name=\"description\"\r\n          onChange={onChange}\r\n          placeholder=\"Kirjoita kuvaus mitä tehty\"\r\n          readOnly={readOnly}\r\n          style={{ minHeight : 100 }}\r\n          value={state.description}\r\n        />\r\n        <FormError error={errors.description} />\r\n      </Form.Field>\r\n      <Form.Field error={errors.date !== undefined}>\r\n        <label>Päivämäärä</label>\r\n        <Input\r\n          icon=\"calendar\"\r\n          name=\"date\"\r\n          onChange={onChange}\r\n          placeholder=\"pp-kk-vvvv\"\r\n          readOnly={readOnly}\r\n          type=\"date\"\r\n          value={state.date}\r\n        />\r\n        <FormError error={errors.date} />\r\n      </Form.Field>\r\n      <Form.Field error={errors.hours !== undefined}>\r\n        <label>Työtunnit</label>\r\n        <Input\r\n          label={{ basic : true, content : \"tuntia\" }}\r\n          labelPosition=\"right\"\r\n          name=\"hours\"\r\n          onChange={onChange}\r\n          placeholder=\"Pyöristyy lähimpään kokonaislukuun\"\r\n          readOnly={readOnly}\r\n          value={state.hours}\r\n        />\r\n        <FormError error={errors.hours} />\r\n      </Form.Field>\r\n      <Form.Field className=\"padded\">\r\n        <Form.Checkbox\r\n          checked={state.contractScope}\r\n          label=\"Urakan puitteissa\"\r\n          name=\"contractScope\"\r\n          onChange={onChange}\r\n          readOnly={readOnly}\r\n        />\r\n      </Form.Field>\r\n    </div>\r\n  )\r\n}\r\n\r\nActivityForm.propTypes = {\r\n  activity : PropTypes.object.isRequired,\r\n  errors : PropTypes.object.isRequired,\r\n  onChange : PropTypes.func.isRequired,\r\n  owner : PropTypes.string.isRequired,\r\n  readOnly : PropTypes.bool.isRequired,\r\n  state : PropTypes.object.isRequired\r\n}\r\n\r\nexport default ActivityForm\r\n","import PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { Button, Dropdown, Form, Input, List } from \"semantic-ui-react\"\r\n\r\nconst asRow = (m, quantity, onChange, onDelete, readOnly) =>\r\n  <List.Item key={m.id}>\r\n    <List.Content floated=\"right\">\r\n      <Input\r\n        name={m.id}\r\n        onChange={onChange}\r\n        readOnly={readOnly}\r\n        style={{ width : \"60px\" }}\r\n        transparent\r\n        value={quantity}\r\n      />\r\n      {( readOnly )\r\n        ? null\r\n        : <Button\r\n          basic\r\n          compact\r\n          icon=\"delete\"\r\n          name={m.id}\r\n          onClick={onDelete}\r\n        />\r\n      }\r\n    </List.Content>\r\n    <List.Content>\r\n      <List.Header content={m.name} />\r\n      <List.Description content={m.unit} />\r\n    </List.Content>\r\n  </List.Item>\r\n\r\nconst QuotaForm = (props) =>\r\n  <div>\r\n    <Form.Field>\r\n      <label>{props.header}</label>\r\n      <List\r\n        divided\r\n        relaxed\r\n        verticalAlign=\"middle\"\r\n      >\r\n        {props.state.quotas\r\n          .map(q => asRow(\r\n            q.material,\r\n            q.quantity,\r\n            props.onChange,\r\n            props.onDelete,\r\n            props.readOnly))\r\n        }\r\n      </List>\r\n    </Form.Field>\r\n    {( props.readOnly )\r\n      ? null\r\n      : <Form.Field>\r\n        <Dropdown\r\n          name=\"material\"\r\n          onChange={props.onAdd}\r\n          options={props.options}\r\n          placeholder=\"Lisää uusi materiaali\"\r\n          search={true}\r\n          selection\r\n          value=\"\"\r\n        />\r\n      </Form.Field>\r\n    }\r\n  </div>\r\n\r\nQuotaForm.propTypes = {\r\n  header : PropTypes.string.isRequired,\r\n  onAdd : PropTypes.func.isRequired,\r\n  onChange : PropTypes.func.isRequired,\r\n  onDelete : PropTypes.func.isRequired,\r\n  options : PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  readOnly : PropTypes.bool.isRequired,\r\n  state : PropTypes.object.isRequired\r\n}\r\n\r\nexport default QuotaForm\r\n","export const clientOptions = (clients, project) =>\r\n  ( project && project.client )\r\n    ? [\r\n      {\r\n        key : project.client.id,\r\n        text : project.client.legalEntity,\r\n        value : project.client.id\r\n      }\r\n    ]\r\n    : clients.map(c => (\r\n      {\r\n        key : c.id,\r\n        text : c.legalEntity,\r\n        value : c.id\r\n      }\r\n    )).sort((c1, c2) =>\r\n      c1.text.localeCompare(c2.text))\r\n\r\nexport const managerOptions = (employees) =>\r\n  employees\r\n    .filter(e => e.administrator)\r\n    .map(e => ({\r\n      key : e.id,\r\n      text : `${e.lastName}, ${e.firstName}`,\r\n      value : e.id\r\n    }))\r\n    .sort((e1, e2) =>\r\n      e1.text.localeCompare(e2.text))\r\n\r\nexport const quotaOptions = (materials, quotas) => {\r\n  let materialIds = quotas\r\n    .map(q => q.material.id)\r\n\r\n  return materials\r\n    .filter(m => !materialIds.includes(m.id))\r\n    .sort((m1, m2) => m1.name.localeCompare(m2.name))\r\n    .map(m => ({\r\n      key : m.id,\r\n      text : m.name,\r\n      value : m.id\r\n    }))\r\n}\r\n\r\nexport const unassignedOptions = (employees, project) =>\r\n  employees\r\n    .filter(e => !project.employees.includes(e.id))\r\n    .map(e => ({\r\n      key : e.id,\r\n      text : `${e.lastName}, ${e.firstName}`,\r\n      value : e.id\r\n    }))\r\n    .sort((e1, e2) =>\r\n      e1.text.localeCompare(e2.text))\r\n","import PropTypes from \"prop-types\"\r\nimport QuotaForm from \"../component/forms/quota_form\"\r\nimport React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { quotaOptions } from \"../util/form_options\"\r\n\r\nclass QuotaFormContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { quotas : props.quotas }\r\n  }\r\n\r\n  handleAdd = (e, { value }) => {\r\n    let material = this.props.materials\r\n      .find(m => m.id === value)\r\n\r\n    let quotas = [\r\n      ...this.state.quotas,\r\n      { material, quantity : 0 }\r\n    ]\r\n\r\n    this.setState({ quotas })\r\n    this.props.sync(quotas)\r\n  }\r\n\r\n  handleChange = (e, { name, value }) => {\r\n    let quotas = this.state.quotas\r\n      .map(q => ( q.material.id === name )\r\n        ? { ...q, quantity : value }\r\n        : q\r\n      )\r\n\r\n    this.setState({ quotas })\r\n    this.props.sync(quotas)\r\n  }\r\n\r\n  handleDelete = (e, { name }) => {\r\n    e.preventDefault()\r\n\r\n    let quotas = this.state.quotas\r\n      .filter(q => q.material.id !== name)\r\n\r\n    this.setState({ quotas })\r\n    this.props.sync(quotas)\r\n  }\r\n\r\n  render = () =>\r\n    <QuotaForm\r\n      header={this.props.header}\r\n      onAdd={this.handleAdd}\r\n      onChange={this.handleChange}\r\n      onDelete={this.handleDelete}\r\n      options={quotaOptions(\r\n        this.props.materials, this.state.quotas)\r\n      }\r\n      readOnly={this.props.readOnly}\r\n      state={this.state}\r\n    />\r\n}\r\n\r\nconst mapStateToProps = (state) =>\r\n  ({ materials : state.materials.data.items })\r\n\r\nQuotaFormContainer.propTypes = {\r\n  header : PropTypes.string.isRequired,\r\n  materials : PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  quotas : PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  readOnly : PropTypes.bool.isRequired,\r\n  sync : PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(QuotaFormContainer)\r\n","export const formatDate = (date) => {\r\n  try {\r\n    return new Date(date)\r\n      .toISOString()\r\n      .substring(0, 10)\r\n\r\n  } catch (ex) { return \"\" }\r\n}\r\n\r\nexport const parseNumber = (num) => {\r\n  if ( num.trim().length === 0 )\r\n    return \"NaN\"\r\n\r\n  let val = Number(num.replace(\",\", \".\"))\r\n\r\n  return ( isNaN(val) )\r\n    ? \"NaN\"\r\n    : val\r\n}\r\n\r\nexport const parseQuotas = (quotas) =>\r\n  quotas\r\n    .filter(q => q.quantity > 0 &&\r\n                 parseNumber(q.quantity) !== \"NaN\")\r\n    .map(q => ({\r\n      material : q.material.id,\r\n      quantity : parseNumber(q.quantity)\r\n    }))\r\n\r\nexport const parseUrlQuery = (query, res = {}) => {\r\n  if ( query[0] !== \"?\" )\r\n    return res\r\n\r\n  query\r\n    .substring(1)\r\n    .split(\"&\")\r\n    .map(q => {\r\n      let key = decodeURIComponent(q.split(\"=\")[0])\r\n      let value = decodeURIComponent(q.split(\"=\")[1] || \"\")\r\n      return res[key] = value\r\n    })\r\n\r\n  return res\r\n}\r\n\r\nexport const trimDescription = (description) =>\r\n  (description.length < 40)\r\n    ? description\r\n    : `${description.substring(0, 40)}...`\r\n","import { formatDate } from \"./parser\"\r\n\r\nexport const activityState = (a) => {\r\n  let state = {\r\n    description : a.description || \"\",\r\n    hours : a.hours || \"\",\r\n    quotas : a.quotas || []\r\n  }\r\n\r\n  state.date = ( a.date )\r\n    ? formatDate(a.date)\r\n    : \"\"\r\n  state.contractScope = ( a.id )\r\n    ? a.contractScope\r\n    : true\r\n  state.signed = ( a.id )\r\n    ? a.signed\r\n    : false\r\n\r\n  return state\r\n}\r\n\r\nexport const addressState = (a) => (\r\n  {\r\n    city : a.city || \"\",\r\n    country : a.country || \"\",\r\n    street : a.street || \"\",\r\n    streetExt : a.streetExt || \"\",\r\n    zipCode : a.zipCode || \"\"\r\n  }\r\n)\r\n\r\nexport const clientState = (c) => {\r\n  let state = {\r\n    businessId : c.businessId || \"\",\r\n    domicile : c.domicile || \"\",\r\n    legalEntity : c.legalEntity || \"\"\r\n  }\r\n\r\n  return state\r\n}\r\n\r\nexport const employeeState = (e) => {\r\n  let state = {\r\n    email : e.email || \"\",\r\n    firstName : e.firstName || \"\",\r\n    lastName : e.lastName || \"\",\r\n    phone : e.phone || \"\",\r\n    username : e.username || \"\"\r\n  }\r\n\r\n  state.administrator = ( e.id )\r\n    ? e.administrator\r\n    : false\r\n  state.enabled = ( e.id )\r\n    ? e.enabled\r\n    : true\r\n\r\n  state.address = addressState(e.address || {})\r\n  return state\r\n}\r\n\r\nexport const materialState = (m) => (\r\n  {\r\n    name : m.name || \"\",\r\n    unit : m.unit || \"\",\r\n    unitCost : m.unitCost || \"\"\r\n  }\r\n)\r\n\r\nexport const projectState = (p) => {\r\n  let state = {\r\n    contactPerson : p.contactPerson || \"\",\r\n    name : p.name || \"\",\r\n    phone : p.phone || \"\",\r\n    projectId : p.projectId || \"\"\r\n  }\r\n\r\n  state.endDate = ( p.endDate )\r\n    ? formatDate(p.endDate)\r\n    : \"\"\r\n  state.startDate = ( p.startDate )\r\n    ? formatDate(p.startDate)\r\n    : \"\"\r\n\r\n  state.client = ( p.client )\r\n    ? p.client.id\r\n    : null\r\n  state.manager = ( p.manager )\r\n    ? p.manager.id\r\n    : null\r\n\r\n  state.address = addressState(p.address || {})\r\n  return state\r\n}\r\n\r\nexport const taskState = (t) => {\r\n  let state = {\r\n    name : t.name || \"\",\r\n    description : t.description || \"\",\r\n    daysNeeded : t.daysNeeded || \"\",\r\n    quotas : t.quotas || []\r\n  }\r\n\r\n  state.endDate = ( t.endDate )\r\n    ? formatDate(t.endDate)\r\n    : \"\"\r\n  state.startDate = ( t.startDate )\r\n    ? formatDate(t.startDate)\r\n    : \"\"\r\n  state.completed = ( t.id )\r\n    ? t.completed\r\n    : false\r\n\r\n  return state\r\n}\r\n","const cacheLifespan = 1 * 60000  // 1 min = 60000 ms\r\n\r\nexport const bearer = (token) =>\r\n  ({ headers : { \"authorization\" : `bearer ${token}` } })\r\n\r\nexport const errorHandler = (ex) => {\r\n  let { ValidationError } = ex.response.data\r\n\r\n  if ( ValidationError )\r\n    return {\r\n      message : \"Virheellinen tai puutteellinen syöte, tarkista antamasi tiedot\",\r\n      validation : ValidationError\r\n    }\r\n\r\n  switch (ex.response.status) {\r\n    case 500 :\r\n      return {\r\n        message : \"Palvelin on nurin, kokeile hetken kuluttua uudelleen\"\r\n      }\r\n    case 404 :\r\n      return {\r\n        message : \"Sivua/resurssia ei ole olemassa, tarkista osoite\"\r\n      }\r\n    case 403 :\r\n      return {\r\n        message : \"Sinulla ei ole oikeuksia tähän sivuun/resurssiin\"\r\n      }\r\n    case 401 :\r\n      return {\r\n        message : \"Istuntosi on vanhentunut, kirjaudu uudestaan\"\r\n      }\r\n    default :\r\n      return {\r\n        message : \"Voi vihveli, jotain meni nyt kaputt. Kokeilepa hetken kuluttua uudelleen...?\"\r\n      }\r\n  }\r\n}\r\n\r\nexport const shouldFetch = (state, key) => {\r\n  let { data } = state[key]\r\n\r\n  return ( !data.updated || data.pending )\r\n    ? false\r\n    : cacheLifespan < (Date.now() - data.updated)\r\n}\r\n\r\n/*\r\n *  STANDARD ACTION CREATORS\r\n */\r\nexport const standardActions = (types) => (\r\n  {\r\n    fetch : () => ({\r\n      type : types.FETCH\r\n    }),\r\n    fetchOk : (items) => ({\r\n      type : types.FETCH_OK,\r\n      payload : items\r\n    }),\r\n    fetchError : (error) => ({\r\n      type : types.FETCH_ERROR,\r\n      payload : error\r\n    }),\r\n    createOk : (item) => ({\r\n      type : types.CREATED,\r\n      payload : item\r\n    }),\r\n    updateOk : (item) => ({\r\n      type : types.UPDATED,\r\n      payload : item\r\n    }),\r\n    write : () => ({\r\n      type : types.WRITE\r\n    }),\r\n    writeError : () => ({\r\n      type : types.WRITE_ERROR\r\n    }),\r\n    writeInvalid : (validationErrors) => ({\r\n      type : types.WRITE_INVALID,\r\n      payload : validationErrors\r\n    })\r\n  }\r\n)\r\n","const timeout = 5000\r\n\r\nexport const notify = (message, type) => {\r\n  return async (dispatch) => {\r\n    setTimeout(() =>\r\n      dispatch({\r\n        type : \"HIDE_NOTIFICATION\"\r\n      }),\r\n    timeout)\r\n\r\n    dispatch({\r\n      type : \"SET_NOTIFICATION\",\r\n      payload : {\r\n        message,\r\n        type\r\n      }\r\n    })\r\n  }\r\n}\r\n","import axios from \"axios\"\r\nimport { bearer, errorHandler, shouldFetch, standardActions } from \"./helper\"\r\nimport { notify } from \"./notification\"\r\n\r\nconst url = \"/api/activities\"\r\n\r\n/*\r\n *  ACTION TYPES\r\n */\r\nexport const types = {\r\n  FETCH : \"FETCH_ACTIVITIES\",\r\n  FETCH_OK : \"FETCH_ACTIVITIES_OK\",\r\n  FETCH_ERROR : \"FETCH_ACTIVITIES_ERROR\",\r\n  WRITE : \"WRITE_ACTIVITY\",\r\n  WRITE_ERROR : \"WRITE_ACTIVITY_ERROR\",\r\n  WRITE_INVALID : \"WRITE_ACTIVITY_INVALID\",\r\n  WRITE_RESET : \"RESET_WRITE_ACTIVITY\",\r\n  CREATED : \"CREATE_ACTIVITY_OK\",\r\n  UPDATED : \"UPDATE_ACTIVITY_OK\"\r\n}\r\n\r\n/*\r\n *  ACTION CREATORS\r\n */\r\nconst actions = standardActions(types)\r\n\r\nexport const resetWriteActivity = () =>\r\n  ({ type : types.WRITE_RESET })\r\n\r\n/*\r\n *  THUNKS\r\n */\r\nexport const fetchActivities = (token) => {\r\n  return async (dispatch) => {\r\n    dispatch(actions.fetch())\r\n\r\n    try {\r\n      let res = await axios\r\n        .get(url, bearer(token))\r\n\r\n      dispatch(actions.fetchOk(res.data))\r\n\r\n    } catch (ex) {\r\n      let error = errorHandler(ex)\r\n      dispatch(actions.fetchError(error.message))\r\n    }\r\n  }\r\n}\r\n\r\nexport const fetchActivitiesIfNeeded = (token) => {\r\n  return async (dispatch, getState) => {\r\n    if ( shouldFetch(getState(), \"activities\") )\r\n      dispatch(fetchActivities(token))\r\n    else\r\n      return Promise.resolve()\r\n  }\r\n}\r\n\r\nexport const createActivity = (activity, token, history) => {\r\n  return async (dispatch) => {\r\n    dispatch(actions.write())\r\n\r\n    try {\r\n      let res = await axios\r\n        .post(url, activity, bearer(token))\r\n\r\n      dispatch(resetWriteActivity())\r\n      dispatch(actions.createOk(res.data))\r\n      dispatch(notify(\"Suorite lisätty\", \"ok\"))\r\n      history.replace(`/activities/${res.data.id}`)\r\n\r\n    } catch (ex) {\r\n      let error = errorHandler(ex)\r\n\r\n      if ( error.validation )\r\n        dispatch(actions.writeInvalid(error.validation))\r\n      else\r\n        dispatch(actions.writeError())\r\n\r\n      dispatch(notify(error.message, \"error\"))\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateActivity = (id, activity, token) => {\r\n  return async (dispatch) => {\r\n    dispatch(actions.write())\r\n\r\n    try {\r\n      let res = await axios\r\n        .put(`${url}/${id}`, activity, bearer(token))\r\n\r\n      dispatch(resetWriteActivity())\r\n      dispatch(actions.updateOk(res.data))\r\n      dispatch(notify(\"Suoritteen tiedot päivitetty\", \"ok\"))\r\n\r\n    } catch (ex) {\r\n      let error = errorHandler(ex)\r\n\r\n      if ( error.validation )\r\n        dispatch(actions.writeInvalid(error.validation))\r\n      else\r\n        dispatch(actions.writeError())\r\n\r\n      dispatch(notify(error.message, \"error\"))\r\n    }\r\n  }\r\n}\r\n\r\nexport const signOffActivity = (id, token) => {\r\n  return async (dispatch) => {\r\n    dispatch(actions.write())\r\n\r\n    try {\r\n      let res = await axios\r\n        .put(`${url}/${id}/sign`, {}, bearer(token))\r\n\r\n      dispatch(resetWriteActivity())\r\n      dispatch(actions.updateOk(res.data))\r\n      dispatch(notify(\"Suorite kirjattu hyväksytyksi\", \"ok\"))\r\n\r\n    } catch (ex) {\r\n      let error = errorHandler(ex)\r\n\r\n      dispatch(actions.writeError())\r\n      dispatch(notify(error.message, \"error\"))\r\n    }\r\n  }\r\n}\r\n","import ActivityForm from \"../../component/forms/activity_form\"\r\nimport PropTypes from \"prop-types\"\r\nimport QuotaFormContainer from \"../quota_form\"\r\nimport React from \"react\"\r\nimport { activityState } from \"../../util/form_state\"\r\nimport { Button, Divider, Form } from \"semantic-ui-react\"\r\nimport { connect } from \"react-redux\"\r\nimport {\r\n  createActivity,\r\n  signOffActivity,\r\n  updateActivity\r\n} from \"../../action/activity\"\r\nimport { parseNumber, parseQuotas } from \"../../util/parser\"\r\nimport { withRouter } from \"react-router-dom\"\r\n\r\nclass ActivityFormContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = activityState(props.activity)\r\n  }\r\n\r\n  handleChange = (e, data) => {\r\n    let value = ( data.type === \"checkbox\" )\r\n      ? data.checked\r\n      : data.value\r\n\r\n    this.setState({ [data.name] : value })\r\n  }\r\n\r\n  handleSave = (e) => {\r\n    e.preventDefault(e)\r\n\r\n    let { auth, history, id, isNew, task } = this.props\r\n    this.props.save(this.state, history, id, isNew, task, auth.token)\r\n  }\r\n\r\n  handleSign = (e) => {\r\n    e.preventDefault(e)\r\n\r\n    let { auth, id } = this.props\r\n    this.props.sign(id, auth.token)\r\n  }\r\n\r\n  syncQuotaState = (quotas) =>\r\n    this.setState({ ...this.state, quotas })\r\n\r\n  render = () => {\r\n    let { activity, auth, isNew } = this.props\r\n\r\n    let canSign = ( isNew )\r\n      ? false\r\n      : ( auth.admin && !activity.signed )\r\n    let isOwner = ( isNew )\r\n      ? true\r\n      : ( !activity.signed && auth.id === activity.owner.id )\r\n\r\n    return (\r\n      <Form loading={this.props.pending}>\r\n        <ActivityForm\r\n          activity={activity}\r\n          errors={this.props.errors}\r\n          onChange={this.handleChange}\r\n          owner={`${auth.firstName} ${auth.lastName}`}\r\n          readOnly={( !isOwner )}\r\n          state={this.state}\r\n        />\r\n        <Divider />\r\n        <QuotaFormContainer\r\n          header=\"Käytetyt materiaalit\"\r\n          quotas={this.state.quotas}\r\n          readOnly={( !isOwner )}\r\n          sync={this.syncQuotaState}\r\n        />\r\n        {( !isOwner )\r\n          ? null\r\n          : <div>\r\n            <Divider hidden />\r\n            <Button\r\n              content=\"Tallenna\"\r\n              fluid\r\n              onClick={this.handleSave}\r\n            />\r\n          </div>\r\n        }\r\n        {( !canSign )\r\n          ? null\r\n          : <div>\r\n            <Divider hidden />\r\n            <Button\r\n              content=\"Hyväksy\"\r\n              fluid\r\n              onClick={this.handleSign}\r\n            />\r\n          </div>\r\n        }\r\n      </Form>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => (\r\n  {\r\n    auth : state.auth,\r\n    errors : state.activities.write.errors,\r\n    pending : state.activities.write.pending\r\n  }\r\n)\r\n\r\nconst mapDispatchToProps = (dispatch) => (\r\n  {\r\n    save : (data, history, id, isNew, task, token) => {\r\n      let payload = {\r\n        ...data,\r\n        hours : parseNumber(data.hours),\r\n        quotas : parseQuotas(data.quotas),\r\n        task : task.id || null\r\n      }\r\n      return ( isNew )\r\n        ? dispatch(createActivity(payload, token, history))\r\n        : dispatch(updateActivity(id, payload, token))\r\n    },\r\n    sign : (id, token) => {\r\n      dispatch(signOffActivity(id, token))\r\n    }\r\n  }\r\n)\r\n\r\nActivityFormContainer.propTypes = {\r\n  activity : PropTypes.object.isRequired,\r\n  auth : PropTypes.object.isRequired,\r\n  errors : PropTypes.object.isRequired,\r\n  history : PropTypes.object.isRequired,\r\n  id : PropTypes.string.isRequired,\r\n  isNew : PropTypes.bool.isRequired,\r\n  pending : PropTypes.bool.isRequired,\r\n  save : PropTypes.func.isRequired,\r\n  sign : PropTypes.func.isRequired,\r\n  task : PropTypes.object.isRequired\r\n}\r\n\r\nexport default withRouter(connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ActivityFormContainer))\r\n","import FormError from \"../alerts/form_error\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { Button, Divider, Form, Input } from \"semantic-ui-react\"\r\n\r\nconst AttachmentForm = (props) => {\r\n  let { errors, state } = props\r\n\r\n  return (\r\n    <Form\r\n      loading={props.pending}\r\n      onSubmit={props.onSubmit}\r\n    >\r\n      <Form.Field error={( errors.name !== null )}>\r\n        <label>Liitteen nimi / kuvaus</label>\r\n        <Input\r\n          name=\"name\"\r\n          onChange={props.onChange}\r\n          value={state.name}\r\n        />\r\n        <FormError error={errors.name} />\r\n      </Form.Field>\r\n      <Form.Field error={( errors.file !== null )}>\r\n        <label>Valittu tiedosto</label>\r\n        <Input\r\n          readOnly\r\n          value={( !state.file )\r\n            ? \"\"\r\n            : state.file.name || \"\"\r\n          }\r\n        />\r\n        <FormError error={errors.file} />\r\n      </Form.Field>\r\n      <Button\r\n        content=\"Valitse tiedosto\"\r\n        onClick={props.onClick}\r\n        fluid\r\n      />\r\n      <Divider hidden />\r\n      <Button\r\n        content=\"Tallenna\"\r\n        disabled={( errors.name !== null || errors.file !== null )}\r\n        fluid\r\n      />\r\n    </Form>\r\n  )\r\n}\r\n\r\nAttachmentForm.propTypes = {\r\n  errors : PropTypes.object.isRequired,\r\n  onChange : PropTypes.func.isRequired,\r\n  onClick : PropTypes.func.isRequired,\r\n  onSubmit : PropTypes.func.isRequired,\r\n  pending : PropTypes.bool.isRequired,\r\n  state : PropTypes.object.isRequired\r\n}\r\n\r\nexport default AttachmentForm\r\n","const fileSize = Number(process.env.MAX_FILESIZE) || ( 4 * 1024 * 1024 )\r\nconst fileTypes = new RegExp([\r\n  /(^application\\/msword$)|/,             // .doc\r\n  /(^application\\/pdf$)|/,                // .pdf\r\n  /(^application\\/vnd.ms-)|/,             // .ppt, .xls ...\r\n  /(^application\\/vnd.openxmlformats-)|/, // .docx, .pptx, .xlsx ...\r\n  /(^application\\/zip$)|/,                // .zip\r\n  /(^image\\/)|/,                          // .bmp, .gif, .jpeg, .jpg, .png ...\r\n  /(^text\\/csv$)/                         // .csv\r\n].map(re => re.source).join(\"\"))\r\n\r\nexport const validateFile = (file) => {\r\n  if ( !file )\r\n    return {\r\n      valid : false,\r\n      error : \"Ei tiedostoa\"\r\n    }\r\n\r\n  if ( !fileTypes.test(file.type) )\r\n    return {\r\n      valid : false,\r\n      error : \"Tiedostotyyppi ei ole tuettu\"\r\n    }\r\n\r\n  if ( file.size > fileSize )\r\n    return {\r\n      valid : false,\r\n      error : `Tiedosto on liian suuri (maksimi ${(fileSize / 1024**2).toFixed(2)} Mt)`\r\n    }\r\n\r\n  return { valid : true }\r\n}\r\n","import AttachmentForm from \"../../component/forms/attachment_form\"\r\nimport React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { validateFile } from \"../../util/form_validation\"\r\n\r\nclass AttachmentFormContainer extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      file : null,\r\n      name : \"\"\r\n    }\r\n  }\r\n\r\n  handleChange = (e, { name, value }) => {\r\n    e.preventDefault()\r\n    this.setState({ [name] : value })\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    e.preventDefault()\r\n    this.filePicker.click()\r\n  }\r\n\r\n  handleFilePick = (e) => {\r\n    e.preventDefault()\r\n    this.setState({ file : e.target.files[0] })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    let data = new FormData()\r\n    data.append(\"file\", this.state.file)\r\n    data.append(\"name\", this.state.name)\r\n\r\n    this.props.onSubmit(data)\r\n    this.setState({ file : null, name : \"\" })\r\n  }\r\n\r\n  validateForm = () => {\r\n    let file = validateFile(this.state.file)\r\n    let name = this.state.name.trim()\r\n\r\n    return {\r\n      file : ( file.valid )\r\n        ? null\r\n        : file.error,\r\n      name : ( name.length > 0 )\r\n        ? null\r\n        : \"Liitteen nimi puuttuu\"\r\n    }\r\n  }\r\n\r\n  render = () =>\r\n    <div>\r\n      <AttachmentForm\r\n        errors={this.validateForm()}\r\n        onChange={this.handleChange}\r\n        onClick={this.handleClick}\r\n        onSubmit={this.handleSubmit}\r\n        pending={this.props.pending}\r\n        state={this.state}\r\n      />\r\n      <input\r\n        hidden\r\n        onChange={this.handleFilePick}\r\n        ref={c => this.filePicker = c}\r\n        type=\"file\"\r\n      />\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) =>\r\n  ({ pending : state.attachments.pending })\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(AttachmentFormContainer)\r\n","import React from \"react\"\r\nimport { List } from \"semantic-ui-react\"\r\n\r\nconst EmptyList = () =>\r\n  <List.Item disabled>\r\n    <List.Content align=\"center\" >\r\n      <List.Header content=\"( Ei osumia! )\" />\r\n      <List.Description\r\n        content=\"Joko lista on tyhjä, tai hakuehtoja vastaavia merkintöjä ei löydy.\"\r\n      />\r\n    </List.Content>\r\n  </List.Item>\r\n\r\nexport default EmptyList\r\n","import EmptyList from \"../alerts/empty_list\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { formatDate } from \"../../util/parser\"\r\nimport { List } from \"semantic-ui-react\"\r\n\r\nconst asRow = (a) =>\r\n  <List.Item\r\n    as=\"a\"\r\n    href={a.url}\r\n    key={a.key}\r\n    target=\"_blank\"\r\n  >\r\n    <List.Icon\r\n      color=\"grey\"\r\n      name=\"file text outline\"\r\n      verticalAlign=\"middle\"\r\n    />\r\n    <List.Content>\r\n      <List.Header content={a.name} />\r\n      <List.Description\r\n        content={`${formatDate(a.createdOn)} — ${a.owner.firstName} ${a.owner.lastName}`}\r\n      />\r\n    </List.Content>\r\n  </List.Item>\r\n\r\nconst AttachmentList = ({ attachments }) =>\r\n  <List divided relaxed>\r\n    {( attachments.length > 0 )\r\n      ? attachments\r\n        .sort((a1, a2) =>\r\n          Date.parse(a2.createdOn) - Date.parse(a1.createdOn))\r\n        .map(asRow)\r\n      : <EmptyList />\r\n    }\r\n  </List>\r\n\r\nAttachmentList.propTypes = {\r\n  attachments : PropTypes.arrayOf(PropTypes.object).isRequired\r\n}\r\n\r\nexport default AttachmentList\r\n","import PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { Button } from \"semantic-ui-react\"\r\n\r\nclass Expandable extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = { open : false }\r\n  }\r\n\r\n  toggle = () =>\r\n    this.setState({ open : !this.state.open })\r\n\r\n  render = () =>\r\n    ( !this.state.open )\r\n      ? <Button\r\n        content={this.props.button}\r\n        fluid\r\n        onClick={this.toggle}\r\n      />\r\n      : this.props.children\r\n}\r\n\r\nExpandable.propTypes = {\r\n  button : PropTypes.string.isRequired,\r\n  children : PropTypes.element.isRequired\r\n}\r\n\r\nexport default Expandable\r\n","import axios from \"axios\"\r\nimport { errorHandler } from \"./helper\"\r\nimport { notify } from \"./notification\"\r\n\r\nconst url = \"/api/blobs\"\r\n\r\n/*\r\n *  ACTION TYPES\r\n */\r\nexport const types = {\r\n  REQUEST_START : \"ATTACHMENT_START\",\r\n  REQUEST_OVER : \"ATTACHMENT_OVER\",\r\n}\r\n\r\n/*\r\n *  ACTION CREATORS\r\n */\r\nconst attachmentStart = () =>\r\n  ({ type : types.REQUEST_START })\r\n\r\nconst attachmentOver = () =>\r\n  ({ type : types.REQUEST_OVER })\r\n\r\n/*\r\n *  THUNKS\r\n */\r\nexport const uploadAttachment = (id, data, token, updateThunk, actionOnSuccess) => {\r\n  return async (dispatch) => {\r\n    dispatch(attachmentStart())\r\n\r\n    try {\r\n      let res = await axios.post(\r\n        url,\r\n        data,\r\n        {\r\n          headers : {\r\n            \"authorization\" : `bearer ${token}`,\r\n            \"content-type\" : \"multipart/form-data\"\r\n          }\r\n        }\r\n      )\r\n      dispatch(updateThunk(id, res.data, token))\r\n      if ( actionOnSuccess ) actionOnSuccess()\r\n\r\n    } catch (ex) {\r\n      let error = errorHandler(ex)\r\n      dispatch(notify(error.message, \"error\"))\r\n    }\r\n\r\n    dispatch(attachmentOver())\r\n  }\r\n}\r\n","import AttachmentFormContainer from \"./attachment_form\"\r\nimport AttachmentList from \"../../component/lists/attachment_list\"\r\nimport Expandable from \"../../component/widgets/expandable\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Divider } from \"semantic-ui-react\"\r\nimport { uploadAttachment } from \"../../action/attachment\"\r\n\r\nclass AttachmentContainer extends React.Component {\r\n  upload = (data) => {\r\n    let { entity, id, thunk, token, uploadAttachment } = this.props\r\n\r\n    data.append(\"id\", id)\r\n    data.append(\"entity\", entity)\r\n\r\n    uploadAttachment(id, data, token, thunk, this.expandable.toggle)\r\n  }\r\n\r\n  render = () =>\r\n    <div>\r\n      <AttachmentList\r\n        attachments={this.props.attachments}\r\n      />\r\n      <Divider />\r\n      <Expandable\r\n        button=\"Lisää liite\"\r\n        ref={c => this.expandable = c}\r\n      >\r\n        <AttachmentFormContainer\r\n          onSubmit={this.upload}\r\n        />\r\n      </Expandable>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) =>\r\n  ({ token : state.auth.token })\r\n\r\nAttachmentContainer.propTypes = {\r\n  attachments : PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  entity : PropTypes.string.isRequired,\r\n  id : PropTypes.string.isRequired,\r\n  thunk : PropTypes.func.isRequired,\r\n  token : PropTypes.string.isRequired,\r\n  uploadAttachment : PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { uploadAttachment }\r\n)(AttachmentContainer)\r\n","import FormError from \"../alerts/form_error\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { Button, Form, TextArea } from \"semantic-ui-react\"\r\n\r\nconst CommentForm = (props) =>\r\n  <Form\r\n    loading={props.pending}\r\n    onSubmit={props.onSubmit}\r\n  >\r\n    <Form.Field error={props.error !== null}>\r\n      <label>Lisää huomio</label>\r\n      <TextArea\r\n        autoHeight\r\n        onChange={props.onChange}\r\n        placeholder=\"Korkeintaan 255 merkkiä\"\r\n        style={{ minHeight : 50 }}\r\n        value={props.text}\r\n      />\r\n      <FormError error={props.error} />\r\n    </Form.Field>\r\n    <Button\r\n      content=\"Tallenna\"\r\n      disabled={props.error !== null}\r\n      fluid\r\n    />\r\n  </Form>\r\n\r\nCommentForm.propTypes = {\r\n  error : PropTypes.string,\r\n  onChange : PropTypes.func.isRequired,\r\n  onSubmit : PropTypes.func.isRequired,\r\n  pending : PropTypes.bool.isRequired,\r\n  text : PropTypes.string.isRequired\r\n}\r\n\r\nexport default CommentForm\r\n","import EmptyList from \"../alerts/empty_list\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { formatDate } from \"../../util/parser\"\r\nimport { List } from \"semantic-ui-react\"\r\n\r\nconst asRow = (c) =>\r\n  <List.Item key={c.createdOn} >\r\n    <List.Icon\r\n      color=\"grey\"\r\n      name=\"comment outline\"\r\n      verticalAlign=\"middle\"\r\n    />\r\n    <List.Content>\r\n      <List.Header\r\n        content={`${formatDate(c.createdOn)} — ${c.owner.firstName} ${c.owner.lastName}`}\r\n      />\r\n      <List.Description content={c.text} />\r\n    </List.Content>\r\n  </List.Item>\r\n\r\nconst CommentList = ({ comments }) =>\r\n  <List divided relaxed>\r\n    {( comments.length > 0 )\r\n      ? comments\r\n        .sort((c1, c2) =>\r\n          Date.parse(c1.createdOn) - Date.parse(c2.createdOn))\r\n        .map(asRow)\r\n      : <EmptyList />\r\n    }\r\n  </List>\r\n\r\nCommentList.propTypes = {\r\n  comments : PropTypes.arrayOf(PropTypes.object).isRequired\r\n}\r\n\r\nexport default CommentList\r\n","import axios from \"axios\"\r\nimport { bearer, errorHandler } from \"./helper\"\r\nimport { notify } from \"./notification\"\r\n\r\nconst url = \"/api/comments\"\r\n\r\n/*\r\n *  ACTION TYPES\r\n */\r\nexport const types = {\r\n  REQUEST_START : \"COMMENT_START\",\r\n  REQUEST_OVER : \"COMMENT_OVER\",\r\n}\r\n\r\n/*\r\n *  ACTION CREATORS\r\n */\r\nconst commentStart = () =>\r\n  ({ type : types.REQUEST_START })\r\n\r\nconst commentOver = () =>\r\n  ({ type : types.REQUEST_OVER })\r\n\r\n/*\r\n *  THUNKS\r\n */\r\nexport const uploadComment = (id, data, token, updateThunk) => {\r\n  return async (dispatch) => {\r\n    dispatch(commentStart())\r\n\r\n    try {\r\n      await axios\r\n        .post(url, data, bearer(token))\r\n\r\n      dispatch(updateThunk(token))\r\n\r\n    } catch (ex) {\r\n      let error = errorHandler(ex)\r\n      dispatch(notify(error.message, \"error\"))\r\n    }\r\n\r\n    dispatch(commentOver())\r\n  }\r\n}\r\n","import CommentForm from \"../component/forms/comment_form\"\r\nimport CommentList from \"../component/lists/comment_list\"\r\nimport Expandable from \"../component/widgets/expandable\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Divider } from \"semantic-ui-react\"\r\nimport { uploadComment } from \"../action/comment\"\r\n\r\nclass CommentContainer extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = { text : \"\" }\r\n  }\r\n\r\n  handleChange = (e, { value }) => {\r\n    e.preventDefault()\r\n    this.setState({ text : value })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    let { entity, id, thunk, token, uploadComment } = this.props\r\n    let data = { entity, id, text : this.state.text }\r\n\r\n    uploadComment(id, data, token, thunk)\r\n  }\r\n\r\n  validateForm = () => {\r\n    let text = this.state.text.trim()\r\n\r\n    if ( text.length === 0 ) return \"Ei voi olla tyhjä\"\r\n    if ( text.length > 255 ) return \"Korkeintaan 255 merkkiä\"\r\n\r\n    return null\r\n  }\r\n\r\n  render = () =>\r\n    <div>\r\n      <CommentList comments={this.props.comments} />\r\n      <Divider />\r\n      <Expandable button=\"Lisää huomio\">\r\n        <CommentForm\r\n          error={this.validateForm()}\r\n          onChange={this.handleChange}\r\n          onSubmit={this.handleSubmit}\r\n          pending={this.props.pending}\r\n          text={this.state.text}\r\n        />\r\n      </Expandable>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => (\r\n  {\r\n    pending : state.comments.pending,\r\n    token : state.auth.token\r\n  }\r\n)\r\n\r\nCommentContainer.propTypes = {\r\n  comments : PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  entity : PropTypes.string.isRequired,\r\n  id : PropTypes.string.isRequired,\r\n  pending : PropTypes.bool.isRequired,\r\n  thunk : PropTypes.func.isRequired,\r\n  token : PropTypes.string.isRequired,\r\n  uploadComment : PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { uploadComment }\r\n)(CommentContainer)\r\n","import PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { Message } from \"semantic-ui-react\"\r\n\r\nconst Error = ({ message }) =>\r\n  <Message\r\n    align=\"center\"\r\n    error\r\n    content={message || \"Sivua/resurssia ei ole olemassa, älä pelleile osoitepalkin kanssa!\"}\r\n    header=\"Virhetilanne!\"\r\n  />\r\n\r\nError.propTypes = {\r\n  message : PropTypes.string\r\n}\r\n\r\nexport default Error\r\n","import axios from \"axios\"\r\nimport { bearer, errorHandler, shouldFetch, standardActions } from \"./helper\"\r\nimport { notify } from \"./notification\"\r\n\r\nconst url = \"/api/materials\"\r\n\r\n/*\r\n *  ACTION TYPES\r\n */\r\nexport const types = {\r\n  FETCH : \"FETCH_MATERIALS\",\r\n  FETCH_OK : \"FETCH_MATERIALS_OK\",\r\n  FETCH_ERROR : \"FETCH_MATERIALS_ERROR\",\r\n  WRITE : \"WRITE_MATERIAL\",\r\n  WRITE_ERROR : \"WRITE_MATERIAL_ERROR\",\r\n  WRITE_INVALID : \"WRITE_MATERIAL_INVALID\",\r\n  WRITE_RESET : \"RESET_WRITE_MATERIAL\",\r\n  CREATED : \"CREATE_MATERIAL_OK\",\r\n  UPDATED : \"UPDATE_MATERIAL_OK\"\r\n}\r\n\r\n/*\r\n *  ACTION CREATORS\r\n */\r\nconst actions = standardActions(types)\r\n\r\nexport const resetWriteMaterial = () =>\r\n  ({ type : types.WRITE_RESET })\r\n\r\n/*\r\n *  THUNKS\r\n */\r\nexport const fetchMaterials = (token) => {\r\n  return async (dispatch) => {\r\n    dispatch(actions.fetch())\r\n\r\n    try {\r\n      let res = await axios\r\n        .get(url, bearer(token))\r\n\r\n      dispatch(actions.fetchOk(res.data))\r\n\r\n    } catch (ex) {\r\n      let error = errorHandler(ex)\r\n      dispatch(actions.fetchError(error.message))\r\n    }\r\n  }\r\n}\r\n\r\nexport const fetchMaterialsIfNeeded = (token) => {\r\n  return async (dispatch, getState) => {\r\n    if ( shouldFetch(getState(), \"materials\") )\r\n      dispatch(fetchMaterials(token))\r\n    else\r\n      return Promise.resolve()\r\n  }\r\n}\r\n\r\nexport const createMaterial = (material, token, history) => {\r\n  return async (dispatch) => {\r\n    dispatch(actions.write())\r\n\r\n    try {\r\n      let res = await axios\r\n        .post(url, material, bearer(token))\r\n\r\n      dispatch(resetWriteMaterial())\r\n      dispatch(actions.createOk(res.data))\r\n      dispatch(notify(\"Materiaali lisätty\", \"ok\"))\r\n      history.replace(`/materials/${res.data.id}`)\r\n\r\n    } catch (ex) {\r\n      let error = errorHandler(ex)\r\n\r\n      if ( error.validation )\r\n        dispatch(actions.writeInvalid(error.validation))\r\n      else\r\n        dispatch(actions.writeError())\r\n\r\n      dispatch(notify(error.message, \"error\"))\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateMaterial = (id, material, token) => {\r\n  return async (dispatch) => {\r\n    dispatch(actions.write())\r\n\r\n    try {\r\n      let res = await axios\r\n        .put(`${url}/${id}`, material, bearer(token))\r\n\r\n      dispatch(resetWriteMaterial())\r\n      dispatch(actions.updateOk(res.data))\r\n      dispatch(notify(\"Materiaalitiedot päivitetty\", \"ok\"))\r\n\r\n    } catch (ex) {\r\n      let error = errorHandler(ex)\r\n\r\n      if ( error.validation )\r\n        dispatch(actions.writeInvalid(error.validation))\r\n      else\r\n        dispatch(actions.writeError())\r\n\r\n      dispatch(notify(error.message, \"error\"))\r\n    }\r\n  }\r\n}\r\n","import axios from \"axios\"\r\nimport { bearer, errorHandler, shouldFetch, standardActions } from \"./helper\"\r\nimport { notify } from \"./notification\"\r\n\r\nconst url = \"/api/tasks\"\r\n\r\n/*\r\n *  ACTION TYPES\r\n */\r\nexport const types = {\r\n  FETCH : \"FETCH_TASKS\",\r\n  FETCH_OK : \"FETCH_TASKS_OK\",\r\n  FETCH_ERROR : \"FETCH_TASKS_ERROR\",\r\n  WRITE : \"WRITE_TASK\",\r\n  WRITE_ERROR : \"WRITE_TASK_ERROR\",\r\n  WRITE_INVALID : \"WRITE_TASK_INVALID\",\r\n  WRITE_RESET : \"RESET_WRITE_TASK\",\r\n  CREATED : \"CREATE_TASK_OK\",\r\n  UPDATED : \"UPDATE_TASK_OK\"\r\n}\r\n\r\n/*\r\n *  ACTION CREATORS\r\n */\r\nconst actions = standardActions(types)\r\n\r\nexport const resetWriteTask = () =>\r\n  ({ type : types.WRITE_RESET })\r\n\r\n/*\r\n *  THUNKS\r\n */\r\nexport const fetchTasks = (token) => {\r\n  return async (dispatch) => {\r\n    dispatch(actions.fetch())\r\n\r\n    try {\r\n      let res = await axios\r\n        .get(url, bearer(token))\r\n\r\n      dispatch(actions.fetchOk(res.data))\r\n\r\n    } catch (ex) {\r\n      let error = errorHandler(ex)\r\n      dispatch(actions.fetchError(error.message))\r\n    }\r\n  }\r\n}\r\n\r\nexport const fetchTasksIfNeeded = (token) => {\r\n  return async (dispatch, getState) => {\r\n    if ( shouldFetch(getState(), \"tasks\") )\r\n      dispatch(fetchTasks(token))\r\n    else\r\n      return Promise.resolve()\r\n  }\r\n}\r\n\r\nexport const createTask = (task, token, history) => {\r\n  return async (dispatch) => {\r\n    dispatch(actions.write())\r\n\r\n    try {\r\n      let res = await axios\r\n        .post(url, task, bearer(token))\r\n\r\n      dispatch(resetWriteTask())\r\n      dispatch(actions.createOk(res.data))\r\n      dispatch(notify(\"Tehtävä lisätty\", \"ok\"))\r\n      history.replace(`/tasks/${res.data.id}`)\r\n\r\n    } catch (ex) {\r\n      let error = errorHandler(ex)\r\n\r\n      if ( error.validation )\r\n        dispatch(actions.writeInvalid(error.validation))\r\n      else\r\n        dispatch(actions.writeError())\r\n\r\n      dispatch(notify(error.message, \"error\"))\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateTask = (id, task, token) => {\r\n  return async (dispatch) => {\r\n    dispatch(actions.write())\r\n\r\n    try {\r\n      let res = await axios\r\n        .put(`${url}/${id}`, task, bearer(token))\r\n\r\n      dispatch(resetWriteTask())\r\n      dispatch(actions.updateOk(res.data))\r\n      dispatch(notify(\"Tehtävän tiedot päivitetty\", \"ok\"))\r\n\r\n    } catch (ex) {\r\n      let error = errorHandler(ex)\r\n\r\n      if ( error.validation )\r\n        dispatch(actions.writeInvalid(error.validation))\r\n      else\r\n        dispatch(actions.writeError())\r\n\r\n      dispatch(notify(error.message, \"error\"))\r\n    }\r\n  }\r\n}\r\n","import Accordion from \"../../component/widgets/accordion\"\r\nimport ActivityFormContainer from \"./activity_form\"\r\nimport AttachmentContainer from \"../attachment/attachment\"\r\nimport CommentContainer from \"../comment\"\r\nimport Error from \"../../component/alerts/error\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { fetchMaterialsIfNeeded } from \"../../action/material\"\r\nimport { fetchTasksIfNeeded } from \"../../action/task\"\r\nimport { parseUrlQuery } from \"../../util/parser\"\r\nimport {\r\n  fetchActivities,\r\n  resetWriteActivity,\r\n  updateActivity\r\n} from \"../../action/activity\"\r\n\r\nclass ActivityContainer extends React.Component {\r\n  componentDidMount = () =>\r\n    this.props.refresh(this.props.token)\r\n\r\n  componentWillUnmount = () =>\r\n    this.props.reset()\r\n\r\n  render = () => {\r\n    let { activity, id, isNew, task } = this.props\r\n\r\n    if ( !isNew && !activity ) return <Error />\r\n    if ( isNew && !task ) return <Error\r\n      message=\"Virheellinen tehtävän tunniste, älä sooloile osoitepalkin kanssa!\"\r\n    />\r\n\r\n    return (\r\n      <div>\r\n        <Accordion\r\n          active={isNew}\r\n          title=\"Perustiedot\"\r\n        >\r\n          <ActivityFormContainer\r\n            activity={activity || { task }}\r\n            id={id}\r\n            isNew={isNew}\r\n            task={task || {}}\r\n          />\r\n        </Accordion>\r\n        {( isNew )\r\n          ? null\r\n          : <div>\r\n            <Accordion\r\n              active={( activity.attachments.length > 0 )}\r\n              title=\"Liitteet\"\r\n            >\r\n              <AttachmentContainer\r\n                attachments={activity.attachments || []}\r\n                entity=\"Activity\"\r\n                id={id}\r\n                thunk={updateActivity}\r\n              />\r\n            </Accordion>\r\n            <Accordion\r\n              active={( activity.comments.length > 0 )}\r\n              title=\"Huomiot\"\r\n            >\r\n              <CommentContainer\r\n                comments={activity.comments || []}\r\n                entity=\"Activity\"\r\n                id={id}\r\n                thunk={fetchActivities}\r\n              />\r\n            </Accordion>\r\n          </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  let { id } = props.match.params\r\n  let taskId = parseUrlQuery(props.location.search).id\r\n\r\n  return {\r\n    activity : state.activities.data.items\r\n      .find(a => a.id === id),\r\n    id,\r\n    isNew : ( id === \"new\" ),\r\n    task : state.tasks.data.items\r\n      .find(t => t.id === taskId),\r\n    token : state.auth.token\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => (\r\n  {\r\n    refresh : (token) => {\r\n      dispatch(fetchMaterialsIfNeeded(token))\r\n      dispatch(fetchTasksIfNeeded(token))\r\n    },\r\n    reset : () => {\r\n      dispatch(resetWriteActivity())\r\n    }\r\n  }\r\n)\r\n\r\nActivityContainer.propTypes = {\r\n  activity : PropTypes.object,\r\n  id : PropTypes.string.isRequired,\r\n  isNew : PropTypes.bool.isRequired,\r\n  location : PropTypes.object.isRequired,\r\n  match : PropTypes.object.isRequired,\r\n  refresh : PropTypes.func.isRequired,\r\n  reset : PropTypes.func.isRequired,\r\n  task : PropTypes.object,\r\n  token : PropTypes.string.isRequired\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ActivityContainer)\r\n","import React from \"react\"\r\nimport { Loader } from \"semantic-ui-react\"\r\n\r\nconst Spinner = () =>\r\n  <Loader\r\n    active\r\n    inline=\"centered\"\r\n    size=\"huge\"\r\n  />\r\n\r\nexport default Spinner\r\n","import ActivityContainer from \"../container/activity/activity\"\r\nimport Error from \"../component/alerts/error\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport Spinner from \"../component/widgets/spinner\"\r\nimport { connect } from \"react-redux\"\r\nimport { fetchActivitiesIfNeeded } from \"../action/activity\"\r\nimport { Route } from \"react-router-dom\"\r\n\r\nclass ActivityRoot extends React.Component {\r\n  componentDidMount = () =>\r\n    this.props.refresh(this.props.token)\r\n\r\n  render = () => {\r\n    let { error, match, pending } = this.props\r\n\r\n    if ( pending ) return <Spinner />\r\n    if ( error ) return <Error message={error} />\r\n\r\n    return (\r\n      <div>\r\n        <h2 className=\"padded\">Suoritteet</h2>\r\n        <Route\r\n          component={ActivityContainer}\r\n          exact path={`${match.path}/:id`}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => (\r\n  {\r\n    error : state.activities.data.error,\r\n    pending : state.activities.data.pending,\r\n    token : state.auth.token\r\n  }\r\n)\r\n\r\nconst mapDispatchToProps = (dispatch) => (\r\n  {\r\n    refresh : (token) => {\r\n      dispatch(fetchActivitiesIfNeeded(token))\r\n    }\r\n  }\r\n)\r\n\r\nActivityRoot.propTypes = {\r\n  error : PropTypes.string,\r\n  match : PropTypes.object.isRequired,\r\n  pending : PropTypes.bool.isRequired,\r\n  refresh : PropTypes.func.isRequired,\r\n  token : PropTypes.string.isRequired\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ActivityRoot)\r\n","import FormError from \"../alerts/form_error\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { Form, Input } from \"semantic-ui-react\"\r\n\r\nconst ClientForm = (props) => {\r\n  let { errors, onChange, readOnly, state } = props\r\n\r\n  return (\r\n    <div>\r\n      <Form.Field error={errors.legalEntity !== undefined}>\r\n        <label>Toiminimi</label>\r\n        <Input\r\n          name=\"legalEntity\"\r\n          onChange={onChange}\r\n          placeholder=\"Firma Oy\"\r\n          readOnly={readOnly}\r\n          value={state.legalEntity}\r\n        />\r\n        <FormError error={errors.legalEntity} />\r\n      </Form.Field>\r\n      <Form.Field error={errors.businessId !== undefined}>\r\n        <label>Y-tunnus</label>\r\n        <Input\r\n          name=\"businessId\"\r\n          onChange={onChange}\r\n          placeholder=\"1234567-8\"\r\n          readOnly={readOnly}\r\n          value={state.businessId}\r\n        />\r\n        <FormError error={errors.businessId} />\r\n      </Form.Field>\r\n      <Form.Field error={errors.domicile !== undefined}>\r\n        <label>Kotipaikka</label>\r\n        <Input\r\n          name=\"domicile\"\r\n          onChange={onChange}\r\n          placeholder=\"Saumala\"\r\n          readOnly={readOnly}\r\n          value={state.domicile}\r\n        />\r\n        <FormError error={errors.domicile} />\r\n      </Form.Field>\r\n    </div>\r\n  )\r\n}\r\n\r\nClientForm.propTypes = {\r\n  errors : PropTypes.object.isRequired,\r\n  onChange : PropTypes.func.isRequired,\r\n  readOnly : PropTypes.bool.isRequired,\r\n  state : PropTypes.object.isRequired,\r\n}\r\n\r\nexport default ClientForm\r\n","import axios from \"axios\"\r\nimport { bearer, errorHandler, shouldFetch, standardActions } from \"./helper\"\r\nimport { notify } from \"./notification\"\r\n\r\nconst url = \"/api/clients\"\r\n\r\n/*\r\n *  ACTION TYPES\r\n */\r\nexport const types = {\r\n  FETCH : \"FETCH_CLIENTS\",\r\n  FETCH_OK : \"FETCH_CLIENTS_OK\",\r\n  FETCH_ERROR : \"FETCH_CLIENTS_ERROR\",\r\n  WRITE : \"WRITE_CLIENT\",\r\n  WRITE_ERROR : \"WRITE_CLIENT_ERROR\",\r\n  WRITE_INVALID : \"WRITE_CLIENT_INVALID\",\r\n  WRITE_RESET : \"RESET_WRITE_CLIENT\",\r\n  CREATED : \"CREATE_CLIENT_OK\",\r\n  UPDATED : \"UPDATE_CLIENT_OK\"\r\n}\r\n\r\n/*\r\n *  ACTION CREATORS\r\n */\r\nconst actions = standardActions(types)\r\n\r\nexport const resetWriteClient = () =>\r\n  ({ type : types.WRITE_RESET })\r\n\r\n/*\r\n *  THUNKS\r\n */\r\nexport const fetchClients = (token) => {\r\n  return async (dispatch) => {\r\n    dispatch(actions.fetch())\r\n\r\n    try {\r\n      let res = await axios\r\n        .get(url, bearer(token))\r\n\r\n      dispatch(actions.fetchOk(res.data))\r\n\r\n    } catch (ex) {\r\n      let error = errorHandler(ex)\r\n      dispatch(actions.fetchError(error.message))\r\n    }\r\n  }\r\n}\r\n\r\nexport const fetchClientsIfNeeded = (token) => {\r\n  return async (dispatch, getState) => {\r\n    if ( shouldFetch(getState(), \"clients\") )\r\n      dispatch(fetchClients(token))\r\n    else\r\n      return Promise.resolve()\r\n  }\r\n}\r\n\r\nexport const createClient = (client, token, history) => {\r\n  return async (dispatch) => {\r\n    dispatch(actions.write())\r\n\r\n    try {\r\n      let res = await axios\r\n        .post(url, client, bearer(token))\r\n\r\n      dispatch(resetWriteClient())\r\n      dispatch(actions.createOk(res.data))\r\n      dispatch(notify(\"Uusi asiakas lisätty\", \"ok\"))\r\n      history.replace(`/clients/${res.data.id}`)\r\n\r\n    } catch (ex) {\r\n      let error = errorHandler(ex)\r\n\r\n      if ( error.validation )\r\n        dispatch(actions.writeInvalid(error.validation))\r\n      else\r\n        dispatch(actions.writeError())\r\n\r\n      dispatch(notify(error.message, \"error\"))\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateClient = (id, updates, token) => {\r\n  return async (dispatch) => {\r\n    dispatch(actions.write())\r\n\r\n    try {\r\n      let res = await axios\r\n        .put(`${url}/${id}`, updates, bearer(token))\r\n\r\n      dispatch(resetWriteClient())\r\n      dispatch(actions.updateOk(res.data))\r\n      dispatch(notify(\"Asiakkaan tiedot päivitetty\", \"ok\"))\r\n\r\n    } catch (ex) {\r\n      let error = errorHandler(ex)\r\n\r\n      if ( error.validation )\r\n        dispatch(actions.writeInvalid(error.validation))\r\n      else\r\n        dispatch(actions.writeError())\r\n\r\n      dispatch(notify(error.message, \"error\"))\r\n    }\r\n  }\r\n}\r\n","import ClientForm from \"../../component/forms/client_form\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { Button, Divider, Form } from \"semantic-ui-react\"\r\nimport { clientState } from \"../../util/form_state\"\r\nimport { connect } from \"react-redux\"\r\nimport { createClient, updateClient } from \"../../action/client\"\r\nimport { withRouter } from \"react-router-dom\"\r\n\r\nclass ClientFormContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = clientState(props.client)\r\n  }\r\n\r\n  handleChange = (e, { name, value }) =>\r\n    this.setState({ [name] : value })\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    let { history, id, isNew, token } = this.props\r\n    this.props.save(this.state, history, id, isNew, token)\r\n  }\r\n\r\n  render = () =>\r\n    <Form\r\n      loading={this.props.pending}\r\n      onSubmit={this.handleSubmit}\r\n    >\r\n      <ClientForm\r\n        errors={this.props.errors}\r\n        onChange={this.handleChange}\r\n        readOnly={this.props.readOnly}\r\n        state={this.state}\r\n      />\r\n      <Divider hidden />\r\n      {( this.props.readOnly )\r\n        ? null\r\n        : <Button content=\"Tallenna\" fluid />\r\n      }\r\n    </Form>\r\n}\r\n\r\nconst mapStateToProps = (state) => (\r\n  {\r\n    errors : state.clients.write.errors,\r\n    pending : state.clients.write.pending,\r\n    readOnly : ( !state.auth.admin ),\r\n    token : state.auth.token\r\n  }\r\n)\r\n\r\nconst mapDispatchToProps = (dispatch) => (\r\n  {\r\n    save : (data, history, id, isNew, token) => {\r\n      ( isNew )\r\n        ? dispatch(createClient(data, token, history))\r\n        : dispatch(updateClient(id, data, token))\r\n    }\r\n  }\r\n)\r\n\r\nClientFormContainer.propTypes = {\r\n  client : PropTypes.object.isRequired,\r\n  errors : PropTypes.object.isRequired,\r\n  history : PropTypes.object.isRequired,\r\n  id : PropTypes.string.isRequired,\r\n  isNew : PropTypes.bool.isRequired,\r\n  pending : PropTypes.bool.isRequired,\r\n  readOnly : PropTypes.bool.isRequired,\r\n  save : PropTypes.func.isRequired,\r\n  token : PropTypes.string.isRequired\r\n}\r\n\r\nexport default withRouter(connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ClientFormContainer))\r\n","import EmptyList from \"../alerts/empty_list\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { List } from \"semantic-ui-react\"\r\n\r\nconst CommonList = ({ entities, toRow }) =>\r\n  <List divided relaxed>\r\n    {( entities.length > 0 )\r\n      ? entities.map(toRow)\r\n      : <EmptyList />\r\n    }\r\n  </List>\r\n\r\nCommonList.propTypes = {\r\n  entities : PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  toRow : PropTypes.func.isRequired\r\n}\r\n\r\nexport default CommonList\r\n","import PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { Input } from \"semantic-ui-react\"\r\n\r\nconst SearchField = ({ onChange, value }) =>\r\n  <Input\r\n    fluid\r\n    icon=\"search\"\r\n    onChange={onChange}\r\n    placeholder=\"Kirjoita hakusana\"\r\n    value={value}\r\n  />\r\n\r\nSearchField.propTypes = {\r\n  onChange : PropTypes.func.isRequired,\r\n  value : PropTypes.string.isRequired\r\n}\r\n\r\nexport default SearchField\r\n","import CommonList from \"../component/lists/list\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport SearchField from \"../component/widgets/search_field\"\r\n\r\nclass ListContainer extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = { filter : \"\" }\r\n  }\r\n\r\n  handleChange = (e, { value }) =>\r\n    this.setState({ filter : value.toLowerCase() })\r\n\r\n  render = () =>\r\n    <div>\r\n      <SearchField\r\n        onChange={this.handleChange}\r\n        value={this.state.filter}\r\n      />\r\n      <CommonList\r\n        entities={this.props.filter(\r\n          this.props.entities,\r\n          this.state.filter\r\n        )}\r\n        toRow={this.props.toRow}\r\n      />\r\n    </div>\r\n}\r\n\r\nListContainer.propTypes = {\r\n  entities : PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  filter : PropTypes.func.isRequired,\r\n  toRow : PropTypes.func.isRequired\r\n}\r\n\r\nexport default ListContainer\r\n","import axios from \"axios\"\r\nimport { bearer, errorHandler, shouldFetch, standardActions } from \"./helper\"\r\nimport { notify } from \"./notification\"\r\n\r\nconst url = \"/api/projects\"\r\n\r\n/*\r\n *  ACTION TYPES\r\n */\r\nexport const types = {\r\n  FETCH : \"FETCH_PROJECTS\",\r\n  FETCH_OK : \"FETCH_PROJECTS_OK\",\r\n  FETCH_ERROR : \"FETCH_PROJECTS_ERROR\",\r\n  WRITE : \"WRITE_PROJECT\",\r\n  WRITE_ERROR : \"WRITE_PROJECT_ERROR\",\r\n  WRITE_INVALID : \"WRITE_PROJECT_INVALID\",\r\n  WRITE_RESET : \"RESET_WRITE_PROJECT\",\r\n  CREATED : \"CREATE_PROJECT_OK\",\r\n  UPDATED : \"UPDATE_PROJECT_OK\",\r\n  ASSIGNED : \"ASSIGN_EMPLOYEE_OK\",\r\n  UNASSIGNED : \"UNASSIGN_EMPLOYEE_OK\"\r\n}\r\n\r\n/*\r\n *  ACTION CREATORS\r\n */\r\nconst actions = standardActions(types)\r\n\r\nconst assignEmployeeOk = (project, employee) => ({\r\n  type : types.ASSIGNED,\r\n  payload : { project, employee }\r\n})\r\n\r\nconst unassignEmployeeOk = (project, employee) => ({\r\n  type : types.UNASSIGNED,\r\n  payload : { project, employee }\r\n})\r\n\r\nexport const resetWriteProject = () =>\r\n  ({ type : types.WRITE_RESET })\r\n\r\n/*\r\n *  THUNKS\r\n */\r\nexport const fetchProjects = (token) => {\r\n  return async (dispatch) => {\r\n    dispatch(actions.fetch())\r\n\r\n    try {\r\n      let res = await axios\r\n        .get(url, bearer(token))\r\n\r\n      dispatch(actions.fetchOk(res.data))\r\n\r\n    } catch (ex) {\r\n      let error = errorHandler(ex)\r\n      dispatch(actions.fetchError(error.message))\r\n    }\r\n  }\r\n}\r\n\r\nexport const fetchProjectsIfNeeded = (token) => {\r\n  return async (dispatch, getState) => {\r\n    if ( shouldFetch(getState(), \"projects\") )\r\n      dispatch(fetchProjects(token))\r\n    else\r\n      return Promise.resolve()\r\n  }\r\n}\r\n\r\nexport const createProject = (project, token, history) => {\r\n  return async (dispatch) => {\r\n    dispatch(actions.write())\r\n\r\n    try {\r\n      let res = await axios\r\n        .post(url, project, bearer(token))\r\n\r\n      dispatch(resetWriteProject())\r\n      dispatch(actions.createOk(res.data))\r\n      dispatch(notify(\"Uusi työmaa lisätty\", \"ok\"))\r\n      history.replace(`/projects/${res.data.id}`)\r\n\r\n    } catch (ex) {\r\n      let error = errorHandler(ex)\r\n\r\n      if ( error.validation )\r\n        dispatch(actions.writeInvalid(error.validation))\r\n      else\r\n        dispatch(actions.writeError())\r\n\r\n      dispatch(notify(error.message, \"error\"))\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateProject = (id, project, token) => {\r\n  return async (dispatch) => {\r\n    dispatch(actions.write())\r\n\r\n    try {\r\n      let res = await axios\r\n        .put(`${url}/${id}`, project, bearer(token))\r\n\r\n      dispatch(resetWriteProject())\r\n      dispatch(actions.updateOk(res.data))\r\n      dispatch(notify(\"Työmaan tiedot päivitetty\", \"ok\"))\r\n\r\n    } catch (ex) {\r\n      let error = errorHandler(ex)\r\n\r\n      if ( error.validation )\r\n        dispatch(actions.writeInvalid(error.validation))\r\n      else\r\n        dispatch(actions.writeError())\r\n\r\n      dispatch(notify(error.message, \"error\"))\r\n    }\r\n  }\r\n}\r\n\r\nexport const assignEmployeeToProject = (id, employee, token) => {\r\n  return async (dispatch) => {\r\n    dispatch(actions.write())\r\n\r\n    try {\r\n      let res = await axios\r\n        .post(`${url}/${id}/employees`, employee, bearer(token))\r\n\r\n      dispatch(resetWriteProject())\r\n      dispatch(assignEmployeeOk(res.data, employee.id))\r\n      dispatch(notify(\"Työntekijä osoitettu työmaalle\", \"ok\"))\r\n\r\n    } catch (ex) {\r\n      let error = errorHandler(ex)\r\n\r\n      dispatch(actions.writeError())\r\n      dispatch(notify(error.message, \"error\"))\r\n    }\r\n  }\r\n}\r\n\r\nexport const unassignEmployeeFromProject = (project, employee, token) => {\r\n  return async (dispatch) => {\r\n    dispatch(actions.write())\r\n\r\n    try {\r\n      const res = await axios\r\n        .delete(`${url}/${project}/employees/${employee}`, bearer(token))\r\n\r\n      dispatch(resetWriteProject())\r\n      dispatch(unassignEmployeeOk(res.data, employee))\r\n      dispatch(notify(\"Työntekijä poistettu työmaalta\", \"ok\"))\r\n\r\n    } catch (e) {\r\n      const error = errorHandler(e)\r\n\r\n      dispatch(actions.writeError())\r\n      dispatch(notify(error.message, \"error\"))\r\n    }\r\n  }\r\n}\r\n","import { formatDate, trimDescription } from \"../../util/parser\"\r\n\r\nexport const filterActivities = (activities, filter) =>\r\n  activities\r\n    .filter(a => {\r\n      let d = trimDescription(a.description)\r\n      let h = `${formatDate(a.date)} — ${a.owner.lastName}, ${a.owner.firstName}`\r\n\r\n      return ( d.toLowerCase().includes(filter) ||\r\n               h.toLowerCase().includes(filter))\r\n    })\r\n    .sort((a1, a2) => {\r\n      let a = `${formatDate(a1.date)} — ${a1.owner.lastName}, ${a1.owner.firstName}`\r\n      let b = `${formatDate(a2.date)} — ${a2.owner.lastName}, ${a2.owner.firstName}`\r\n\r\n      return a.localeCompare(b)\r\n    })\r\n\r\nexport const filterActivitiesForEmployee = (activities, filter) =>\r\n  activities\r\n    .filter(a => {\r\n      let d = `${a.project.projectId} — ${a.task.name}`\r\n      let h = `${formatDate(a.date)} — ${a.hours} tuntia`\r\n\r\n      return ( d.toLowerCase().includes(filter) ||\r\n               h.toLowerCase().includes(filter))\r\n    })\r\n    .sort((a1, a2) => {\r\n      if ( formatDate(a1.date) !== formatDate(a2.date) )\r\n        return Date.parse(a2.date) - Date.parse(a1.date)\r\n\r\n      let a = `${a1.project.projectId} — ${a1.task.name}`\r\n      let b = `${a2.project.projectId} — ${a2.task.name}`\r\n\r\n      return a.localeCompare(b)\r\n    })\r\n\r\nexport const filterClients = (clients, filter) =>\r\n  clients\r\n    .filter(c =>\r\n      c.businessId.toLowerCase().includes(filter) ||\r\n      c.legalEntity.toLowerCase().includes(filter))\r\n    .sort((c1, c2) =>\r\n      c1.legalEntity.localeCompare(c2.legalEntity))\r\n\r\nexport const filterEmployees = (employees, filter) =>\r\n  employees\r\n    .filter(e =>\r\n      `${e.lastName}, ${e.firstName}`\r\n        .toLowerCase().includes(filter))\r\n    .sort((e1, e2) =>\r\n      e1.lastName.localeCompare(e2.lastName))\r\n\r\nexport const filterMaterials = (materials, filter) =>\r\n  materials\r\n    .filter(m => m.name.toLowerCase().includes(filter))\r\n    .sort((m1, m2) =>\r\n      m1.name.localeCompare(m2.name))\r\n\r\nexport const filterProjects = (projects, filter) =>\r\n  projects\r\n    .filter(p =>\r\n      p.name.toLowerCase().includes(filter) ||\r\n      p.projectId.toLowerCase().includes(filter) ||\r\n      p.client.legalEntity.toLowerCase().includes(filter))\r\n    .sort((p1, p2) =>\r\n      p1.projectId.localeCompare(p2.projectId))\r\n\r\nexport const filterProjectsForClient = (projects, filter) =>\r\n  projects\r\n    .filter(p => {\r\n      let d = `${formatDate(p.startDate)} — ${formatDate(p.endDate)}`\r\n      let h = `${p.projectId} — ${p.name}`\r\n\r\n      return ( d.toLowerCase().includes(filter) ||\r\n               h.toLowerCase().includes(filter))\r\n    })\r\n    .sort((p1, p2) =>\r\n      p1.projectId.localeCompare(p2.projectId))\r\n\r\nexport const filterTasks = (tasks, filter) =>\r\n  tasks\r\n    .filter(t => {\r\n      let d = `${formatDate(t.startDate)} — ${formatDate(t.endDate)}`\r\n      let h = `${t.project.projectId} — ${t.name}`\r\n\r\n      return ( d.toLowerCase().includes(filter) ||\r\n               h.toLowerCase().includes(filter))\r\n    })\r\n    .sort((t1, t2) => {\r\n      let a = `${t1.project.projectId}_${t1.name}`\r\n      let b = `${t2.project.projectId}_${t2.name}`\r\n\r\n      return a.localeCompare(b)\r\n    })\r\n\r\nexport const filterTasksForProject = (tasks, filter) =>\r\n  tasks\r\n    .filter(t =>\r\n      t.name.toLowerCase().includes(filter) ||\r\n      `${formatDate(t.startDate)} — ${formatDate(t.endDate)}`\r\n        .toLowerCase().includes(filter))\r\n    .sort((t1, t2) =>\r\n      Date.parse(t2.startDate) - Date.parse(t1.startDate))\r\n","import React from \"react\"\r\nimport { formatDate, trimDescription } from \"../../util/parser\"\r\nimport { Button, List } from \"semantic-ui-react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport const activityRow = (a) =>\r\n  <List.Item\r\n    as={Link}\r\n    key={a.id}\r\n    to={`/activities/${a.id}`}\r\n  >\r\n    <List.Icon\r\n      color=\"grey\"\r\n      name={( a.signed )\r\n        ? \"check circle outline\"\r\n        : \"circle outline\"\r\n      }\r\n      verticalAlign=\"middle\"\r\n    />\r\n    <List.Content>\r\n      <List.Header\r\n        content={`${formatDate(a.date)} — ${a.owner.lastName}, ${a.owner.firstName} (${a.hours} tuntia)`}\r\n      />\r\n      <List.Description\r\n        content={trimDescription(a.description)}\r\n      />\r\n    </List.Content>\r\n  </List.Item>\r\n\r\nexport const activityRowForEmployee = (a) =>\r\n  <List.Item\r\n    as={Link}\r\n    key={a.id}\r\n    to={`/activities/${a.id}`}\r\n  >\r\n    <List.Icon\r\n      color=\"grey\"\r\n      name={( a.signed )\r\n        ? \"check circle outline\"\r\n        : \"circle outline\"\r\n      }\r\n      verticalAlign=\"middle\"\r\n    />\r\n    <List.Content>\r\n      <List.Header\r\n        content={`${formatDate(a.date)} — ${a.hours} tuntia`}\r\n      />\r\n      <List.Description\r\n        content={`${a.project.projectId} — ${a.task.name}`}\r\n      />\r\n    </List.Content>\r\n  </List.Item>\r\n\r\nexport const clientRow = (c) =>\r\n  <List.Item\r\n    as={Link}\r\n    key={c.id}\r\n    to={`/clients/${c.id}`}\r\n  >\r\n    <List.Icon\r\n      color=\"grey\"\r\n      name=\"suitcase\"\r\n      verticalAlign=\"middle\"\r\n    />\r\n    <List.Content>\r\n      <List.Header\r\n        content={c.legalEntity}\r\n      />\r\n      <List.Description\r\n        content={c.businessId}\r\n      />\r\n    </List.Content>\r\n  </List.Item>\r\n\r\nexport const employeeRow = (e) =>\r\n  <List.Item\r\n    as={Link}\r\n    key={e.id}\r\n    to={`/employees/${e.id}`}\r\n  >\r\n    <List.Icon\r\n      color=\"grey\"\r\n      name={( e.enabled )\r\n        ? \"check\"\r\n        : \"ban\"\r\n      }\r\n      verticalAlign=\"middle\"\r\n    />\r\n    <List.Content>\r\n      <List.Header\r\n        content={`${e.lastName}, ${e.firstName}`}\r\n      />\r\n      <List.Description\r\n        content={( e.administrator )\r\n          ? \"Työnjohtaja\"\r\n          : \"Työntekijä\"\r\n        }\r\n      />\r\n    </List.Content>\r\n  </List.Item>\r\n\r\nexport const employeeRowForProject = (removeFunc) =>\r\n  (e) =>\r\n    <List.Item\r\n      as={Link}\r\n      key={e.id}\r\n      to={`/employees/${e.id}`}\r\n    >\r\n      <List.Content floated=\"right\">\r\n        {( !removeFunc )\r\n          ? null\r\n          : <Button\r\n            basic\r\n            compact\r\n            icon=\"delete\"\r\n            name={e.id}\r\n            onClick={removeFunc}\r\n          />\r\n        }\r\n      </List.Content>\r\n      <List.Icon\r\n        color=\"grey\"\r\n        name={( e.enabled )\r\n          ? \"check\"\r\n          : \"ban\"\r\n        }\r\n        verticalAlign=\"middle\"\r\n      />\r\n      <List.Content>\r\n        <List.Header\r\n          content={`${e.lastName}, ${e.firstName}`}\r\n        />\r\n        <List.Description\r\n          content={( e.administrator )\r\n            ? \"Työnjohtaja\"\r\n            : \"Työntekijä\"\r\n          }\r\n        />\r\n      </List.Content>\r\n    </List.Item>\r\n\r\nexport const materialRow = (m) =>\r\n  <List.Item\r\n    as={Link}\r\n    key={m.id}\r\n    to={`/materials/${m.id}`}\r\n  >\r\n    <List.Icon\r\n      color=\"grey\"\r\n      name=\"cube\"\r\n      verticalAlign=\"middle\"\r\n    />\r\n    <List.Content>\r\n      <List.Header\r\n        content={m.name}\r\n      />\r\n      <List.Description\r\n        content={`${m.unitCost}€ / ${m.unit}`}\r\n      />\r\n    </List.Content>\r\n  </List.Item>\r\n\r\nexport const projectRow = (p) =>\r\n  <List.Item\r\n    as={Link}\r\n    key={p.id}\r\n    to={`/projects/${p.id}`}\r\n  >\r\n    <List.Icon\r\n      color=\"grey\"\r\n      name=\"industry\"\r\n      verticalAlign=\"middle\"\r\n    />\r\n    <List.Content>\r\n      <List.Description\r\n        content={p.client.legalEntity}\r\n      />\r\n      <List.Header\r\n        content={`${p.name} (${p.projectId})`}\r\n      />\r\n    </List.Content>\r\n  </List.Item>\r\n\r\nexport const projectRowForClient = (p) =>\r\n  <List.Item\r\n    as={Link}\r\n    key={p.id}\r\n    to={`/projects/${p.id}`}\r\n  >\r\n    <List.Icon\r\n      color=\"grey\"\r\n      name=\"industry\"\r\n      verticalAlign=\"middle\"\r\n    />\r\n    <List.Content>\r\n      <List.Description\r\n        content={`${formatDate(p.startDate)} — ${formatDate(p.endDate)}`}\r\n      />\r\n      <List.Header\r\n        content={`${p.name} (${p.projectId})`}\r\n      />\r\n    </List.Content>\r\n  </List.Item>\r\n\r\nexport const taskRow = (t) =>\r\n  <List.Item\r\n    as={Link}\r\n    key={t.id}\r\n    to={`/tasks/${t.id}`}\r\n  >\r\n    <List.Icon\r\n      color=\"grey\"\r\n      name={( t.completed )\r\n        ? \"check circle outline\"\r\n        : \"circle outline\"\r\n      }\r\n      verticalAlign=\"middle\"\r\n    />\r\n    <List.Content>\r\n      <List.Description\r\n        content={`${formatDate(t.startDate)} — ${formatDate(t.endDate)}`}\r\n      />\r\n      <List.Header\r\n        content={`${t.project.name} — ${t.name}`}\r\n      />\r\n    </List.Content>\r\n  </List.Item>\r\n\r\nexport const taskRowForProject = (t) =>\r\n  <List.Item\r\n    as={Link}\r\n    key={t.id}\r\n    to={`/tasks/${t.id}`}\r\n  >\r\n    <List.Icon\r\n      color=\"grey\"\r\n      name={( t.completed )\r\n        ? \"check circle outline\"\r\n        : \"circle outline\"\r\n      }\r\n      verticalAlign=\"middle\"\r\n    />\r\n    <List.Content>\r\n      <List.Description\r\n        content={`${formatDate(t.startDate)} — ${formatDate(t.endDate)}`}\r\n      />\r\n      <List.Header\r\n        content={`${t.name} (${t.daysNeeded} työpäivää)`}\r\n      />\r\n    </List.Content>\r\n  </List.Item>\r\n","import Accordion from \"../../component/widgets/accordion\"\r\nimport AttachmentContainer from \"../attachment/attachment\"\r\nimport ClientFormContainer from \"./client_form\"\r\nimport CommentContainer from \"../comment\"\r\nimport Error from \"../../component/alerts/error\"\r\nimport ListContainer from \"../list\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { fetchProjectsIfNeeded } from \"../../action/project\"\r\nimport { filterProjectsForClient } from \"../../component/lists/list_filters\"\r\nimport { projectRowForClient } from \"../../component/lists/list_rows\"\r\nimport {\r\n  fetchClients,\r\n  resetWriteClient,\r\n  updateClient\r\n} from \"../../action/client\"\r\n\r\nclass ClientContainer extends React.Component {\r\n  componentDidMount = () =>\r\n    this.props.refresh(this.props.token)\r\n\r\n  componentWillUnmount = () =>\r\n    this.props.reset()\r\n\r\n  render = () => {\r\n    let { client, id, isNew } = this.props\r\n    if ( !isNew && !client ) return <Error />\r\n\r\n    return (\r\n      <div>\r\n        <Accordion\r\n          active={isNew}\r\n          title=\"Perustiedot\"\r\n        >\r\n          <ClientFormContainer\r\n            client={client || {}}\r\n            id={id}\r\n            isNew={isNew}\r\n          />\r\n        </Accordion>\r\n        {( isNew )\r\n          ? null\r\n          : <div>\r\n            <Accordion\r\n              active={( this.props.projects.length > 0 )}\r\n              title=\"Asiakkaan työmaat\"\r\n            >\r\n              <ListContainer\r\n                entities={this.props.projects}\r\n                filter={filterProjectsForClient}\r\n                toRow={projectRowForClient}\r\n              />\r\n            </Accordion>\r\n            <Accordion\r\n              active={( client.attachments.length > 0 )}\r\n              title=\"Liitteet\"\r\n            >\r\n              <AttachmentContainer\r\n                attachments={client.attachments || []}\r\n                entity=\"Client\"\r\n                id={id}\r\n                thunk={updateClient}\r\n              />\r\n            </Accordion>\r\n            <Accordion\r\n              active={( client.comments.length > 0 )}\r\n              title=\"Huomiot\"\r\n            >\r\n              <CommentContainer\r\n                comments={client.comments || []}\r\n                entity=\"Client\"\r\n                id={id}\r\n                thunk={fetchClients}\r\n              />\r\n            </Accordion>\r\n          </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  let { id } = props.match.params\r\n\r\n  return {\r\n    client : state.clients.data.items\r\n      .find(c => c.id === id),\r\n    id,\r\n    isNew : ( id === \"new\" ),\r\n    projects : state.projects.data.items\r\n      .filter(p => p.client.id === id),\r\n    token : state.auth.token\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => (\r\n  {\r\n    refresh : (token) => {\r\n      dispatch(fetchProjectsIfNeeded(token))\r\n    },\r\n    reset : () => {\r\n      dispatch(resetWriteClient())\r\n    }\r\n  }\r\n)\r\n\r\nClientContainer.propTypes = {\r\n  client : PropTypes.object,\r\n  id : PropTypes.string.isRequired,\r\n  isNew : PropTypes.bool.isRequired,\r\n  match : PropTypes.object.isRequired,\r\n  projects : PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  refresh : PropTypes.func.isRequired,\r\n  reset : PropTypes.func.isRequired,\r\n  token : PropTypes.string.isRequired\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ClientContainer)\r\n","import PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { Button, Divider } from \"semantic-ui-react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst LinkButton = ({ active, href, label }) =>\r\n  ( !active )\r\n    ? null\r\n    : <div>\r\n      <Divider />\r\n      <Button\r\n        as={Link}\r\n        content={label}\r\n        fluid\r\n        to={href}\r\n      />\r\n    </div>\r\n\r\nLinkButton.propTypes = {\r\n  active : PropTypes.bool.isRequired,\r\n  href : PropTypes.string.isRequired,\r\n  label : PropTypes.string.isRequired\r\n}\r\n\r\nexport default LinkButton\r\n","import LinkButton from \"../../component/widgets/link_button\"\r\nimport ListContainer from \"../list\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { clientRow } from \"../../component/lists/list_rows\"\r\nimport { connect } from \"react-redux\"\r\nimport { filterClients } from \"../../component/lists/list_filters\"\r\n\r\nconst ClientsContainer = ({ admin, clients }) =>\r\n  <div>\r\n    <ListContainer\r\n      entities={clients}\r\n      filter={filterClients}\r\n      toRow={clientRow}\r\n    />\r\n    <LinkButton\r\n      active={admin}\r\n      href=\"/clients/new\"\r\n      label=\"Lisää uusi asiakas\"\r\n    />\r\n  </div>\r\n\r\nconst mapStateToProps = (state) => (\r\n  {\r\n    admin : state.auth.admin,\r\n    clients : state.clients.data.items\r\n  }\r\n)\r\n\r\nClientsContainer.propTypes = {\r\n  admin : PropTypes.bool.isRequired,\r\n  clients : PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(ClientsContainer)\r\n","import ClientContainer from \"../container/client/client\"\r\nimport ClientsContainer from \"../container/client/clients\"\r\nimport Error from \"../component/alerts/error\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport Spinner from \"../component/widgets/spinner\"\r\nimport { connect } from \"react-redux\"\r\nimport { fetchClientsIfNeeded } from \"../action/client\"\r\nimport { Route } from \"react-router-dom\"\r\n\r\nclass ClientRoot extends React.Component {\r\n  componentDidMount = () =>\r\n    this.props.refresh(this.props.token)\r\n\r\n  render = () => {\r\n    let { error, match, pending } = this.props\r\n\r\n    if ( pending ) return <Spinner />\r\n    if ( error ) return <Error message={error} />\r\n\r\n    return (\r\n      <div>\r\n        <h2 className=\"padded\">Asiakkaat</h2>\r\n        <Route\r\n          component={ClientContainer}\r\n          exact path={`${match.path}/:id`}\r\n        />\r\n        <Route\r\n          component={ClientsContainer}\r\n          exact path={match.path}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => (\r\n  {\r\n    error : state.clients.data.error,\r\n    pending : state.clients.data.pending,\r\n    token : state.auth.token\r\n  }\r\n)\r\n\r\nconst mapDispatchToProps = (dispatch) => (\r\n  {\r\n    refresh : (token) => {\r\n      dispatch(fetchClientsIfNeeded(token))\r\n    }\r\n  }\r\n)\r\n\r\nClientRoot.propTypes = {\r\n  error : PropTypes.string,\r\n  match : PropTypes.object.isRequired,\r\n  pending : PropTypes.bool.isRequired,\r\n  refresh : PropTypes.func.isRequired,\r\n  token : PropTypes.string.isRequired\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ClientRoot)\r\n","import FormError from \"../alerts/form_error\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { Form, Input } from \"semantic-ui-react\"\r\n\r\nconst AddressForm = (props) => {\r\n  let { errors, onChange, readOnly, state } = props\r\n\r\n  return (\r\n    <div>\r\n      <Form.Field error={errors[\"address.street\"] !== undefined}>\r\n        <label>Osoite</label>\r\n        <Input\r\n          name=\"street\"\r\n          onChange={onChange}\r\n          placeholder=\"Saumakuja 313\"\r\n          readOnly={readOnly}\r\n          value={state.street}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field error={errors[\"address.street\"] !== undefined}>\r\n        <Input\r\n          name=\"streetExt\"\r\n          onChange={onChange}\r\n          readOnly={readOnly}\r\n          value={state.streetExt}\r\n        />\r\n        <FormError error={errors[\"address.street\"]} />\r\n      </Form.Field>\r\n      <Form.Field error={errors[\"address.zipCode\"] !== undefined}>\r\n        <label>Postinumero</label>\r\n        <Input\r\n          name=\"zipCode\"\r\n          onChange={onChange}\r\n          placeholder=\"01300\"\r\n          readOnly={readOnly}\r\n          value={state.zipCode}\r\n        />\r\n        <FormError error={errors[\"address.zipCode\"]} />\r\n      </Form.Field>\r\n      <Form.Field error={errors[\"address.city\"] !== undefined}>\r\n        <label>Kaupunki</label>\r\n        <Input\r\n          name=\"city\"\r\n          onChange={onChange}\r\n          placeholder=\"Saumala\"\r\n          readOnly={readOnly}\r\n          value={state.city}\r\n        />\r\n        <FormError error={errors[\"address.city\"]} />\r\n      </Form.Field>\r\n      <Form.Field error={errors[\"address.country\"] !== undefined}>\r\n        <label>Valtio</label>\r\n        <Input\r\n          name=\"country\"\r\n          onChange={onChange}\r\n          placeholder=\"Suomi\"\r\n          readOnly={readOnly}\r\n          value={state.country}\r\n        />\r\n        <FormError error={errors[\"address.country\"]} />\r\n      </Form.Field>\r\n    </div>\r\n  )\r\n}\r\n\r\nAddressForm.propTypes = {\r\n  errors : PropTypes.object.isRequired,\r\n  onChange : PropTypes.func.isRequired,\r\n  readOnly : PropTypes.bool.isRequired,\r\n  state : PropTypes.object.isRequired,\r\n}\r\n\r\nexport default AddressForm\r\n","import AddressForm from \"../component/forms/address_form\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\n\r\nclass AddressFormContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = props.address\r\n  }\r\n\r\n  handleChange = (e, { name, value }) => {\r\n    let address = {\r\n      ...this.state,\r\n      [name] : value\r\n    }\r\n\r\n    this.setState(address)\r\n    this.props.sync(address)\r\n  }\r\n\r\n  render = () =>\r\n    <AddressForm\r\n      errors={this.props.errors}\r\n      onChange={this.handleChange}\r\n      readOnly={this.props.readOnly}\r\n      state={this.state}\r\n    />\r\n}\r\n\r\nAddressFormContainer.propTypes = {\r\n  address : PropTypes.object.isRequired,\r\n  errors : PropTypes.object.isRequired,\r\n  readOnly : PropTypes.bool.isRequired,\r\n  sync : PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddressFormContainer\r\n","import FormError from \"../alerts/form_error\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { Form, Input } from \"semantic-ui-react\"\r\n\r\nconst EmployeeForm = (props) => {\r\n  let { errors, onChange, readOnly, state } = props\r\n\r\n  return (\r\n    <div>\r\n      <Form.Field error={errors.username !== undefined}>\r\n        <label>Käyttäjätunnus</label>\r\n        <Input\r\n          name=\"username\"\r\n          onChange={onChange}\r\n          placeholder=\"Tällä kirjaudutaan sisään\"\r\n          readOnly={readOnly}\r\n          value={state.username}\r\n        />\r\n        <FormError error={errors.username} />\r\n      </Form.Field>\r\n      <Form.Field error={errors.firstName !== undefined}>\r\n        <label>Etunimi</label>\r\n        <Input\r\n          name=\"firstName\"\r\n          onChange={onChange}\r\n          placeholder=\"Paavo\"\r\n          readOnly={readOnly}\r\n          value={state.firstName}\r\n        />\r\n        <FormError error={errors.firstName} />\r\n      </Form.Field>\r\n      <Form.Field error={errors.lastName !== undefined}>\r\n        <label>Sukunimi</label>\r\n        <Input\r\n          name=\"lastName\"\r\n          onChange={onChange}\r\n          placeholder=\"Pesusieni\"\r\n          readOnly={readOnly}\r\n          value={state.lastName}\r\n        />\r\n        <FormError error={errors.lastName} />\r\n      </Form.Field>\r\n      <Form.Field error={errors.phone !== undefined}>\r\n        <label>Puhelin</label>\r\n        <Input\r\n          name=\"phone\"\r\n          onChange={onChange}\r\n          placeholder=\"040-123-4567\"\r\n          readOnly={readOnly}\r\n          value={state.phone}\r\n        />\r\n        <FormError error={errors.phone} />\r\n      </Form.Field>\r\n      <Form.Field error={errors.email !== undefined}>\r\n        <label>Email</label>\r\n        <Input\r\n          name=\"email\"\r\n          onChange={onChange}\r\n          placeholder=\"paavo@firma.io\"\r\n          readOnly={readOnly}\r\n          value={state.email}\r\n        />\r\n        <FormError error={errors.email} />\r\n      </Form.Field>\r\n    </div>\r\n  )\r\n}\r\n\r\nEmployeeForm.propTypes = {\r\n  errors : PropTypes.object.isRequired,\r\n  onChange : PropTypes.func.isRequired,\r\n  readOnly : PropTypes.bool.isRequired,\r\n  state : PropTypes.object.isRequired,\r\n}\r\n\r\nexport default EmployeeForm\r\n","import axios from \"axios\"\r\nimport { bearer, errorHandler, shouldFetch, standardActions } from \"./helper\"\r\nimport { notify } from \"./notification\"\r\n\r\nconst url = \"/api/employees\"\r\n\r\n/*\r\n *  ACTION TYPES\r\n */\r\nexport const types = {\r\n  FETCH : \"FETCH_EMPLOYEES\",\r\n  FETCH_OK : \"FETCH_EMPLOYEES_OK\",\r\n  FETCH_ERROR : \"FETCH_EMPLOYEES_ERROR\",\r\n  WRITE : \"WRITE_EMPLOYEE\",\r\n  WRITE_ERROR : \"WRITE_EMPLOYEE_ERROR\",\r\n  WRITE_INVALID : \"WRITE_EMPLOYEE_INVALID\",\r\n  WRITE_RESET : \"RESET_WRITE_EMPLOYEE\",\r\n  CREATED : \"CREATE_EMPLOYEE_OK\",\r\n  UPDATED : \"UPDATE_EMPLOYEE_OK\",\r\n  ASSIGNED : \"ASSIGN_EMPLOYEE_OK\",\r\n  UNASSIGNED : \"UNASSIGN_EMPLOYEE_OK\"\r\n}\r\n\r\n/*\r\n *  ACTION CREATORS\r\n */\r\nconst actions = standardActions(types)\r\n\r\nexport const resetWriteEmployee = () =>\r\n  ({ type : types.WRITE_RESET })\r\n\r\n/*\r\n *  THUNKS\r\n */\r\nconst fetchEmployees = (token) => {\r\n  return async (dispatch) => {\r\n    dispatch(actions.fetch())\r\n\r\n    try {\r\n      let res = await axios\r\n        .get(url, bearer(token))\r\n\r\n      dispatch(actions.fetchOk(res.data))\r\n\r\n    } catch (ex) {\r\n      let error = errorHandler(ex)\r\n      dispatch(actions.fetchError(error.message))\r\n    }\r\n  }\r\n}\r\n\r\nexport const fetchEmployeesIfNeeded = (token) => {\r\n  return async (dispatch, getState) => {\r\n    if ( shouldFetch(getState(), \"employees\") )\r\n      dispatch(fetchEmployees(token))\r\n    else\r\n      return Promise.resolve()\r\n  }\r\n}\r\n\r\nexport const createEmployee = (employee, token, history) => {\r\n  return async (dispatch) => {\r\n    dispatch(actions.write())\r\n\r\n    try {\r\n      let res = await axios\r\n        .post(url, employee, bearer(token))\r\n\r\n      dispatch(resetWriteEmployee())\r\n      dispatch(actions.createOk(res.data))\r\n      dispatch(notify(\"Uusi työntekijä lisätty\", \"ok\"))\r\n      history.replace(`/employees/${res.data.id}`)\r\n\r\n    } catch (ex) {\r\n      let error = errorHandler(ex)\r\n\r\n      if ( error.validation )\r\n        dispatch(actions.writeInvalid(error.validation))\r\n      else\r\n        dispatch(actions.writeError())\r\n\r\n      dispatch(notify(error.message, \"error\"))\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateEmployee = (id, employee, token) => {\r\n  return async (dispatch) => {\r\n    dispatch(actions.write())\r\n\r\n    try {\r\n      let res = await axios\r\n        .put(`${url}/${id}`, employee, bearer(token))\r\n\r\n      dispatch(resetWriteEmployee())\r\n      dispatch(actions.updateOk(res.data))\r\n      dispatch(notify(\"Työntekijän tiedot päivitetty\", \"ok\"))\r\n\r\n    } catch (ex) {\r\n      let error = errorHandler(ex)\r\n\r\n      if ( error.validation )\r\n        dispatch(actions.writeInvalid(error.validation))\r\n      else\r\n        dispatch(actions.writeError())\r\n\r\n      dispatch(notify(error.message, \"error\"))\r\n    }\r\n  }\r\n}\r\n\r\nexport const changePassword = (id, passwords, token) => {\r\n  return async (dispatch) => {\r\n    dispatch(actions.write())\r\n\r\n    try {\r\n      await axios\r\n        .put(`${url}/${id}/password`, passwords, bearer(token))\r\n\r\n      dispatch(resetWriteEmployee())\r\n      dispatch(notify(\"Salasana vaihdettu\", \"ok\"))\r\n\r\n    } catch (ex) {\r\n      let error = errorHandler(ex)\r\n\r\n      if ( error.validation )\r\n        dispatch(actions.writeInvalid(error.validation))\r\n      else\r\n        dispatch(actions.writeError())\r\n\r\n      dispatch(notify(error.message, \"error\"))\r\n    }\r\n  }\r\n}\r\n","import AddressFormContainer from \"../address_form\"\r\nimport EmployeeForm from \"../../component/forms/employee_form\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { Button, Divider, Form } from \"semantic-ui-react\"\r\nimport { connect } from \"react-redux\"\r\nimport { createEmployee, updateEmployee } from \"../../action/employee\"\r\nimport { employeeState } from \"../../util/form_state\"\r\nimport { withRouter } from \"react-router-dom\"\r\n\r\nclass EmployeeFormContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = employeeState(props.employee)\r\n  }\r\n\r\n  handleChange = (e, data) => {\r\n    let value = ( data.type === \"checkbox\" )\r\n      ? data.checked\r\n      : data.value\r\n\r\n    this.setState({ [data.name] : value })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    let { history, id, isNew, token } = this.props\r\n    this.props.save(this.state, history, id, isNew, token)\r\n  }\r\n\r\n  syncAddressState = (address) =>\r\n    this.setState({ ...this.state, address })\r\n\r\n  render = () =>\r\n    <Form\r\n      loading={this.props.pending}\r\n      onSubmit={this.handleSubmit}\r\n    >\r\n      <EmployeeForm\r\n        errors={this.props.errors}\r\n        onChange={this.handleChange}\r\n        readOnly={this.props.readOnly}\r\n        state={this.state}\r\n      />\r\n      <Divider hidden />\r\n      <AddressFormContainer\r\n        address={this.state.address}\r\n        errors={this.props.errors}\r\n        readOnly={this.props.readOnly}\r\n        sync={this.syncAddressState}\r\n      />\r\n      <Divider hidden />\r\n      <Form.Group widths=\"equal\">\r\n        <Form.Checkbox\r\n          checked={this.state.administrator}\r\n          label=\"Työnjohtaja\"\r\n          name=\"administrator\"\r\n          onChange={this.handleChange}\r\n          readOnly={this.props.readOnly}\r\n        />\r\n        <Form.Checkbox\r\n          checked={this.state.enabled}\r\n          label=\"Käyttöoikeudet\"\r\n          name=\"enabled\"\r\n          onChange={this.handleChange}\r\n          readOnly={this.props.readOnly}\r\n        />\r\n      </Form.Group>\r\n      <Divider hidden />\r\n      {( this.props.readOnly )\r\n        ? null\r\n        : <Button content=\"Tallenna\" fluid />\r\n      }\r\n    </Form>\r\n}\r\n\r\nconst mapStateToProps = (state) => (\r\n  {\r\n    errors : state.employees.write.errors,\r\n    pending : state.employees.write.pending,\r\n    readOnly : ( !state.auth.admin ),\r\n    token : state.auth.token\r\n  }\r\n)\r\n\r\nconst mapDispatchToProps = (dispatch) => (\r\n  {\r\n    save : (data, history, id, isNew, token) => {\r\n      ( isNew )\r\n        ? dispatch(createEmployee(data, token, history))\r\n        : dispatch(updateEmployee(id, data, token))\r\n    }\r\n  }\r\n)\r\n\r\nEmployeeFormContainer.propTypes = {\r\n  employee : PropTypes.object.isRequired,\r\n  errors : PropTypes.object.isRequired,\r\n  history : PropTypes.object.isRequired,\r\n  id : PropTypes.string.isRequired,\r\n  isNew : PropTypes.bool.isRequired,\r\n  pending : PropTypes.bool.isRequired,\r\n  readOnly : PropTypes.bool.isRequired,\r\n  save : PropTypes.func.isRequired,\r\n  token : PropTypes.string.isRequired\r\n}\r\n\r\nexport default withRouter(connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EmployeeFormContainer))\r\n","import Accordion from \"../../component/widgets/accordion\"\r\nimport EmployeeFormContainer from \"./employee_form\"\r\nimport Error from \"../../component/alerts/error\"\r\nimport ListContainer from \"../list\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport {\r\n  activityRowForEmployee,\r\n  projectRow\r\n} from \"../../component/lists/list_rows\"\r\nimport { connect } from \"react-redux\"\r\nimport { fetchActivitiesIfNeeded } from \"../../action/activity\"\r\nimport { fetchProjectsIfNeeded } from \"../../action/project\"\r\nimport {\r\n  filterActivitiesForEmployee,\r\n  filterProjects\r\n} from \"../../component/lists/list_filters\"\r\nimport { resetWriteEmployee } from \"../../action/employee\"\r\n\r\nclass EmployeeContainer extends React.Component {\r\n  componentDidMount = () =>\r\n    this.props.refresh(this.props.token)\r\n\r\n  componentWillUnmount = () =>\r\n    this.props.reset()\r\n\r\n  render = () => {\r\n    let { employee, isNew } = this.props\r\n    if ( !isNew && !employee ) return <Error />\r\n\r\n    return (\r\n      <div>\r\n        <Accordion\r\n          active={isNew}\r\n          title=\"Perustiedot\"\r\n        >\r\n          <EmployeeFormContainer\r\n            employee={employee || {}}\r\n            id={this.props.id}\r\n            isNew={isNew}\r\n          />\r\n        </Accordion>\r\n        {( isNew )\r\n          ? null\r\n          : <div>\r\n            <Accordion\r\n              active={( employee.projects.length > 0 )}\r\n              title=\"Työmaat\"\r\n            >\r\n              <ListContainer\r\n                entities={this.props.projects}\r\n                filter={filterProjects}\r\n                toRow={projectRow}\r\n              />\r\n            </Accordion>\r\n            <Accordion\r\n              active={( this.props.activities.length > 0 )}\r\n              title=\"Suoritteet\"\r\n            >\r\n              <ListContainer\r\n                entities={this.props.activities}\r\n                filter={filterActivitiesForEmployee}\r\n                toRow={activityRowForEmployee}\r\n              />\r\n            </Accordion>\r\n          </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  let { id } = props.match.params\r\n\r\n  return {\r\n    activities : state.activities.data.items\r\n      .filter(a => a.owner.id === id),\r\n    employee : state.employees.data.items\r\n      .find(e => e.id === id),\r\n    id,\r\n    isNew : ( id === \"new\" ),\r\n    projects : state.projects.data.items\r\n      .filter(p => p.employees.includes(id)),\r\n    token : state.auth.token\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => (\r\n  {\r\n    refresh : (token) => {\r\n      dispatch(fetchActivitiesIfNeeded(token))\r\n      dispatch(fetchProjectsIfNeeded(token))\r\n    },\r\n    reset : () => {\r\n      dispatch(resetWriteEmployee())\r\n    }\r\n  }\r\n)\r\n\r\nEmployeeContainer.propTypes = {\r\n  activities : PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  employee : PropTypes.object,\r\n  id : PropTypes.string.isRequired,\r\n  isNew : PropTypes.bool.isRequired,\r\n  match : PropTypes.object.isRequired,\r\n  projects : PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  refresh : PropTypes.func.isRequired,\r\n  reset : PropTypes.func.isRequired,\r\n  token : PropTypes.string.isRequired\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EmployeeContainer)\r\n","import LinkButton from \"../../component/widgets/link_button\"\r\nimport ListContainer from \"../list\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { employeeRow } from \"../../component/lists/list_rows\"\r\nimport { filterEmployees } from \"../../component/lists/list_filters\"\r\n\r\nconst EmployeesContainer = ({ admin, employees }) =>\r\n  <div>\r\n    <ListContainer\r\n      entities={employees}\r\n      filter={filterEmployees}\r\n      toRow={employeeRow}\r\n    />\r\n    <LinkButton\r\n      active={admin}\r\n      href=\"/employees/new\"\r\n      label=\"Lisää uusi henkilö\"\r\n    />\r\n  </div>\r\n\r\nconst mapStateToProps = (state) => (\r\n  {\r\n    admin : state.auth.admin,\r\n    employees : state.employees.data.items\r\n  }\r\n)\r\n\r\nEmployeesContainer.propTypes = {\r\n  admin : PropTypes.bool.isRequired,\r\n  employees : PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(EmployeesContainer)\r\n","import EmployeeContainer from \"../container/employee/employee\"\r\nimport EmployeesContainer from \"../container/employee/employees\"\r\nimport Error from \"../component/alerts/error\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport Spinner from \"../component/widgets/spinner\"\r\nimport { connect } from \"react-redux\"\r\nimport { fetchEmployeesIfNeeded } from \"../action/employee\"\r\nimport { Route } from \"react-router-dom\"\r\n\r\nclass EmployeeRoot extends React.Component {\r\n  componentDidMount = () =>\r\n    this.props.refresh(this.props.token)\r\n\r\n  render = () => {\r\n    let { error, match, pending } = this.props\r\n\r\n    if ( pending ) return <Spinner />\r\n    if ( error ) return <Error message={error} />\r\n\r\n    return (\r\n      <div>\r\n        <h2 className=\"padded\">Henkilöstö</h2>\r\n        <Route\r\n          component={EmployeeContainer}\r\n          exact path={`${match.path}/:id`}\r\n        />\r\n        <Route\r\n          component={EmployeesContainer}\r\n          exact path={match.path}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => (\r\n  {\r\n    error : state.employees.data.error,\r\n    pending : state.employees.data.pending,\r\n    token : state.auth.token\r\n  }\r\n)\r\n\r\nconst mapDispatchToProps = (dispatch) => (\r\n  {\r\n    refresh : (token) => {\r\n      dispatch(fetchEmployeesIfNeeded(token))\r\n    }\r\n  }\r\n)\r\n\r\nEmployeeRoot.propTypes = {\r\n  error : PropTypes.string,\r\n  match : PropTypes.object.isRequired,\r\n  pending : PropTypes.bool.isRequired,\r\n  refresh : PropTypes.func.isRequired,\r\n  token : PropTypes.string.isRequired\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EmployeeRoot)\r\n","import FormError from \"../alerts/form_error\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { Form, Input } from \"semantic-ui-react\"\r\n\r\nconst MaterialForm = (props) => {\r\n  let { errors, onChange, readOnly, state } = props\r\n\r\n  return (\r\n    <div>\r\n      <Form.Field error={errors.name !== undefined}>\r\n        <label>Nimike</label>\r\n        <Input\r\n          name=\"name\"\r\n          onChange={onChange}\r\n          placeholder=\"Esim. tuotenimi ja saumaleveys\"\r\n          readOnly={readOnly}\r\n          value={state.name}\r\n        />\r\n        <FormError error={errors.name} />\r\n      </Form.Field>\r\n      <Form.Field error={errors.unit !== undefined}>\r\n        <label>Mittayksikkö</label>\r\n        <Input\r\n          name=\"unit\"\r\n          onChange={onChange}\r\n          placeholder=\"m / m³ / kpl ...\"\r\n          readOnly={readOnly}\r\n          value={state.unit}\r\n        />\r\n        <FormError error={errors.unit} />\r\n      </Form.Field>\r\n      <Form.Field error={errors.unitCost !== undefined}>\r\n        <label>Yksikkökustannus</label>\r\n        <Input\r\n          icon=\"eur\"\r\n          iconPosition=\"left\"\r\n          name=\"unitCost\"\r\n          onChange={onChange}\r\n          placeholder=\"13.37\"\r\n          readOnly={readOnly}\r\n          value={state.unitCost}\r\n        />\r\n        <FormError error={errors.unitCost} />\r\n      </Form.Field>\r\n    </div>\r\n  )\r\n}\r\n\r\nMaterialForm.propTypes = {\r\n  errors : PropTypes.object.isRequired,\r\n  onChange : PropTypes.func.isRequired,\r\n  readOnly : PropTypes.bool.isRequired,\r\n  state : PropTypes.object.isRequired,\r\n}\r\n\r\nexport default MaterialForm\r\n","import MaterialForm from \"../../component/forms/material_form\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { Button, Divider, Form } from \"semantic-ui-react\"\r\nimport { connect } from \"react-redux\"\r\nimport { createMaterial, updateMaterial } from \"../../action/material\"\r\nimport { materialState } from \"../../util/form_state\"\r\nimport { parseNumber } from \"../../util/parser\"\r\nimport { withRouter } from \"react-router-dom\"\r\n\r\nclass MaterialFormContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = materialState(props.material)\r\n  }\r\n\r\n  handleChange = (e, { name, value }) =>\r\n    this.setState({ [name] : value })\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    let { history, id, isNew, token } = this.props\r\n    this.props.save(this.state, history, id, isNew, token)\r\n  }\r\n\r\n  render = () =>\r\n    <Form\r\n      loading={this.props.pending}\r\n      onSubmit={this.handleSubmit}\r\n    >\r\n      <MaterialForm\r\n        errors={this.props.errors}\r\n        onChange={this.handleChange}\r\n        readOnly={this.props.readOnly}\r\n        state={this.state}\r\n      />\r\n      <Divider hidden />\r\n      {( this.props.readOnly )\r\n        ? null\r\n        : <Button content=\"Tallenna\" fluid />\r\n      }\r\n    </Form>\r\n}\r\n\r\nconst mapStateToProps = (state) => (\r\n  {\r\n    errors : state.materials.write.errors,\r\n    pending : state.materials.write.pending,\r\n    readOnly : ( !state.auth.admin ),\r\n    token : state.auth.token\r\n  }\r\n)\r\n\r\nconst mapDispatchToProps = (dispatch) => (\r\n  {\r\n    save : (data, history, id, isNew, token) => {\r\n      let payload = {\r\n        ...data,\r\n        unitCost : parseNumber(data.unitCost)\r\n      }\r\n      return ( isNew )\r\n        ? dispatch(createMaterial(payload, token, history))\r\n        : dispatch(updateMaterial(id, payload, token))\r\n    }\r\n  }\r\n)\r\n\r\nMaterialFormContainer.propTypes = {\r\n  errors : PropTypes.object.isRequired,\r\n  history : PropTypes.object.isRequired,\r\n  id : PropTypes.string.isRequired,\r\n  isNew : PropTypes.bool.isRequired,\r\n  material : PropTypes.object.isRequired,\r\n  pending : PropTypes.bool.isRequired,\r\n  readOnly : PropTypes.bool.isRequired,\r\n  save : PropTypes.func.isRequired,\r\n  token : PropTypes.string.isRequired\r\n}\r\n\r\nexport default withRouter(connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MaterialFormContainer))\r\n","import Accordion from \"../../component/widgets/accordion\"\r\nimport AttachmentContainer from \"../attachment/attachment\"\r\nimport CommentContainer from \"../comment\"\r\nimport Error from \"../../component/alerts/error\"\r\nimport MaterialFormContainer from \"./material_form\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport {\r\n  fetchMaterials,\r\n  resetWriteMaterial,\r\n  updateMaterial\r\n} from \"../../action/material\"\r\n\r\nclass MaterialContainer extends React.Component {\r\n  componentWillUnmount = () =>\r\n    this.props.reset()\r\n\r\n  render = () => {\r\n    let { id, isNew, material } = this.props\r\n    if ( !isNew && !material ) return <Error />\r\n\r\n    return (\r\n      <div>\r\n        <Accordion\r\n          active={isNew}\r\n          title=\"Perustiedot\"\r\n        >\r\n          <MaterialFormContainer\r\n            id={id}\r\n            isNew={isNew}\r\n            material={material || {}}\r\n          />\r\n        </Accordion>\r\n        {( isNew )\r\n          ? null\r\n          : <div>\r\n            <Accordion\r\n              active={( material.attachments.length > 0 )}\r\n              title=\"Liitteet\"\r\n            >\r\n              <AttachmentContainer\r\n                attachments={material.attachments || []}\r\n                entity=\"Material\"\r\n                id={id}\r\n                thunk={updateMaterial}\r\n              />\r\n            </Accordion>\r\n            <Accordion\r\n              active={( material.comments.length > 0 )}\r\n              title=\"Huomiot\"\r\n            >\r\n              <CommentContainer\r\n                comments={material.comments || []}\r\n                entity=\"Material\"\r\n                id={id}\r\n                thunk={fetchMaterials}\r\n              />\r\n            </Accordion>\r\n          </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  let { id } = props.match.params\r\n\r\n  return {\r\n    id,\r\n    isNew : ( id === \"new\" ),\r\n    material : state.materials.data.items\r\n      .find(m => m.id === id)\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => (\r\n  {\r\n    reset : () => {\r\n      dispatch(resetWriteMaterial())\r\n    }\r\n  }\r\n)\r\n\r\nMaterialContainer.propTypes = {\r\n  id : PropTypes.string.isRequired,\r\n  isNew : PropTypes.bool.isRequired,\r\n  match : PropTypes.object.isRequired,\r\n  material : PropTypes.object,\r\n  reset : PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MaterialContainer)\r\n","import LinkButton from \"../../component/widgets/link_button\"\r\nimport ListContainer from \"../list\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { filterMaterials } from \"../../component/lists/list_filters\"\r\nimport { materialRow } from \"../../component/lists/list_rows\"\r\n\r\nconst MaterialsContainer = ({ admin, materials }) =>\r\n  <div>\r\n    <ListContainer\r\n      entities={materials}\r\n      filter={filterMaterials}\r\n      toRow={materialRow}\r\n    />\r\n    <LinkButton\r\n      active={admin}\r\n      href=\"/materials/new\"\r\n      label=\"Lisää uusi materiaali\"\r\n    />\r\n  </div>\r\n\r\nconst mapStateToProps = (state) => (\r\n  {\r\n    admin : state.auth.admin,\r\n    materials : state.materials.data.items\r\n  }\r\n)\r\n\r\nMaterialsContainer.propTypes = {\r\n  admin : PropTypes.bool.isRequired,\r\n  materials : PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(MaterialsContainer)\r\n","import Error from \"../component/alerts/error\"\r\nimport MaterialContainer from \"../container/material/material\"\r\nimport MaterialsContainer from \"../container/material/materials\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport Spinner from \"../component/widgets/spinner\"\r\nimport { connect } from \"react-redux\"\r\nimport { fetchMaterialsIfNeeded } from \"../action/material\"\r\nimport { Route } from \"react-router-dom\"\r\n\r\nclass MaterialRoot extends React.Component {\r\n  componentDidMount = () =>\r\n    this.props.refresh(this.props.token)\r\n\r\n  render = () => {\r\n    let { error, match, pending } = this.props\r\n\r\n    if ( pending ) return <Spinner />\r\n    if ( error ) return <Error message={error} />\r\n\r\n    return (\r\n      <div>\r\n        <h2 className=\"padded\">Materiaalit</h2>\r\n        <Route\r\n          component={MaterialContainer}\r\n          exact path={`${match.path}/:id`}\r\n        />\r\n        <Route\r\n          exact path={match.path}\r\n          component={MaterialsContainer}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => (\r\n  {\r\n    error : state.materials.data.error,\r\n    pending : state.materials.data.pending,\r\n    token : state.auth.token\r\n  }\r\n)\r\n\r\nconst mapDispatchToProps = (dispatch) => (\r\n  {\r\n    refresh : (token) => {\r\n      dispatch(fetchMaterialsIfNeeded(token))\r\n    }\r\n  }\r\n)\r\n\r\nMaterialRoot.propTypes = {\r\n  error : PropTypes.string,\r\n  match : PropTypes.object.isRequired,\r\n  pending : PropTypes.bool.isRequired,\r\n  refresh : PropTypes.func.isRequired,\r\n  token : PropTypes.string.isRequired\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MaterialRoot)\r\n","import AddressFormContainer from \"../address_form\"\r\nimport EmployeeForm from \"../../component/forms/employee_form\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { Button, Divider, Form } from \"semantic-ui-react\"\r\nimport { connect } from \"react-redux\"\r\nimport { employeeState } from \"../../util/form_state\"\r\nimport { updateEmployee } from \"../../action/employee\"\r\n\r\nconst initState = (e) => {\r\n  let state = employeeState(e)\r\n\r\n  delete state.administrator\r\n  delete state.enabled\r\n\r\n  return state\r\n}\r\n\r\nclass MyFormContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = initState(props.employee)\r\n  }\r\n\r\n  handleChange = (e, { name, value }) =>\r\n    this.setState({ [name] : value })\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    let { id, token } = this.props.auth\r\n    this.props.updateEmployee(id, this.state, token)\r\n  }\r\n\r\n  syncAddressState = (address) =>\r\n    this.setState({ ...this.state, address })\r\n\r\n  render = () =>\r\n    <Form\r\n      loading={this.props.pending}\r\n      onSubmit={this.handleSubmit}\r\n    >\r\n      <EmployeeForm\r\n        errors={this.props.errors}\r\n        onChange={this.handleChange}\r\n        readOnly={false}\r\n        state={this.state}\r\n      />\r\n      <Divider hidden />\r\n      <AddressFormContainer\r\n        address={this.state.address}\r\n        errors={this.props.errors}\r\n        readOnly={false}\r\n        sync={this.syncAddressState}\r\n      />\r\n      <Divider hidden />\r\n      <Button content=\"Tallenna\" fluid />\r\n    </Form>\r\n}\r\n\r\nconst mapStateToProps = (state) => (\r\n  {\r\n    auth : state.auth,\r\n    errors : state.employees.write.errors,\r\n    pending : state.employees.write.pending\r\n  }\r\n)\r\n\r\nMyFormContainer.propTypes = {\r\n  auth : PropTypes.object.isRequired,\r\n  employee : PropTypes.object.isRequired,\r\n  errors : PropTypes.object.isRequired,\r\n  pending : PropTypes.bool.isRequired,\r\n  updateEmployee : PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { updateEmployee }\r\n)(MyFormContainer)\r\n","import React from \"react\"\r\nimport { List } from \"semantic-ui-react\"\r\n\r\nconst PasswordReqs = () =>\r\n  <List bulleted>\r\n    <List.Item\r\n      content=\"Vähintään 8 merkkiä\"\r\n    />\r\n    <List.Item\r\n      content=\"Vähintään yksi iso kirjain A-Z\"\r\n    />\r\n    <List.Item\r\n      content=\"Vähintään yksi pieni kirjain a-z\"\r\n    />\r\n    <List.Item\r\n      content=\"Vähintään yksi numero 0-9\"\r\n    />\r\n    <List.Item\r\n      content=\"Sallitut erikoismerkit: ! # $ % &amp; ' * + . : , ; / = ? @ ^ _ ~ -\"\r\n    />\r\n  </List>\r\n\r\nexport default PasswordReqs\r\n","import FormError from \"../alerts/form_error\"\r\nimport PasswordReqs from \"../alerts/password_reqs\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { Form, Input, Popup } from \"semantic-ui-react\"\r\n\r\nconst reqsPopup = (comp) =>\r\n  <Popup\r\n    content={<PasswordReqs />}\r\n    header=\"Vaatimukset\"\r\n    on=\"focus\"\r\n    trigger={comp}\r\n  />\r\n\r\nconst PasswordForm = (props) => {\r\n  let { errors, onChange, state } = props\r\n\r\n  return (\r\n    <div>\r\n      <Form.Field error={errors.password !== undefined}>\r\n        <label>Nykyinen salasana</label>\r\n        <Input\r\n          name=\"password\"\r\n          onChange={onChange}\r\n          placeholder=\"qwerty\"\r\n          type=\"password\"\r\n          value={state.password}\r\n        />\r\n        <FormError error={errors.password} />\r\n      </Form.Field>\r\n      <Form.Field error={errors.newPassword !== undefined}>\r\n        <label>Uusi salasana</label>\r\n        {reqsPopup(\r\n          <Input\r\n            name=\"newPassword\"\r\n            onChange={onChange}\r\n            placeholder=\"trustno1\"\r\n            type=\"password\"\r\n            value={state.newPassword}\r\n          />\r\n        )}\r\n      </Form.Field>\r\n      <Form.Field error={errors.newPassword !== undefined}>\r\n        <label>Vahvista uusi salasana</label>\r\n        {reqsPopup(\r\n          <Input\r\n            name=\"confirmPassword\"\r\n            onChange={onChange}\r\n            placeholder=\"trustno1 (eli sama uudestaan)\"\r\n            type=\"password\"\r\n            value={state.confirmPassword}\r\n          />\r\n        )}\r\n        <FormError error={errors.newPassword} />\r\n      </Form.Field>\r\n    </div>\r\n  )\r\n}\r\n\r\nPasswordForm.propTypes = {\r\n  errors : PropTypes.object.isRequired,\r\n  onChange : PropTypes.func.isRequired,\r\n  state : PropTypes.object.isRequired\r\n}\r\n\r\nexport default PasswordForm\r\n","import PasswordForm from \"../../component/forms/password_form\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { Button, Divider, Form } from \"semantic-ui-react\"\r\nimport { changePassword } from \"../../action/employee\"\r\nimport { connect } from \"react-redux\"\r\n\r\nconst initState = {\r\n  password : \"\",\r\n  newPassword : \"\",\r\n  confirmPassword : \"\"\r\n}\r\n\r\nclass MyPasswordContainer extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = initState\r\n  }\r\n\r\n  handleChange = (e, { name, value }) =>\r\n    this.setState({ [name] : value })\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n\r\n    let { id, token } = this.props.auth\r\n    this.props.changePassword(id, this.state, token)\r\n\r\n    this.setState(initState)\r\n  }\r\n\r\n  render = () =>\r\n    <Form\r\n      loading={this.props.pending}\r\n      onSubmit={this.handleSubmit}\r\n    >\r\n      <PasswordForm\r\n        errors={this.props.errors}\r\n        onChange={this.handleChange}\r\n        state={this.state}\r\n      />\r\n      <Divider hidden />\r\n      <Button content=\"Vaihda\" fluid />\r\n    </Form>\r\n}\r\n\r\nconst mapStateToProps = (state) => (\r\n  {\r\n    auth : state.auth,\r\n    errors : state.employees.write.errors,\r\n    pending : state.employees.write.pending\r\n  }\r\n)\r\n\r\nMyPasswordContainer.propTypes = {\r\n  auth : PropTypes.object.isRequired,\r\n  changePassword : PropTypes.func.isRequired,\r\n  errors : PropTypes.object.isRequired,\r\n  pending : PropTypes.bool.isRequired\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { changePassword }\r\n)(MyPasswordContainer)\r\n","import Accordion from \"../../component/widgets/accordion\"\r\nimport ListContainer from \"../list\"\r\nimport MyFormContainer from \"./my_form\"\r\nimport MyPasswordContainer from \"./my_password\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { activityRowForEmployee } from \"../../component/lists/list_rows\"\r\nimport { connect } from \"react-redux\"\r\nimport { fetchActivitiesIfNeeded } from \"../../action/activity\"\r\nimport { filterActivitiesForEmployee } from \"../../component/lists/list_filters\"\r\nimport { resetWriteEmployee } from \"../../action/employee\"\r\n\r\nclass MyContainer extends React.Component {\r\n  componentDidMount = () =>\r\n    this.props.refresh(this.props.token)\r\n\r\n  componentWillUnmount = () =>\r\n    this.props.reset()\r\n\r\n  render = () =>\r\n    <div>\r\n      <Accordion title=\"Perustiedot\">\r\n        <MyFormContainer\r\n          employee={this.props.employee || {}}\r\n        />\r\n      </Accordion>\r\n      <Accordion title=\"Suoritteet\">\r\n        <ListContainer\r\n          entities={this.props.activities}\r\n          filter={filterActivitiesForEmployee}\r\n          toRow={activityRowForEmployee}\r\n        />\r\n      </Accordion>\r\n      <Accordion title=\"Salasanan vaihto\">\r\n        <MyPasswordContainer />\r\n      </Accordion>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  let { id, token } = state.auth\r\n\r\n  return {\r\n    activities : state.activities.data.items\r\n      .filter(a => a.owner.id === id),\r\n    employee : state.employees.data.items\r\n      .find(e => e.id === id),\r\n    token\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => (\r\n  {\r\n    refresh : (token) => {\r\n      dispatch(fetchActivitiesIfNeeded(token))\r\n    },\r\n    reset : () => {\r\n      dispatch(resetWriteEmployee())\r\n    }\r\n  }\r\n)\r\n\r\nMyContainer.propTypes = {\r\n  activities : PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  employee : PropTypes.object,\r\n  refresh : PropTypes.func.isRequired,\r\n  reset : PropTypes.func.isRequired,\r\n  token : PropTypes.string.isRequired\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MyContainer)\r\n","import Error from \"../component/alerts/error\"\r\nimport MyContainer from \"../container/my/my\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport Spinner from \"../component/widgets/spinner\"\r\nimport { connect } from \"react-redux\"\r\nimport { fetchEmployeesIfNeeded } from \"../action/employee\"\r\nimport { Route } from \"react-router-dom\"\r\n\r\nclass MyRoot extends React.Component {\r\n  componentDidMount = () =>\r\n    this.props.refresh(this.props.token)\r\n\r\n  render = () => {\r\n    let { error, match, pending } = this.props\r\n\r\n    if ( pending ) return <Spinner />\r\n    if ( error ) return <Error message={error} />\r\n\r\n    return (\r\n      <div>\r\n        <h2 className=\"padded\">Omat tietoni</h2>\r\n        <Route\r\n          component={MyContainer}\r\n          exact path={match.path}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => (\r\n  {\r\n    error : state.employees.data.error,\r\n    pending : state.employees.data.pending,\r\n    token : state.auth.token\r\n  }\r\n)\r\n\r\nconst mapDispatchToProps = (dispatch) => (\r\n  {\r\n    refresh : (token) => {\r\n      dispatch(fetchEmployeesIfNeeded(token))\r\n    }\r\n  }\r\n)\r\n\r\nMyRoot.propTypes = {\r\n  error : PropTypes.string,\r\n  match : PropTypes.object.isRequired,\r\n  pending : PropTypes.bool.isRequired,\r\n  refresh : PropTypes.func.isRequired,\r\n  token : PropTypes.string.isRequired\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MyRoot)\r\n","import PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\n\r\nconst url = ({ city, street, zipCode }) => {\r\n  let key = process.env.REACT_APP_GOOGLE_API_KEY\r\n  let query = encodeURI(`${street},${zipCode},${city}`)\r\n\r\n  return `https://www.google.com/maps/embed/v1/place?key=${key}&q=${query}`\r\n}\r\n\r\nconst EmbeddedMap = ({ address, id }) =>\r\n  <div className=\"padded\">\r\n    <iframe\r\n      frameBorder=\"0\"\r\n      height=\"400\"\r\n      style={{\r\n        border : 0,\r\n        width : \"100%\"\r\n      }}\r\n      title={id}\r\n      width=\"640\"\r\n      src={url(address)}\r\n    />\r\n  </div>\r\n\r\nEmbeddedMap.propTypes = {\r\n  address : PropTypes.shape({\r\n    city : PropTypes.string,\r\n    street : PropTypes.string,\r\n    zipCode : PropTypes.string\r\n  }),\r\n  id : PropTypes.string.isRequired\r\n}\r\n\r\nexport default EmbeddedMap\r\n","import PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { Button, Divider, Dropdown, Form } from \"semantic-ui-react\"\r\n\r\nconst Assigner = (props) =>\r\n  ( !props.active )\r\n    ? null\r\n    : <div>\r\n      <Divider />\r\n      <Form onSubmit={props.onSubmit}>\r\n        <Form.Field>\r\n          <label>{props.label}</label>\r\n          <Dropdown\r\n            onChange={props.onChange}\r\n            options={props.options}\r\n            placeholder={props.placeholder}\r\n            search={true}\r\n            selection\r\n            value={props.selected}\r\n          />\r\n        </Form.Field>\r\n        <Button content={props.button} fluid />\r\n      </Form>\r\n    </div>\r\n\r\nAssigner.propTypes = {\r\n  active : PropTypes.bool.isRequired,\r\n  button : PropTypes.string.isRequired,\r\n  label : PropTypes.string.isRequired,\r\n  onChange : PropTypes.func.isRequired,\r\n  onSubmit : PropTypes.func.isRequired,\r\n  options : PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  placeholder : PropTypes.string,\r\n  selected : PropTypes.string.isRequired\r\n}\r\n\r\nexport default Assigner\r\n","import Assigner from \"../../component/widgets/assigner\"\r\nimport ListContainer from \"../list\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { assignEmployeeToProject, unassignEmployeeFromProject } from \"../../action/project\"\r\nimport { connect } from \"react-redux\"\r\nimport { employeeRow, employeeRowForProject } from \"../../component/lists/list_rows\"\r\nimport { filterEmployees } from \"../../component/lists/list_filters\"\r\nimport { unassignedOptions } from \"../../util/form_options\"\r\n\r\nclass ProjectEmployeesContainer extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = { id : \"\" }\r\n  }\r\n\r\n  assign = (e) => {\r\n    e.preventDefault()\r\n    const { assignEmployeeToProject, auth, id } = this.props\r\n    assignEmployeeToProject(id, this.state, auth.token)\r\n  }\r\n\r\n  unassign = (e, { name }) => {\r\n    e.preventDefault()\r\n    const { auth, id, unassignEmployeeFromProject } = this.props\r\n    unassignEmployeeFromProject(id, name, auth.token)\r\n  }\r\n\r\n  handleChange = (e, { value }) =>\r\n    this.setState({ id : value })\r\n\r\n  render = () => {\r\n    const { auth, employees, project } = this.props\r\n\r\n    return (\r\n      <div>\r\n        <ListContainer\r\n          entities={employees\r\n            .filter(e => project.employees.includes(e.id))\r\n          }\r\n          filter={filterEmployees}\r\n          toRow={( !auth.admin )\r\n            ? employeeRow\r\n            : employeeRowForProject(this.unassign)\r\n          }\r\n        />\r\n        <Assigner\r\n          active={this.props.auth.admin}\r\n          button=\"Osoita\"\r\n          label=\"Osoita työntekijä työmaalle\"\r\n          onChange={this.handleChange}\r\n          onSubmit={this.assign}\r\n          options={unassignedOptions(employees, project)}\r\n          placeholder=\"Valitse työntekijä\"\r\n          selected={this.state.id}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => (\r\n  {\r\n    auth : state.auth,\r\n    employees : state.employees.data.items\r\n  }\r\n)\r\n\r\nProjectEmployeesContainer.propTypes = {\r\n  assignEmployeeToProject : PropTypes.func.isRequired,\r\n  auth : PropTypes.object.isRequired,\r\n  id : PropTypes.string.isRequired,\r\n  employees : PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  project : PropTypes.object.isRequired,\r\n  unassignEmployeeFromProject : PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { assignEmployeeToProject, unassignEmployeeFromProject }\r\n)(ProjectEmployeesContainer)\r\n","import FormError from \"../alerts/form_error\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { Dropdown, Form, Input } from \"semantic-ui-react\"\r\n\r\nconst ProjectForm = (props) => {\r\n  let { errors, onChange, readOnly, state } = props\r\n\r\n  return (\r\n    <div>\r\n      <Form.Field error={errors.projectId !== undefined}>\r\n        <label>Työnumero</label>\r\n        <Input\r\n          name=\"projectId\"\r\n          onChange={onChange}\r\n          readOnly={readOnly}\r\n          value={state.projectId}\r\n        />\r\n        <FormError error={errors.projectId} />\r\n      </Form.Field>\r\n      <Form.Field error={errors.name !== undefined}>\r\n        <label>Työmaan nimi / kuvaus</label>\r\n        <Input\r\n          name=\"name\"\r\n          onChange={onChange}\r\n          readOnly={readOnly}\r\n          value={state.name}\r\n        />\r\n        <FormError error={errors.name} />\r\n      </Form.Field>\r\n      <Form.Field error={errors.manager !== undefined}>\r\n        <label>Työnjohtaja / vastuuhenkilö</label>\r\n        <Dropdown\r\n          disabled={readOnly}\r\n          name=\"manager\"\r\n          onChange={onChange}\r\n          options={props.managers}\r\n          placeholder=\"Valitse työnjohtaja\"\r\n          search={true}\r\n          selection\r\n          value={state.manager}\r\n        />\r\n        <FormError error={errors.manager} />\r\n      </Form.Field>\r\n      <Form.Field error={errors.startDate !== undefined}>\r\n        <label>Alkaa</label>\r\n        <Input\r\n          icon=\"calendar\"\r\n          name=\"startDate\"\r\n          onChange={onChange}\r\n          placeholder=\"pp-kk-vvvv\"\r\n          readOnly={readOnly}\r\n          type=\"date\"\r\n          value={state.startDate}\r\n        />\r\n        <FormError error={errors.startDate} />\r\n      </Form.Field>\r\n      <Form.Field error={errors.endDate !== undefined}>\r\n        <label>Päättyy</label>\r\n        <Input\r\n          icon=\"calendar\"\r\n          name=\"endDate\"\r\n          onChange={onChange}\r\n          placeholder=\"pp-kk-vvvv\"\r\n          readOnly={readOnly}\r\n          type=\"date\"\r\n          value={state.endDate}\r\n        />\r\n        <FormError error={errors.endDate} />\r\n      </Form.Field>\r\n      <Form.Field error={errors.client !== undefined}>\r\n        <label>Asiakas</label>\r\n        <Dropdown\r\n          disabled={!props.isNew || readOnly}\r\n          name=\"client\"\r\n          onChange={onChange}\r\n          options={props.clients}\r\n          placeholder=\"Valitse asiakas\"\r\n          readOnly={readOnly}\r\n          search={true}\r\n          selection\r\n          value={state.client}\r\n        />\r\n        <FormError error={errors.client} />\r\n      </Form.Field>\r\n      <Form.Field error={errors.contactPerson !== undefined}>\r\n        <label>Asiakkaan yhteyshenkilö</label>\r\n        <Input\r\n          name=\"contactPerson\"\r\n          onChange={onChange}\r\n          placeholder=\"Saumausta hoitava mestari\"\r\n          readOnly={readOnly}\r\n          value={state.contactPerson}\r\n        />\r\n        <FormError error={errors.contactPerson} />\r\n      </Form.Field>\r\n      <Form.Field error={errors.phone !== undefined}>\r\n        <label>Yhteyshenkilön puhelin</label>\r\n        <Input\r\n          name=\"phone\"\r\n          onChange={onChange}\r\n          placeholder=\"040-123-4567\"\r\n          readOnly={readOnly}\r\n          value={state.phone}\r\n        />\r\n        <FormError error={errors.phone} />\r\n      </Form.Field>\r\n    </div>\r\n  )\r\n}\r\n\r\nProjectForm.propTypes = {\r\n  clients : PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  errors : PropTypes.object.isRequired,\r\n  isNew : PropTypes.bool.isRequired,\r\n  managers : PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onChange : PropTypes.func.isRequired,\r\n  readOnly : PropTypes.bool.isRequired,\r\n  state : PropTypes.object.isRequired,\r\n}\r\n\r\nexport default ProjectForm\r\n","import AddressFormContainer from \"../address_form\"\r\nimport ProjectForm from \"../../component/forms/project_form\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { Button, Divider, Form } from \"semantic-ui-react\"\r\nimport { clientOptions, managerOptions } from \"../../util/form_options\"\r\nimport { connect } from \"react-redux\"\r\nimport { createProject, updateProject } from \"../../action/project\"\r\nimport { projectState } from \"../../util/form_state\"\r\nimport { withRouter } from \"react-router-dom\"\r\n\r\nclass ProjectFormContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = projectState(props.project)\r\n  }\r\n\r\n  handleChange = (e, { name, value }) =>\r\n    this.setState({ [name] : value })\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    let { history, id, isNew, token } = this.props\r\n    this.props.save(this.state, history, id, isNew, token)\r\n  }\r\n\r\n  syncAddressState = (address) =>\r\n    this.setState({ ...this.state, address })\r\n\r\n  render = () =>\r\n    <Form\r\n      loading={this.props.pending}\r\n      onSubmit={this.handleSubmit}\r\n    >\r\n      <ProjectForm\r\n        clients={this.props.clients}\r\n        errors={this.props.errors}\r\n        isNew={this.props.isNew}\r\n        managers={this.props.managers}\r\n        onChange={this.handleChange}\r\n        readOnly={this.props.readOnly}\r\n        state={this.state}\r\n      />\r\n      <Divider hidden />\r\n      <AddressFormContainer\r\n        address={this.state.address}\r\n        errors={this.props.errors}\r\n        readOnly={this.props.readOnly}\r\n        sync={this.syncAddressState}\r\n      />\r\n      <Divider hidden />\r\n      {( this.props.readOnly )\r\n        ? null\r\n        : <Button content=\"Tallenna\" fluid />\r\n      }\r\n    </Form>\r\n}\r\n\r\nconst mapStateToProps = (state, props) => (\r\n  {\r\n    clients : clientOptions(state.clients.data.items, props.project),\r\n    errors : state.projects.write.errors,\r\n    managers : managerOptions(state.employees.data.items),\r\n    pending : state.projects.write.pending,\r\n    readOnly : ( !state.auth.admin ),\r\n    token : state.auth.token\r\n  }\r\n)\r\n\r\nconst mapDispatchToProps = (dispatch) => (\r\n  {\r\n    save : (data, history, id, isNew, token) => {\r\n      ( isNew )\r\n        ? dispatch(createProject(data, token, history))\r\n        : dispatch(updateProject(id, data, token))\r\n    }\r\n  }\r\n)\r\n\r\nProjectFormContainer.propTypes = {\r\n  clients : PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  errors : PropTypes.object.isRequired,\r\n  history : PropTypes.object.isRequired,\r\n  id : PropTypes.string.isRequired,\r\n  isNew : PropTypes.bool.isRequired,\r\n  managers : PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  pending : PropTypes.bool.isRequired,\r\n  project : PropTypes.object.isRequired,\r\n  readOnly : PropTypes.bool.isRequired,\r\n  save : PropTypes.func.isRequired,\r\n  token : PropTypes.string.isRequired,\r\n}\r\n\r\nexport default withRouter(connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ProjectFormContainer))\r\n","import LinkButton from \"../../component/widgets/link_button\"\r\nimport ListContainer from \"../list\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { filterTasksForProject } from \"../../component/lists/list_filters\"\r\nimport { taskRowForProject } from \"../../component/lists/list_rows\"\r\n\r\nconst ProjectTasksContainer = ({ admin, id, tasks }) =>\r\n  <div>\r\n    <ListContainer\r\n      entities={tasks}\r\n      filter={filterTasksForProject}\r\n      toRow={taskRowForProject}\r\n    />\r\n    <LinkButton\r\n      active={admin}\r\n      href={`/tasks/new?id=${id}`}\r\n      label=\"Lisää uusi tehtävä\"\r\n    />\r\n  </div>\r\n\r\nconst mapStateToProps = (state, props) => (\r\n  {\r\n    admin : state.auth.admin,\r\n    tasks : state.tasks.data.items\r\n      .filter(t => t.project.id === props.id)\r\n  }\r\n)\r\n\r\nProjectTasksContainer.propTypes = {\r\n  admin : PropTypes.bool.isRequired,\r\n  id : PropTypes.string.isRequired,\r\n  tasks : PropTypes.arrayOf(PropTypes.object).isRequired\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(ProjectTasksContainer)\r\n","import Accordion from \"../../component/widgets/accordion\"\r\nimport AttachmentContainer from \"../attachment/attachment\"\r\nimport CommentContainer from \"../comment\"\r\nimport EmbeddedMap from \"../../component/widgets/embedded_map\"\r\nimport Error from \"../../component/alerts/error\"\r\nimport ProjectEmployeesContainer from \"./project_employees\"\r\nimport ProjectFormContainer from \"./project_form\"\r\nimport ProjectTasksContainer from \"./project_tasks\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { fetchClientsIfNeeded } from \"../../action/client\"\r\nimport { fetchEmployeesIfNeeded } from \"../../action/employee\"\r\nimport { fetchTasksIfNeeded } from \"../../action/task\"\r\nimport {\r\n  fetchProjects,\r\n  resetWriteProject,\r\n  updateProject\r\n} from \"../../action/project\"\r\n\r\nclass ProjectContainer extends React.Component {\r\n  componentDidMount = () =>\r\n    this.props.refresh(this.props.token)\r\n\r\n  componentWillUnmount = () =>\r\n    this.props.reset()\r\n\r\n  render = () => {\r\n    let { id, isNew, project } = this.props\r\n    if ( !isNew && !project ) return <Error />\r\n\r\n    return (\r\n      <div>\r\n        <Accordion\r\n          active={isNew}\r\n          title=\"Perustiedot\"\r\n        >\r\n          <ProjectFormContainer\r\n            id={id}\r\n            isNew={isNew}\r\n            project={project || {}}\r\n          />\r\n        </Accordion>\r\n        {( isNew )\r\n          ? null\r\n          : <div>\r\n            <Accordion title=\"Näytä kartalla\">\r\n              <EmbeddedMap\r\n                address={project.address}\r\n                id={id}\r\n              />\r\n            </Accordion>\r\n            <Accordion title=\"Työntekijät\">\r\n              <ProjectEmployeesContainer\r\n                id={id}\r\n                project={project || {}}\r\n              />\r\n            </Accordion>\r\n            <Accordion title=\"Tehtävät\">\r\n              <ProjectTasksContainer id={id} />\r\n            </Accordion>\r\n            <Accordion\r\n              active={( project.attachments.length > 0 )}\r\n              title=\"Liitteet\"\r\n            >\r\n              <AttachmentContainer\r\n                attachments={project.attachments || []}\r\n                entity=\"Project\"\r\n                id={id}\r\n                thunk={updateProject}\r\n              />\r\n            </Accordion>\r\n            <Accordion\r\n              active={( project.comments.length > 0 )}\r\n              title=\"Huomiot\"\r\n            >\r\n              <CommentContainer\r\n                comments={project.comments || []}\r\n                entity=\"Project\"\r\n                id={id}\r\n                thunk={fetchProjects}\r\n              />\r\n            </Accordion>\r\n          </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  let { id } = props.match.params\r\n\r\n  return {\r\n    id,\r\n    isNew : ( id === \"new\" ),\r\n    project : state.projects.data.items\r\n      .find(p => p.id === id),\r\n    token : state.auth.token\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => (\r\n  {\r\n    refresh : (token) => {\r\n      dispatch(fetchClientsIfNeeded(token))\r\n      dispatch(fetchEmployeesIfNeeded(token))\r\n      dispatch(fetchTasksIfNeeded(token))\r\n    },\r\n    reset : () => {\r\n      dispatch(resetWriteProject())\r\n    }\r\n  }\r\n)\r\n\r\nProjectContainer.propTypes = {\r\n  id : PropTypes.string.isRequired,\r\n  isNew : PropTypes.bool.isRequired,\r\n  match : PropTypes.object.isRequired,\r\n  project : PropTypes.object,\r\n  refresh : PropTypes.func.isRequired,\r\n  reset : PropTypes.func.isRequired,\r\n  token : PropTypes.string.isRequired\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ProjectContainer)\r\n","import PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { connect } from \"react-redux\"\r\n\r\nconst loadApi = (apiKey) => {\r\n  const s = document.createElement(\"script\")\r\n\r\n  s.async = true\r\n  s.defer = true\r\n  s.id = \"google-map-api\"\r\n  s.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}`\r\n  s.type = \"text/javascript\"\r\n\r\n  document.body.appendChild(s)\r\n}\r\n\r\nconst renderMap = (mapRef, addresses) => {\r\n  /**\r\n   * For whatever reason the mapRef is not available immediately\r\n   * on function call. Shit workaround with setTimeout() ...\r\n   */\r\n  setTimeout(() => {\r\n    const { Map, Marker } = window.google.maps\r\n    const center = { lat : 60.25, lng : 24.95 }\r\n    const map = new Map(\r\n      mapRef.current,\r\n      { center, zoom : 10 }\r\n    )\r\n    addresses\r\n      .filter(a => !!a.location)\r\n      .map(a => a.location)\r\n      .map(position => new Marker({ map, position }))\r\n  }, 50)\r\n}\r\n\r\nclass GoogleApiMap extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.mapRef = React.createRef()\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    if ( !document.getElementById(\"google-map-api\") )\r\n      loadApi(process.env.REACT_APP_GOOGLE_API_KEY)\r\n  }\r\n\r\n  render = () =>\r\n    ( !window.google )\r\n      ? null\r\n      : <div\r\n        ref={this.mapRef}\r\n        style={{\r\n          height : \"400px\",\r\n          width : \"100%\"\r\n        }}\r\n      >\r\n        {renderMap(this.mapRef, this.props.addresses)}\r\n      </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => (\r\n  {\r\n    addresses : state.projects.data.items\r\n      .map(p => p.address)\r\n  }\r\n)\r\n\r\nGoogleApiMap.propTypes = {\r\n  addresses : PropTypes.arrayOf(PropTypes.object).isRequired\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(GoogleApiMap)\r\n","import Accordion from \"../../component/widgets/accordion\"\r\nimport GoogleApiMap from \"../../component/widgets/google_api_map\"\r\nimport LinkButton from \"../../component/widgets/link_button\"\r\nimport ListContainer from \"../list\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Divider } from \"semantic-ui-react\"\r\nimport { filterProjects } from \"../../component/lists/list_filters\"\r\nimport { projectRow } from \"../../component/lists/list_rows\"\r\n\r\nconst ProjectsContainer = ({ admin, projects }) =>\r\n  <div>\r\n    <ListContainer\r\n      entities={projects}\r\n      filter={filterProjects}\r\n      toRow={projectRow}\r\n    />\r\n    <LinkButton\r\n      active={admin}\r\n      href=\"/projects/new\"\r\n      label=\"Lisää uusi työmaa\"\r\n    />\r\n    <Divider hidden />\r\n    <Accordion title=\"Näytä kartalla\">\r\n      <GoogleApiMap />\r\n    </Accordion>\r\n  </div>\r\n\r\nconst mapStateToProps = (state) => (\r\n  {\r\n    admin : state.auth.admin,\r\n    projects : state.projects.data.items\r\n  }\r\n)\r\n\r\nProjectsContainer.propTypes = {\r\n  admin : PropTypes.bool.isRequired,\r\n  projects : PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(ProjectsContainer)\r\n","import Error from \"../component/alerts/error\"\r\nimport ProjectContainer from \"../container/project/project\"\r\nimport ProjectsContainer from \"../container/project/projects\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport Spinner from \"../component/widgets/spinner\"\r\nimport { connect } from \"react-redux\"\r\nimport { fetchProjectsIfNeeded } from \"../action/project\"\r\nimport { Route } from \"react-router-dom\"\r\n\r\nclass ProjectRoot extends React.Component {\r\n  componentDidMount = () =>\r\n    this.props.refresh(this.props.token)\r\n\r\n  render = () => {\r\n    let { error, match, pending } = this.props\r\n\r\n    if ( pending ) return <Spinner />\r\n    if ( error ) return <Error message={error} />\r\n\r\n    return (\r\n      <div>\r\n        <h2 className=\"padded\">Työmaat</h2>\r\n        <Route\r\n          component={ProjectContainer}\r\n          exact path={`${match.path}/:id`}\r\n        />\r\n        <Route\r\n          component={ProjectsContainer}\r\n          exact path={match.path}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => (\r\n  {\r\n    error : state.projects.data.error,\r\n    pending : state.projects.data.pending,\r\n    token : state.auth.token\r\n  }\r\n)\r\n\r\nconst mapDispatchToProps = (dispatch) => (\r\n  {\r\n    refresh : (token) => {\r\n      dispatch(fetchProjectsIfNeeded(token))\r\n    }\r\n  }\r\n)\r\n\r\nProjectRoot.propTypes = {\r\n  error : PropTypes.string,\r\n  match : PropTypes.object.isRequired,\r\n  pending : PropTypes.bool.isRequired,\r\n  refresh : PropTypes.func.isRequired,\r\n  token : PropTypes.string.isRequired\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ProjectRoot)\r\n","import LinkButton from \"../../component/widgets/link_button\"\r\nimport ListContainer from \"../list\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { activityRow } from \"../../component/lists/list_rows\"\r\nimport { connect } from \"react-redux\"\r\nimport { filterActivities } from \"../../component/lists/list_filters\"\r\n\r\nconst TaskActivitiesContainer = ({ activities, isOwner, task }) =>\r\n  <div>\r\n    <ListContainer\r\n      entities={activities}\r\n      filter={filterActivities}\r\n      toRow={activityRow}\r\n    />\r\n    <LinkButton\r\n      active={( isOwner && !task.completed )}\r\n      href={`/activities/new?id=${task.id}`}\r\n      label=\"Lisää uusi suorite\"\r\n    />\r\n  </div>\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  let { employees } = props.task.project || []\r\n\r\n  return {\r\n    activities : state.activities.data.items\r\n      .filter(a => a.task.id === props.id),\r\n    isOwner : ( employees.includes(state.auth.id) )\r\n  }\r\n}\r\n\r\nTaskActivitiesContainer.propTypes = {\r\n  activities : PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  isOwner : PropTypes.bool.isRequired,\r\n  task : PropTypes.object.isRequired\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(TaskActivitiesContainer)\r\n","import FormError from \"../alerts/form_error\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { Form, Input, TextArea } from \"semantic-ui-react\"\r\n\r\nconst TaskForm = (props) => {\r\n  let { errors, onChange, project, readOnly, state } = props\r\n\r\n  return (\r\n    <div>\r\n      <Form.Field>\r\n        <label>Työmaan työnumero ja nimi</label>\r\n        <Input\r\n          disabled\r\n          value={`${project.projectId} — ${project.name}` || \"\"}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field error={errors.name !== undefined}>\r\n        <label>Otsikko</label>\r\n        <Input\r\n          name=\"name\"\r\n          onChange={onChange}\r\n          placeholder=\"Näkyy tehtäviä listattaessa\"\r\n          readOnly={readOnly}\r\n          value={state.name}\r\n        />\r\n        <FormError error={errors.name} />\r\n      </Form.Field>\r\n      <Form.Field error={errors.description !== undefined}>\r\n        <label>Kuvaus</label>\r\n        <TextArea\r\n          autoHeight\r\n          name=\"description\"\r\n          onChange={onChange}\r\n          placeholder=\"Kirjoita tehtävän kuvaus\"\r\n          readOnly={readOnly}\r\n          style={{ minHeight : 100 }}\r\n          value={state.description}\r\n        />\r\n        <FormError error={errors.description} />\r\n      </Form.Field>\r\n      <Form.Field error={errors.startDate !== undefined}>\r\n        <label>Alkaa</label>\r\n        <Input\r\n          icon=\"calendar\"\r\n          name=\"startDate\"\r\n          onChange={onChange}\r\n          placeholder=\"pp-kk-vvvv\"\r\n          readOnly={readOnly}\r\n          type=\"date\"\r\n          value={state.startDate}\r\n        />\r\n        <FormError error={errors.startDate} />\r\n      </Form.Field>\r\n      <Form.Field error={errors.endDate !== undefined}>\r\n        <label>Päättyy</label>\r\n        <Input\r\n          icon=\"calendar\"\r\n          name=\"endDate\"\r\n          onChange={onChange}\r\n          placeholder=\"pp-kk-vvvv\"\r\n          readOnly={readOnly}\r\n          type=\"date\"\r\n          value={state.endDate}\r\n        />\r\n        <FormError error={errors.endDate} />\r\n      </Form.Field>\r\n      <Form.Field error={errors.daysNeeded !== undefined}>\r\n        <label>Työmääräarvio</label>\r\n        <Input\r\n          label={{ basic : true, content : \"päivää\" }}\r\n          labelPosition=\"right\"\r\n          name=\"daysNeeded\"\r\n          onChange={onChange}\r\n          placeholder=\"Pyöristyy lähimpään kokonaislukuun\"\r\n          readOnly={readOnly}\r\n          value={state.daysNeeded}\r\n        />\r\n        <FormError error={errors.daysNeeded} />\r\n      </Form.Field>\r\n    </div>\r\n  )\r\n}\r\n\r\nTaskForm.propTypes = {\r\n  errors : PropTypes.object.isRequired,\r\n  onChange : PropTypes.func.isRequired,\r\n  project : PropTypes.object.isRequired,\r\n  readOnly : PropTypes.bool.isRequired,\r\n  state : PropTypes.object.isRequired\r\n}\r\n\r\nexport default TaskForm\r\n","import PropTypes from \"prop-types\"\r\nimport QuotaFormContainer from \"../quota_form\"\r\nimport React from \"react\"\r\nimport TaskForm from \"../../component/forms/task_form\"\r\nimport { Button, Divider, Form } from \"semantic-ui-react\"\r\nimport { connect } from \"react-redux\"\r\nimport { createTask, updateTask } from \"../../action/task\"\r\nimport { parseNumber, parseQuotas } from \"../../util/parser\"\r\nimport { taskState } from \"../../util/form_state\"\r\nimport { withRouter } from \"react-router-dom\"\r\n\r\nclass TaskFormContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = taskState(props.task)\r\n  }\r\n\r\n  handleChange = (e, data) => {\r\n    let value = ( data.type === \"checkbox\" )\r\n      ? data.checked\r\n      : data.value\r\n\r\n    this.setState({ [data.name] : value })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault(e)\r\n\r\n    let { history, id, isNew, project, token } = this.props\r\n    this.props.save(this.state, history, id, isNew, project, token)\r\n  }\r\n\r\n  syncQuotaState = (quotas) =>\r\n    this.setState({ ...this.state, quotas })\r\n\r\n  render = () =>\r\n    <Form\r\n      loading={this.props.pending}\r\n      onSubmit={this.handleSubmit}\r\n    >\r\n      <TaskForm\r\n        errors={this.props.errors}\r\n        onChange={this.handleChange}\r\n        project={this.props.task.project || {}}\r\n        readOnly={this.props.readOnly}\r\n        state={this.state}\r\n      />\r\n      <Divider />\r\n      <QuotaFormContainer\r\n        header=\"Materiaaliarvio\"\r\n        quotas={this.state.quotas}\r\n        readOnly={this.props.readOnly}\r\n        sync={this.syncQuotaState}\r\n      />\r\n      <Divider hidden />\r\n      <Form.Field className=\"padded\">\r\n        <Form.Checkbox\r\n          checked={this.state.completed}\r\n          label=\"Suoritettu loppuun\"\r\n          name=\"completed\"\r\n          onChange={this.handleChange}\r\n          readOnly={this.props.readOnly}\r\n        />\r\n      </Form.Field>\r\n      <Divider hidden />\r\n      {( this.props.readOnly )\r\n        ? null\r\n        : <Button content=\"Tallenna\" fluid />\r\n      }\r\n    </Form>\r\n}\r\n\r\nconst mapStateToProps = (state) => (\r\n  {\r\n    errors : state.tasks.write.errors,\r\n    pending : state.tasks.write.pending,\r\n    readOnly : ( !state.auth.admin ),\r\n    token : state.auth.token\r\n  }\r\n)\r\n\r\nconst mapDispatchToProps = (dispatch) => (\r\n  {\r\n    save : (data, history, id, isNew, project, token) => {\r\n      let payload = {\r\n        ...data,\r\n        daysNeeded : parseNumber(data.daysNeeded),\r\n        project : project.id || null,\r\n        quotas : parseQuotas(data.quotas)\r\n      }\r\n      return ( isNew )\r\n        ? dispatch(createTask(payload, token, history))\r\n        : dispatch(updateTask(id, payload, token))\r\n    }\r\n  }\r\n)\r\n\r\nTaskFormContainer.propTypes = {\r\n  errors : PropTypes.object.isRequired,\r\n  history : PropTypes.object.isRequired,\r\n  id : PropTypes.string.isRequired,\r\n  isNew : PropTypes.bool.isRequired,\r\n  pending : PropTypes.bool.isRequired,\r\n  project : PropTypes.object.isRequired,\r\n  readOnly : PropTypes.bool.isRequired,\r\n  save : PropTypes.func.isRequired,\r\n  task : PropTypes.object.isRequired,\r\n  token : PropTypes.string.isRequired\r\n}\r\n\r\nexport default withRouter(connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TaskFormContainer))\r\n","import Accordion from \"../../component/widgets/accordion\"\r\nimport AttachmentContainer from \"../attachment/attachment\"\r\nimport CommentContainer from \"../comment\"\r\nimport Error from \"../../component/alerts/error\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport TaskActivitiesContainer from \"./task_activities\"\r\nimport TaskFormContainer from \"./task_form\"\r\nimport { connect } from \"react-redux\"\r\nimport { fetchActivitiesIfNeeded } from \"../../action/activity\"\r\nimport { fetchMaterialsIfNeeded } from \"../../action/material\"\r\nimport { fetchProjectsIfNeeded } from \"../../action/project\"\r\nimport { parseUrlQuery } from \"../../util/parser\"\r\nimport { fetchTasks, resetWriteTask, updateTask } from \"../../action/task\"\r\n\r\nclass TaskContainer extends React.Component {\r\n  componentDidMount = () =>\r\n    this.props.refresh(this.props.token)\r\n\r\n  componentWillUnmount = () =>\r\n    this.props.reset()\r\n\r\n  render = () => {\r\n    let { id, isNew, project, task } = this.props\r\n\r\n    if ( !isNew && !task ) return <Error />\r\n    if ( isNew && !project ) return <Error\r\n      message=\"Virheellinen työmaan tunniste, älä sooloile osoitepalkin kanssa!\"\r\n    />\r\n\r\n    return (\r\n      <div>\r\n        <Accordion\r\n          active={isNew}\r\n          title=\"Perustiedot\"\r\n        >\r\n          <TaskFormContainer\r\n            id={id}\r\n            isNew={isNew}\r\n            project={project || {}}\r\n            task={task || { project }}\r\n          />\r\n        </Accordion>\r\n        {( isNew )\r\n          ? null\r\n          : <div>\r\n            <Accordion title=\"Suoritteet\">\r\n              <TaskActivitiesContainer\r\n                id={id}\r\n                task={task}\r\n              />\r\n            </Accordion>\r\n            <Accordion\r\n              active={( task.attachments.length > 0 )}\r\n              title=\"Liitteet\"\r\n            >\r\n              <AttachmentContainer\r\n                attachments={task.attachments || []}\r\n                entity=\"Task\"\r\n                id={id}\r\n                thunk={updateTask}\r\n              />\r\n            </Accordion>\r\n            <Accordion\r\n              active={( task.comments.length > 0 )}\r\n              title=\"Huomiot\"\r\n            >\r\n              <CommentContainer\r\n                comments={task.comments || []}\r\n                entity=\"Task\"\r\n                id={id}\r\n                thunk={fetchTasks}\r\n              />\r\n            </Accordion>\r\n          </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => {\r\n  let { id } = props.match.params\r\n  let projectId = parseUrlQuery(props.location.search).id\r\n\r\n  return {\r\n    id,\r\n    isNew : ( id === \"new\" ),\r\n    project : state.projects.data.items\r\n      .find(p => p.id === projectId),\r\n    task : state.tasks.data.items\r\n      .find(t => t.id === id),\r\n    token : state.auth.token\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => (\r\n  {\r\n    refresh : (token) => {\r\n      dispatch(fetchActivitiesIfNeeded(token))\r\n      dispatch(fetchMaterialsIfNeeded(token))\r\n      dispatch(fetchProjectsIfNeeded(token))\r\n    },\r\n    reset : () => {\r\n      dispatch(resetWriteTask())\r\n    }\r\n  }\r\n)\r\n\r\nTaskContainer.propTypes = {\r\n  id : PropTypes.string.isRequired,\r\n  isNew : PropTypes.bool.isRequired,\r\n  location : PropTypes.object.isRequired,\r\n  match : PropTypes.object.isRequired,\r\n  project : PropTypes.object,\r\n  refresh : PropTypes.func.isRequired,\r\n  reset : PropTypes.func.isRequired,\r\n  task : PropTypes.object,\r\n  token : PropTypes.string.isRequired\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TaskContainer)\r\n","import ListContainer from \"../list\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { filterTasks } from \"../../component/lists/list_filters\"\r\nimport { taskRow } from \"../../component/lists/list_rows\"\r\n\r\nconst TasksContainer = ({ tasks }) =>\r\n  <ListContainer\r\n    entities={tasks}\r\n    filter={filterTasks}\r\n    toRow={taskRow}\r\n  />\r\n\r\nconst mapStateToProps = (state) =>\r\n  ({ tasks : state.tasks.data.items })\r\n\r\nTasksContainer.propTypes = {\r\n  tasks : PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(TasksContainer)\r\n","import Error from \"../component/alerts/error\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport Spinner from \"../component/widgets/spinner\"\r\nimport TaskContainer from \"../container/task/task\"\r\nimport TasksContainer from \"../container/task/tasks\"\r\nimport { connect } from \"react-redux\"\r\nimport { fetchTasksIfNeeded } from \"../action/task\"\r\nimport { Route } from \"react-router-dom\"\r\n\r\nclass TaskRoot extends React.Component {\r\n  componentDidMount = () =>\r\n    this.props.refresh(this.props.token)\r\n\r\n  render = () => {\r\n    let { error, match, pending } = this.props\r\n\r\n    if ( pending ) return <Spinner />\r\n    if ( error ) return <Error message={error} />\r\n\r\n    return (\r\n      <div>\r\n        <h2 className=\"padded\">Tehtävät</h2>\r\n        <Route\r\n          component={TaskContainer}\r\n          exact path={`${match.path}/:id`}\r\n        />\r\n        <Route\r\n          component={TasksContainer}\r\n          exact path={match.path}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => (\r\n  {\r\n    error : state.tasks.data.error,\r\n    pending : state.tasks.data.pending,\r\n    token : state.auth.token\r\n  }\r\n)\r\n\r\nconst mapDispatchToProps = (dispatch) => (\r\n  {\r\n    refresh : (token) => {\r\n      dispatch(fetchTasksIfNeeded(token))\r\n    }\r\n  }\r\n)\r\n\r\nTaskRoot.propTypes = {\r\n  error : PropTypes.string,\r\n  match : PropTypes.object.isRequired,\r\n  pending : PropTypes.bool.isRequired,\r\n  refresh : PropTypes.func.isRequired,\r\n  token : PropTypes.string.isRequired\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TaskRoot)\r\n","import ActivityRoot from \"./activity\"\r\nimport ClientRoot from \"./client\"\r\nimport EmployeeRoot from \"./employee\"\r\nimport MaterialRoot from \"./material\"\r\nimport MyRoot from \"./my\"\r\nimport ProjectRoot from \"./project\"\r\nimport React from \"react\"\r\nimport TaskRoot from \"./task\"\r\nimport { Redirect, Route, Switch } from \"react-router-dom\"\r\nimport { withRouter } from \"react-router-dom\"\r\n\r\nconst HomeRoot = () =>\r\n  <Switch>\r\n    <Route\r\n      component={ActivityRoot}\r\n      path=\"/activities\"\r\n    />\r\n    <Route\r\n      component={ClientRoot}\r\n      path=\"/clients\"\r\n    />\r\n    <Route\r\n      component={EmployeeRoot}\r\n      path=\"/employees\"\r\n    />\r\n    <Route\r\n      component={MaterialRoot}\r\n      path=\"/materials\"\r\n    />\r\n    <Route\r\n      component={MyRoot}\r\n      path=\"/my\"\r\n    />\r\n    <Route\r\n      component={ProjectRoot}\r\n      path=\"/projects\"\r\n    />\r\n    <Route\r\n      component={TaskRoot}\r\n      path=\"/tasks\"\r\n    />\r\n    <Redirect to=\"/projects\" />\r\n  </Switch>\r\n\r\nexport default withRouter(HomeRoot)\r\n","import FormError from \"../alerts/form_error\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { Button, Form, Input } from \"semantic-ui-react\"\r\n\r\nconst ForgotForm = ({ error, onChange, onSubmit, pending, state }) =>\r\n  <Form\r\n    loading={pending}\r\n    onSubmit={onSubmit}\r\n  >\r\n    <Form.Field error={error !== null}>\r\n      <label>Anna käyttäjätunnukseesi sidottu email</label>\r\n      <Input\r\n        name=\"email\"\r\n        onChange={onChange}\r\n        placeholder=\"paavo@firma.io\"\r\n        value={state.email}\r\n      />\r\n      <FormError error={error} />\r\n    </Form.Field>\r\n    <Button\r\n      content=\"Pyydä uusi salasana\"\r\n      fluid\r\n    />\r\n  </Form>\r\n\r\nForgotForm.propTypes = {\r\n  error : PropTypes.string,\r\n  onChange : PropTypes.func.isRequired,\r\n  onSubmit : PropTypes.func.isRequired,\r\n  pending : PropTypes.bool.isRequired,\r\n  state : PropTypes.object.isRequired\r\n}\r\n\r\nexport default ForgotForm\r\n","import FormError from \"../alerts/form_error\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { Button, Form, Input } from \"semantic-ui-react\"\r\n\r\nconst LoginForm = (props) => {\r\n  let { error, onChange, state } = props\r\n  let { password, username } = state\r\n  let isDisabled = ( password.length === 0 || username.length === 0 )\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"padded\">Kirjaudu sisään</h2>\r\n      <Form\r\n        loading={props.pending}\r\n        onSubmit={props.onSubmit}\r\n      >\r\n        <Form.Field error={error !== null}>\r\n          <label>Käyttäjätunnus</label>\r\n          <Input\r\n            name=\"username\"\r\n            onChange={onChange}\r\n            placeholder=\"spongebob\"\r\n            value={username}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field error={error !== null}>\r\n          <label>Salasana</label>\r\n          <Input\r\n            name=\"password\"\r\n            onChange={onChange}\r\n            placeholder=\"qwerty\"\r\n            type=\"password\"\r\n            value={password}\r\n          />\r\n          <FormError error={error} />\r\n        </Form.Field>\r\n        <Button\r\n          content=\"Kirjaudu\"\r\n          disabled={isDisabled}\r\n          fluid\r\n        />\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nLoginForm.propTypes = {\r\n  error : PropTypes.string,\r\n  onChange : PropTypes.func.isRequired,\r\n  onSubmit : PropTypes.func.isRequired,\r\n  pending : PropTypes.bool.isRequired,\r\n  state : PropTypes.object.isRequired\r\n}\r\n\r\nexport default LoginForm\r\n","import axios from \"axios\"\r\nimport { notify } from \"./notification\"\r\n\r\nconst url = \"/api/login\"\r\n\r\nconst setAuth = (auth) => ({\r\n  type : \"SET_AUTH\",\r\n  payload : auth\r\n})\r\n\r\nexport const checkAuth = () => {\r\n  return (dispatch) => {\r\n    let auth = JSON.parse(\r\n      localStorage.getItem(\"sauma_auth\"))\r\n\r\n    if ( auth )\r\n      dispatch(setAuth(auth))\r\n    else\r\n      dispatch(logout())\r\n  }\r\n}\r\n\r\nexport const forgot = (email, actionOnSuccess) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type : \"FORGOT\" })\r\n\r\n    try {\r\n      await axios\r\n        .post(`${url}/forgot`, { email })\r\n\r\n      dispatch({ type : \"FORGOT_OK\" })\r\n      dispatch(notify(\"Ohjeet lähetetty sähköpostiin\", \"ok\"))\r\n      if ( actionOnSuccess ) actionOnSuccess()\r\n\r\n    } catch (ex) {\r\n      dispatch({\r\n        type : \"FORGOT_ERROR\",\r\n        payload : \"Tuntematon email tai suljettu käyttäjätunnus\"\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport const login = (username, password) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type : \"LOGIN\" })\r\n\r\n    try {\r\n      let res = await axios\r\n        .post(url, { username, password })\r\n\r\n      let auth = res.data\r\n      localStorage.setItem(\r\n        \"sauma_auth\",\r\n        JSON.stringify(auth))\r\n\r\n      dispatch(setAuth(auth))\r\n      dispatch(notify(`Olet kirjautunut sisään. Tervetuloa, ${auth.firstName}!`, \"ok\"))\r\n\r\n    } catch (ex) {\r\n      dispatch({\r\n        type : \"LOGIN_ERROR\",\r\n        payload : \"Virheellinen tunnus tai salasana\"\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport const logout = () => {\r\n  return (dispatch) => {\r\n    localStorage.removeItem(\"sauma_auth\")\r\n\r\n    dispatch({ type : \"LOGOUT\" })\r\n  }\r\n}\r\n\r\nexport const resetPassword = (passwords, token, history) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type : \"LOGIN\" })\r\n\r\n    try {\r\n      await axios\r\n        .post(`${url}/reset/${token}`, passwords)\r\n\r\n      dispatch({ type : \"LOGIN_OK\" })\r\n      dispatch(notify(\"Salasana vaihdettu\", \"ok\"))\r\n\r\n      history.replace(\"/\")\r\n      dispatch(logout())\r\n\r\n    } catch (ex) {\r\n      let { ValidationError } = ex.response.data\r\n      let error = ( ValidationError )\r\n        ? ValidationError.newPassword\r\n        : \"Virheellinen tai vanhentunut tunniste\"\r\n\r\n      dispatch({\r\n        type : \"LOGIN_ERROR\",\r\n        payload : error\r\n      })\r\n    }\r\n  }\r\n}\r\n","import Expandable from \"../component/widgets/expandable\"\r\nimport ForgotForm from \"../component/forms/forgot_form\"\r\nimport LoginForm from \"../component/forms/login_form\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Divider } from \"semantic-ui-react\"\r\nimport { forgot, login } from \"../action/auth\"\r\n\r\nclass LoginFormContainer extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      email : \"\",\r\n      password : \"\",\r\n      username : \"\"\r\n    }\r\n  }\r\n\r\n  handleChange = (e, { name, value }) =>\r\n    this.setState({ [name] : value })\r\n\r\n  handleForgot = (e) => {\r\n    e.preventDefault()\r\n    this.props.forgot(this.state.email, this.expandable.toggle)\r\n  }\r\n\r\n  handleLogin = (e) => {\r\n    e.preventDefault()\r\n    let { password, username } = this.state\r\n\r\n    this.props.login(username, password)\r\n    this.setState({ password : \"\", username : \"\" })\r\n  }\r\n\r\n  render = () =>\r\n    <div>\r\n      <LoginForm\r\n        error={this.props.error}\r\n        onChange={this.handleChange}\r\n        onSubmit={this.handleLogin}\r\n        pending={this.props.pending}\r\n        state={this.state}\r\n      />\r\n      <Divider />\r\n      <Expandable\r\n        button=\"Unohtuiko salasana?\"\r\n        ref={c => this.expandable = c}\r\n      >\r\n        <ForgotForm\r\n          error={this.props.forgotError}\r\n          onChange={this.handleChange}\r\n          onSubmit={this.handleForgot}\r\n          pending={this.props.forgotPending}\r\n          state={this.state}\r\n        />\r\n      </Expandable>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => (\r\n  {\r\n    error : state.auth.error,\r\n    forgotError : state.auth.forgotError,\r\n    forgotPending : state.auth.forgotPending,\r\n    pending : state.auth.pending\r\n  }\r\n)\r\n\r\nLoginFormContainer.propTypes = {\r\n  error : PropTypes.string,\r\n  forgot : PropTypes.func.isRequired,\r\n  forgotError : PropTypes.string,\r\n  forgotPending : PropTypes.bool.isRequired,\r\n  login : PropTypes.func.isRequired,\r\n  pending : PropTypes.bool.isRequired\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { forgot, login }\r\n)(LoginFormContainer)\r\n","import FormError from \"../alerts/form_error\"\r\nimport PasswordReqs from \"../alerts/password_reqs\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { Button, Form, Input, Popup } from \"semantic-ui-react\"\r\n\r\nconst reqsPopup = (comp) =>\r\n  <Popup\r\n    content={<PasswordReqs />}\r\n    header=\"Vaatimukset\"\r\n    on=\"focus\"\r\n    trigger={comp}\r\n  />\r\n\r\nconst ResetPasswordForm = ({ error, onChange, onSubmit, pending, state }) =>\r\n  <Form\r\n    loading={pending}\r\n    onSubmit={onSubmit}\r\n  >\r\n    <Form.Field error={error !== null}>\r\n      <label>Uusi salasana</label>\r\n      {reqsPopup(\r\n        <Input\r\n          name=\"newPassword\"\r\n          onChange={onChange}\r\n          placeholder=\"trustno1\"\r\n          type=\"password\"\r\n          value={state.newPassword}\r\n        />\r\n      )}\r\n    </Form.Field>\r\n    <Form.Field error={error !== null}>\r\n      <label>Vahvista uusi salasana</label>\r\n      {reqsPopup(\r\n        <Input\r\n          name=\"confirmPassword\"\r\n          onChange={onChange}\r\n          placeholder=\"trustno1 (eli sama uudestaan)\"\r\n          type=\"password\"\r\n          value={state.confirmPassword}\r\n        />\r\n      )}\r\n      <FormError error={error} />\r\n    </Form.Field>\r\n    <Button\r\n      content=\"Vaihda\"\r\n      fluid\r\n    />\r\n  </Form>\r\n\r\nResetPasswordForm.propTypes = {\r\n  error : PropTypes.string,\r\n  onChange : PropTypes.func.isRequired,\r\n  onSubmit : PropTypes.func.isRequired,\r\n  pending : PropTypes.bool.isRequired,\r\n  state : PropTypes.object.isRequired\r\n}\r\n\r\nexport default ResetPasswordForm\r\n","import PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport ResetPasswordForm from \"../component/forms/reset_password\"\r\nimport { connect } from \"react-redux\"\r\nimport { resetPassword } from \"../action/auth\"\r\n\r\nconst initState = {\r\n  newPassword : \"\",\r\n  confirmPassword : \"\"\r\n}\r\n\r\nclass ResetPasswordContainer extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = initState\r\n  }\r\n\r\n  handleChange = (e, { name, value }) =>\r\n    this.setState({ [name] : value })\r\n\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    let { history, token } = this.props\r\n\r\n    this.props.resetPassword(this.state, token, history)\r\n    this.setState(initState)\r\n  }\r\n\r\n  render = () =>\r\n    <div>\r\n      <h2 className=\"padded\">Vaihda salasana</h2>\r\n      <ResetPasswordForm\r\n        error={this.props.error}\r\n        onChange={this.handleChange}\r\n        onSubmit={this.handleSubmit}\r\n        pending={this.props.pending}\r\n        state={this.state}\r\n      />\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state, props) => (\r\n  {\r\n    error : state.auth.error,\r\n    pending : state.auth.pending,\r\n    token : props.match.params.token\r\n  }\r\n)\r\n\r\nResetPasswordContainer.propTypes = {\r\n  error : PropTypes.string,\r\n  history : PropTypes.object.isRequired,\r\n  match : PropTypes.object.isRequired,\r\n  pending : PropTypes.bool.isRequired,\r\n  resetPassword : PropTypes.func.isRequired,\r\n  token : PropTypes.string.isRequired\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { resetPassword }\r\n)(ResetPasswordContainer)\r\n","import LoginFormContainer from \"../container/login_form\"\r\nimport React from \"react\"\r\nimport ResetPasswordContainer from \"../container/reset_password\"\r\nimport { Redirect, Route, Switch } from \"react-router-dom\"\r\nimport { withRouter } from \"react-router-dom\"\r\n\r\nconst LoginRoot = () =>\r\n  <Switch>\r\n    <Route\r\n      component={ResetPasswordContainer}\r\n      exact path=\"/reset/:token\"\r\n    />\r\n    <Route\r\n      component={LoginFormContainer}\r\n      path=\"/\"\r\n    />\r\n    <Redirect to=\"/\" />\r\n  </Switch>\r\n\r\nexport default withRouter(LoginRoot)","import PropTypes from \"prop-types\"\r\nimport React, { Component } from \"react\"\r\nimport { Icon } from \"semantic-ui-react\"\r\nimport { withRouter } from \"react-router-dom\"\r\n\r\nclass BackButton extends Component {\r\n  handleClick = (e) => {\r\n    e.preventDefault()\r\n    this.props.history.goBack()\r\n  }\r\n\r\n  render = () => {\r\n    const { pathname } = this.props.history.location\r\n    const pathParts = ( !pathname )\r\n      ? []\r\n      : pathname.split(\"/\")\r\n\r\n    return ( pathParts.length < 3 )\r\n      ? null\r\n      : <Icon\r\n          inverted\r\n          name=\"angle double left\"\r\n          onClick={this.handleClick}\r\n          size=\"large\"\r\n        />\r\n  }\r\n}\r\n\r\nBackButton.propTypes = {\r\n  history : PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withRouter(BackButton)\r\n","import PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { Icon, Menu, Popup } from \"semantic-ui-react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst items = (logout) => [\r\n  {\r\n    key : \"projects\",\r\n    content : \"Työmaat\",\r\n    as : Link,\r\n    to : \"/projects\",\r\n    admin : 0\r\n  },\r\n  {\r\n    key : \"tasks\",\r\n    content : \"Tehtävät\",\r\n    as : Link,\r\n    to : \"/tasks\",\r\n    admin : 0\r\n  },\r\n  {\r\n    key : \"clients\",\r\n    content : \"Asiakkaat\",\r\n    as : Link,\r\n    to : \"/clients\",\r\n    admin : 1\r\n  },\r\n  {\r\n    key : \"materials\",\r\n    content : \"Materiaalit\",\r\n    as : Link,\r\n    to : \"/materials\",\r\n    admin : 0\r\n  },\r\n  {\r\n    key : \"employees\",\r\n    content : \"Henkilöstö\",\r\n    as : Link,\r\n    to : \"/employees\",\r\n    admin : 0\r\n  },\r\n  {\r\n    key : \"my\",\r\n    content : \"Oma sivu\",\r\n    as : Link,\r\n    to : \"/my\",\r\n    admin : 0\r\n  },\r\n  {\r\n    key : \"logout\",\r\n    content : \"Kirjaudu ulos\",\r\n    as : Link,\r\n    to : \"/\",\r\n    onClick : logout,\r\n    admin : 0\r\n  }\r\n]\r\n\r\nconst menu = (admin, logout) => (\r\n  <Menu\r\n    items={( admin )\r\n      ? items(logout)\r\n      : items(logout).filter(i => i.admin === 0)\r\n    }\r\n    secondary\r\n    vertical\r\n  />\r\n)\r\n\r\nconst NavBar = ({ auth, logout }) =>\r\n  <Popup\r\n    content={menu(auth.admin, logout)}\r\n    on=\"click\"\r\n    trigger={\r\n      <Icon\r\n        inverted\r\n        name=\"bars\"\r\n        size=\"large\"\r\n      />\r\n    }\r\n  />\r\n\r\nNavBar.propTypes = {\r\n  auth : PropTypes.object.isRequired,\r\n  logout : PropTypes.func.isRequired,\r\n}\r\n\r\nexport default NavBar\r\n","import BackButton from \"../component/widgets/back_button\"\r\nimport NavBar from \"../component/widgets/navbar\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Container, Grid, Icon } from \"semantic-ui-react\"\r\nimport { logout } from \"../action/auth\"\r\n\r\nclass NavBarContainer extends React.Component {\r\n  handleLogout = () =>\r\n    this.props.logout()\r\n\r\n  render = () => {\r\n    const { auth } = this.props\r\n    return (\r\n      <div className=\"full-width-bg-black\">\r\n        <div\r\n          className=\"wrapper\"\r\n          style={{ padding : \"0.5rem 1.5rem 0.5rem 0rem\" }}\r\n        >\r\n          <Container>\r\n            {( !auth.token )\r\n              ? <Icon\r\n                  name=\"\"\r\n                  size=\"large\"\r\n                />\r\n              : <Grid>\r\n                  <Grid.Column floated=\"left\">\r\n                    <BackButton />\r\n                  </Grid.Column>\r\n                  <Grid.Column floated=\"right\">\r\n                    <NavBar\r\n                      auth={this.props.auth}\r\n                      logout={this.handleLogout}\r\n                    />\r\n                  </Grid.Column>\r\n                </Grid>\r\n            }\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) =>\r\n  ({ auth : state.auth })\r\n\r\nNavBarContainer.propTypes = {\r\n  auth : PropTypes.object.isRequired,\r\n  logout : PropTypes.func.isRequired,\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logout }\r\n)(NavBarContainer)\r\n","import PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Header, Modal } from \"semantic-ui-react\"\r\n\r\nconst Notification = ({ notification }) =>\r\n  ( !notification.message )\r\n    ? null\r\n    : <Modal\r\n      basic\r\n      closeOnDimmerClick={true}\r\n      defaultOpen={true}\r\n      size=\"mini\"\r\n    >\r\n      <Header\r\n        color={( notification.type === \"error\" )\r\n          ? \"red\"\r\n          : \"green\"\r\n        }\r\n        content={notification.message}\r\n        icon={( notification.type === \"error\" )\r\n          ? \"warning sign\"\r\n          : \"checkmark\"\r\n        }\r\n        inverted\r\n      />\r\n    </Modal>\r\n\r\nconst mapStateToProps = (state) =>\r\n  ({ notification : state.notification })\r\n\r\nNotification.propTypes = {\r\n  notification : PropTypes.object.isRequired\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(Notification)\r\n","import Header from \"./component/widgets/header\"\r\nimport HomeRoot from \"./root/home\"\r\nimport LoginRoot from \"./root/login\"\r\nimport NavBarContainer from \"./container/navbar\"\r\nimport Notification from \"./component/alerts/notification\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\nimport { checkAuth } from \"./action/auth\"\r\nimport { connect } from \"react-redux\"\r\nimport { Container } from \"semantic-ui-react\"\r\n\r\nclass App extends React.Component {\r\n  componentDidMount = () =>\r\n    this.props.checkAuth()\r\n\r\n  render = () =>\r\n    <div>\r\n      <Header />\r\n      <NavBarContainer />\r\n      <div className=\"wrapper padded\">\r\n        <Container>\r\n          <Notification />\r\n          {( !this.props.auth.token )\r\n            ? <LoginRoot />\r\n            : <HomeRoot />\r\n          }\r\n        </Container>\r\n      </div>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) =>\r\n  ({ auth : state.auth })\r\n\r\nApp.propTypes = {\r\n  auth : PropTypes.object.isRequired,\r\n  checkAuth : PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { checkAuth }\r\n)(App)\r\n","const initState = {\r\n  error : null,\r\n  pending : false,\r\n  forgotError : null,\r\n  forgotPending : false\r\n}\r\n\r\nconst auth = (state = initState, action) => {\r\n  let { payload, type } = action\r\n\r\n  switch ( type ) {\r\n    case \"LOGIN\" :\r\n      return {\r\n        ...state,\r\n        pending : true\r\n      }\r\n    case \"LOGIN_ERROR\" :\r\n      return {\r\n        ...state,\r\n        error : payload,\r\n        pending : false\r\n      }\r\n    case \"LOGIN_OK\" :\r\n      return {\r\n        ...state,\r\n        error : null,\r\n        pending : false\r\n      }\r\n    case \"SET_AUTH\" :\r\n      return {\r\n        ...initState,\r\n        ...payload\r\n      }\r\n    case \"FORGOT\" :\r\n      return {\r\n        ...state,\r\n        forgotPending : true\r\n      }\r\n    case \"FORGOT_ERROR\" :\r\n      return {\r\n        ...state,\r\n        forgotError : payload,\r\n        forgotPending : false\r\n      }\r\n    case \"FORGOT_OK\" :\r\n      return {\r\n        ...state,\r\n        forgotError : null,\r\n        forgotPending : false\r\n      }\r\n    case \"LOGOUT\" :\r\n      return initState\r\n    default :\r\n      return state\r\n  }\r\n}\r\n\r\nexport default auth\r\n","export const standardDataReducer = (types) => {\r\n  const initState = {\r\n    items : [],\r\n    error : null,\r\n    pending : false,\r\n    updated : 1\r\n  }\r\n\r\n  return (state = initState, action) => {\r\n    let { payload, type } = action\r\n\r\n    switch ( type ) {\r\n      case types.FETCH :\r\n        return {\r\n          ...state,\r\n          pending : true\r\n        }\r\n      case types.FETCH_OK :\r\n        return {\r\n          items : payload,\r\n          error : null,\r\n          pending : false,\r\n          updated : Date.now()\r\n        }\r\n      case types.FETCH_ERROR :\r\n        return {\r\n          ...state,\r\n          error : payload,\r\n          pending : false\r\n        }\r\n      case types.CREATED :\r\n        return {\r\n          ...state,\r\n          items : [ ...state.items, payload ]\r\n        }\r\n      case types.UPDATED : {\r\n        let items = state.items\r\n          .filter(item => item.id !== payload.id)\r\n\r\n        return {\r\n          ...state,\r\n          items : [ ...items, payload ]\r\n        }\r\n      }\r\n      case \"LOGOUT\" :\r\n        return initState\r\n      default :\r\n        return state\r\n    }\r\n  }\r\n}\r\n\r\nexport const standardMinimalReducer = (types) => {\r\n  const initState = { pending : false }\r\n\r\n  return (state = initState, action) => {\r\n    switch ( action.type ) {\r\n      case types.REQUEST_START :\r\n        return {\r\n          pending : true\r\n        }\r\n      case types.REQUEST_OVER :\r\n        return {\r\n          pending : false\r\n        }\r\n      case \"LOGOUT\" :\r\n        return initState\r\n      default :\r\n        return state\r\n    }\r\n  }\r\n}\r\n\r\nexport const standardWriteReducer = (types) => {\r\n  const initState = {\r\n    errors : {},\r\n    pending : false\r\n  }\r\n\r\n  return (state = initState, action) => {\r\n    let { payload, type } = action\r\n\r\n    switch ( type ) {\r\n      case types.WRITE :\r\n        return {\r\n          ...state,\r\n          pending : true\r\n        }\r\n      case types.WRITE_ERROR :\r\n        return {\r\n          ...state,\r\n          pending : false\r\n        }\r\n      case types.WRITE_INVALID :\r\n        return {\r\n          errors : payload,\r\n          pending : false\r\n        }\r\n      case types.WRITE_RESET :\r\n        return initState\r\n      default :\r\n        return state\r\n    }\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\"\r\nimport { standardWriteReducer } from \"./standard_reducers\"\r\nimport { types } from \"../action/employee\"\r\n\r\nconst initState = {\r\n  items : [],\r\n  error : null,\r\n  pending : false,\r\n  updated : 1\r\n}\r\n\r\nconst data = (state = initState, action) => {\r\n  let { payload, type } = action\r\n\r\n  switch ( type ) {\r\n    case types.FETCH :\r\n      return {\r\n        ...state,\r\n        pending : true\r\n      }\r\n    case types.FETCH_OK :\r\n      return {\r\n        items : payload,\r\n        error : null,\r\n        pending : false,\r\n        updated : Date.now()\r\n      }\r\n    case types.FETCH_ERROR :\r\n      return {\r\n        ...state,\r\n        error : payload,\r\n        pending : false\r\n      }\r\n    case types.CREATED :\r\n      return {\r\n        ...state,\r\n        items : [ ...state.items, payload ]\r\n      }\r\n    case types.UPDATED : {\r\n      let items = state.items\r\n        .filter(e => e.id !== payload.id)\r\n\r\n      return {\r\n        ...state,\r\n        items : [ ...items, payload ]\r\n      }\r\n    }\r\n    case types.ASSIGNED : {\r\n      const { employee, project } = payload\r\n\r\n      const items = state.items.filter(e => e.id !== employee)\r\n      const item = state.items.find(e => e.id === employee)\r\n\r\n      item.projects = item.projects.concat(project.id)\r\n\r\n      return {\r\n        ...state,\r\n        items : [ ...items, item ]\r\n      }\r\n    }\r\n    case types.UNASSIGNED : {\r\n      const { employee, project } = payload\r\n\r\n      const items = state.items.filter(e => e.id !== employee)\r\n      const item = state.items.find(e => e.id === employee)\r\n\r\n      item.projects = item.projects.filter(p => p !== project.id)\r\n\r\n      return {\r\n        ...state,\r\n        items : [ ...items, item ]\r\n      }\r\n    }\r\n    case \"LOGOUT\" :\r\n      return initState\r\n    default :\r\n      return state\r\n  }\r\n}\r\n\r\nconst employees = combineReducers({\r\n  data,\r\n  write : standardWriteReducer(types)\r\n})\r\n\r\nexport default employees\r\n","const initState = {\r\n  message : null,\r\n  type : null,\r\n  stack : 0\r\n}\r\n\r\nconst notification = (state = initState, action) => {\r\n  let { payload, type } = action\r\n\r\n  switch ( type ) {\r\n    case \"HIDE_NOTIFICATION\" :\r\n      return ( state.stack < 2 )\r\n        ? initState\r\n        : {\r\n          ...state,\r\n          stack : state.stack - 1\r\n        }\r\n    case \"SET_NOTIFICATION\" :\r\n      return {\r\n        ...payload,\r\n        stack : state.stack + 1\r\n      }\r\n    default :\r\n      return state\r\n  }\r\n}\r\n\r\nexport default notification\r\n","import { combineReducers } from \"redux\"\r\nimport { standardWriteReducer } from \"./standard_reducers\"\r\nimport { types } from \"../action/project\"\r\n\r\nconst initState = {\r\n  items : [],\r\n  error : null,\r\n  pending : false,\r\n  updated : 1\r\n}\r\n\r\nconst data = (state = initState, action) => {\r\n  let { payload, type } = action\r\n\r\n  switch ( type ) {\r\n    case types.FETCH :\r\n      return {\r\n        ...state,\r\n        pending : true\r\n      }\r\n    case types.FETCH_OK :\r\n      return {\r\n        items : payload,\r\n        error : null,\r\n        pending : false,\r\n        updated : Date.now()\r\n      }\r\n    case types.FETCH_ERROR :\r\n      return {\r\n        ...state,\r\n        error : payload,\r\n        pending : false\r\n      }\r\n    case types.CREATED :\r\n      return {\r\n        ...state,\r\n        items : [ ...state.items, payload ]\r\n      }\r\n    case types.UPDATED : {\r\n      let items = state.items\r\n        .filter(p => p.id !== payload.id)\r\n\r\n      return {\r\n        ...state,\r\n        items : [ ...items, payload ]\r\n      }\r\n    }\r\n    case types.ASSIGNED :\r\n    case types.UNASSIGNED : {\r\n      let { project } = payload\r\n      let items = state.items\r\n        .filter(p => p.id !== project.id)\r\n\r\n      return {\r\n        ...state,\r\n        items : [ ...items, project ]\r\n      }\r\n    }\r\n    case \"LOGOUT\" :\r\n      return initState\r\n    default :\r\n      return state\r\n  }\r\n}\r\n\r\nconst projects = combineReducers({\r\n  data,\r\n  write : standardWriteReducer(types)\r\n})\r\n\r\nexport default projects\r\n","import { combineReducers } from \"redux\"\r\nimport {\r\n  standardDataReducer,\r\n  standardMinimalReducer,\r\n  standardWriteReducer\r\n} from \"./standard_reducers\"\r\nimport { types as activity } from \"../action/activity\"\r\nimport { types as attachment } from \"../action/attachment\"\r\nimport { types as client } from \"../action/client\"\r\nimport { types as comment } from \"../action/comment\"\r\nimport { types as material } from \"../action/material\"\r\nimport { types as task } from \"../action/task\"\r\n\r\nexport const activities = combineReducers({\r\n  data : standardDataReducer(activity),\r\n  write : standardWriteReducer(activity)\r\n})\r\n\r\nexport const attachments = standardMinimalReducer(attachment)\r\n\r\nexport const clients = combineReducers({\r\n  data : standardDataReducer(client),\r\n  write : standardWriteReducer(client)\r\n})\r\n\r\nexport const comments = standardMinimalReducer(comment)\r\n\r\nexport const materials = combineReducers({\r\n  data : standardDataReducer(material),\r\n  write : standardWriteReducer(material)\r\n})\r\n\r\nexport const tasks = combineReducers({\r\n  data : standardDataReducer(task),\r\n  write : standardWriteReducer(task)\r\n})\r\n","import thunk from \"redux-thunk\"\r\nimport {\r\n  applyMiddleware,\r\n  combineReducers,\r\n  createStore\r\n} from \"redux\"\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\n\r\nimport auth from \"./reducer/auth\"\r\nimport employees from \"./reducer/employee\"\r\nimport notification from \"./reducer/notification\"\r\nimport projects from \"./reducer/project\"\r\nimport {\r\n  activities,\r\n  attachments,\r\n  clients,\r\n  comments,\r\n  materials,\r\n  tasks\r\n} from \"./reducer/generic\"\r\n\r\nconst reducers = combineReducers({\r\n  activities,\r\n  attachments,\r\n  auth,\r\n  clients,\r\n  comments,\r\n  employees,\r\n  materials,\r\n  notification,\r\n  projects,\r\n  tasks\r\n})\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  composeWithDevTools(\r\n    applyMiddleware(thunk))\r\n)\r\n\r\nexport default store\r\n","import App from \"./app\"\r\nimport React from \"react\"\r\nimport { render } from \"react-dom\"\r\nimport store from \"./store\"\r\nimport { BrowserRouter, Route } from \"react-router-dom\"\r\nimport { Provider } from \"react-redux\"\r\nimport \"./index.css\"\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <Route\r\n        component={App}\r\n        path=\"/\"\r\n      />\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}